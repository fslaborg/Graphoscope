[{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope.html","title":"Graphoscope","content":"AdjGraph \nDiGraph \nFContext \nFGraph \nAdj\u003C\u0027NodeKey, \u0027EdgeData\u003E \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nAdjGraph \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nDiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E \nDiGraph \nDiNode\u003C\u0027NodeData\u003E \nEdge\u003C\u0027NodeKey, \u0027EdgeData\u003E \nFContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nFGraph \nNode\u003C\u0027NodeKey, \u0027NodeData\u003E"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms.html","title":"Graphoscope.Algorithms","content":"BFS \nBellmanFord \nDFS \nDijkstra \nFloydWarshall"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-collections.html","title":"Graphoscope.Collections","content":"Queue"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph.html","title":"Graphoscope.Graph","content":"UndirectedGraph \nUndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E \nUndirectedGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io.html","title":"Graphoscope.IO","content":"GDF"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures.html","title":"Graphoscope.Measures","content":"BetweennessCentrality \nClusteringCoefficient \nDegree \nGraphDensity \nInDegree \nInformationEntropy \nLoop \nOutDegree \nSize \nVolume"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels.html","title":"Graphoscope.RandomModels","content":"BarabasiAlbert \nBollobasRiordan \nGilbert"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected.html","title":"Graphoscope.Undirected","content":"Core \nUndirectedGraph \nUndirectedHelpers"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule.html","title":"AdjGraph","content":"AdjGraph \n \nAdjGraph.Edge \nEdge \nAdjGraph.Node \nNode \nAdjGraph.empty \nempty"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule.html#empty","title":"AdjGraph.empty","content":"AdjGraph.empty \nempty \n \n Creates an empty Adjacency Graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html","title":"Edge","content":"Edge \n \n Functions operating on directed edges\n  \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.add \nadd \nEdge.count \ncount \nEdge.find \nfind \nEdge.iter \niter"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#add","title":"Edge.add","content":"Edge.add \nadd \n\n Add edge\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#count","title":"Edge.count","content":"Edge.count \ncount \n\n Counts all edges \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#find","title":"Edge.find","content":"Edge.find \nfind \n \n Tries to find an edge between the specified nodes. Raises Exception if no such edge exists in the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#iter","title":"Edge.iter","content":"Edge.iter \niter \n\n Applies the given function to each node of the graph\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html","title":"Node","content":"Node \n \n Functions operating on nodes\n  \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.add \nadd \nNode.containsKey \ncontainsKey \nNode.count \ncount \nNode.iter \niter \nNode.iteri \niteri \nNode.map \nmap \nNode.toArray \ntoArray"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#add","title":"Node.add","content":"Node.add \nadd \n\n Adds node to graph [if node exists it is updated]\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#containsKey","title":"Node.containsKey","content":"Node.containsKey \ncontainsKey \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#count","title":"Node.count","content":"Node.count \ncount \n\n Counts all nodes \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#iter","title":"Node.iter","content":"Node.iter \niter \n\n Applies the given function to each node of the graph\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#iteri","title":"Node.iteri","content":"Node.iteri \niteri \n\n Applies the given function to each node of the graph\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#map","title":"Node.map","content":"Node.map \nmap \n\n Builds a graph whose elements are the results of applying the given function to each of the node.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#toArray","title":"Node.toArray","content":"Node.toArray \ntoArray \n\n Converts nodes to nodeKey * nodeData array \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule.html","title":"DiGraph","content":"DiGraph \n \nDiGraph.Edge \nEdge \nDiGraph.Node \nNode \nDiGraph.empty \nempty"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule.html#empty","title":"DiGraph.empty","content":"DiGraph.empty \nempty \n \n Creates an empty DiGraph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule-edge.html","title":"Edge","content":"Edge \n \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.addEdge \naddEdge \nEdge.removeEdge \nremoveEdge"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule-edge.html#addEdge","title":"Edge.addEdge","content":"Edge.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule-edge.html#removeEdge","title":"Edge.removeEdge","content":"Edge.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule-node.html","title":"Node","content":"Node \n \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.addNode \naddNode \nNode.removeNode \nremoveNode"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule-node.html#addNode","title":"Node.addNode","content":"Node.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraphmodule-node.html#removeNode","title":"Node.removeNode","content":"Node.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext.html","title":"FContext","content":"FContext \n \nFContext.predecessors \npredecessors \nFContext.successors \nsuccessors \nFContext.neighbours \nneighbours \nFContext.inwardDegree \ninwardDegree \nFContext.outwardDegree \noutwardDegree \nFContext.degree \ndegree"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext.html#predecessors","title":"FContext.predecessors","content":"FContext.predecessors \npredecessors \n\nLists the vertices which have edges pointing to the vertex.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext.html#successors","title":"FContext.successors","content":"FContext.successors \nsuccessors \n\nLists the vertices which have edges pointing away from the vertex.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext.html#neighbours","title":"FContext.neighbours","content":"FContext.neighbours \nneighbours \n\nLists the vertices which are connected to the vertex.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext.html#inwardDegree","title":"FContext.inwardDegree","content":"FContext.inwardDegree \ninwardDegree \n\nEvaluates the number of edges pointing to the vertex.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext.html#outwardDegree","title":"FContext.outwardDegree","content":"FContext.outwardDegree \noutwardDegree \n\nEvaluates the number of edges pointing away from the vertex.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext.html#degree","title":"FContext.degree","content":"FContext.degree \ndegree \n\nEvaluates the number of edges associated with the vertex.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule.html","title":"FGraph","content":"FGraph \n \nFGraph.Edge \nEdge \nFGraph.Node \nNode \nFGraph.empty \nempty"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule.html#empty","title":"FGraph.empty","content":"FGraph.empty \nempty \n \n Returns a new, empty graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule-edge.html","title":"Edge","content":"Edge \n \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.addEdge \naddEdge \nEdge.removeEdge \nremoveEdge"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule-edge.html#addEdge","title":"Edge.addEdge","content":"Edge.addEdge \naddEdge \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule-edge.html#removeEdge","title":"Edge.removeEdge","content":"Edge.removeEdge \nremoveEdge \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule-node.html","title":"Node","content":"Node \n \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.addNode \naddNode \nNode.removeNode \nremoveNode"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule-node.html#addNode","title":"Node.addNode","content":"Node.addNode \naddNode \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraphmodule-node.html#removeNode","title":"Node.removeNode","content":"Node.removeNode \nremoveNode \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adj-2.html","title":"Adj\u003C\u0027NodeKey, \u0027EdgeData\u003E","content":"Adj\u003C\u0027NodeKey, \u0027EdgeData\u003E \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph-3.html","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \n Basic Adjacency Graph representation\n  \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer \nComparer \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count \nCount \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys \nKeys \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values \nValues"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph-3.html#Comparer","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer \nComparer \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph-3.html#Count","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count \nCount \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph-3.html#Item","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph-3.html#Keys","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys \nKeys \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph-3.html#Values","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values \nValues \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph.html","title":"AdjGraph","content":"AdjGraph \n \n Functions to operate on the AdjGraph representation\n  \nAdjGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAdjGraph.addElement \naddElement \nAdjGraph.create \ncreate \nAdjGraph.ofSeq \nofSeq \nAdjGraph.toAdjMatrix \ntoAdjMatrix \nAdjGraph.toSeq \ntoSeq"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph.html#\u0060\u0060.ctor\u0060\u0060","title":"AdjGraph.\u0060\u0060.ctor\u0060\u0060","content":"AdjGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph.html#addElement","title":"AdjGraph.addElement","content":"AdjGraph.addElement \naddElement \n \n Adds an edge and the corresponding nodes with data to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph.html#create","title":"AdjGraph.create","content":"AdjGraph.create \ncreate \n \n Creates an empty Adjacency Graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph.html#ofSeq","title":"AdjGraph.ofSeq","content":"AdjGraph.ofSeq \nofSeq \n \n Creates an Adjacency graph of a sequence of edges\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph.html#toAdjMatrix","title":"AdjGraph.toAdjMatrix","content":"AdjGraph.toAdjMatrix \ntoAdjMatrix \n \n Converts Adjacency graph to its Adjacency matrix representation\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjgraph.html#toSeq","title":"AdjGraph.toSeq","content":"AdjGraph.toSeq \ntoSeq \n \n Returns the Adjacency graph conetent as a sequence of edges \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjmatrix-3.html","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \n A adjacency matrix storing additional node information \n  \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Bykey \nBykey \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.NodesByKey \nNodesByKey \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Nodes \nNodes"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjmatrix-3.html#\u0060\u0060.ctor\u0060\u0060","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjmatrix-3.html#\u0060\u0060.ctor\u0060\u0060","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjmatrix-3.html#Bykey","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Bykey","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Bykey \nBykey \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjmatrix-3.html#Item","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjmatrix-3.html#NodesByKey","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.NodesByKey","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.NodesByKey \nNodesByKey \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-adjmatrix-3.html#Nodes","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Nodes","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Nodes \nNodes \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph-2.html","title":"DiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E","content":"DiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E \n \nDiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph-2.html#\u0060\u0060.ctor\u0060\u0060","title":"DiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"DiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html","title":"DiGraph","content":"DiGraph \n \nDiGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDiGraph.addEdge \naddEdge \nDiGraph.addEdges \naddEdges \nDiGraph.addElement \naddElement \nDiGraph.addNode \naddNode \nDiGraph.addNodes \naddNodes \nDiGraph.countEdges \ncountEdges \nDiGraph.countNodes \ncountNodes \nDiGraph.createFromEdges \ncreateFromEdges \nDiGraph.createFromNodes \ncreateFromNodes \nDiGraph.find \nfind \nDiGraph.getAllEdges \ngetAllEdges \nDiGraph.getInEdges \ngetInEdges \nDiGraph.getNodes \ngetNodes \nDiGraph.getOutEdges \ngetOutEdges \nDiGraph.normalizeOutEdges \nnormalizeOutEdges \nDiGraph.ofSeq \nofSeq \nDiGraph.removeEdge \nremoveEdge \nDiGraph.removeNode \nremoveNode \nDiGraph.toMatrix \ntoMatrix \nDiGraph.toSeq \ntoSeq"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#\u0060\u0060.ctor\u0060\u0060","title":"DiGraph.\u0060\u0060.ctor\u0060\u0060","content":"DiGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#addEdge","title":"DiGraph.addEdge","content":"DiGraph.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#addEdges","title":"DiGraph.addEdges","content":"DiGraph.addEdges \naddEdges \n \n Adds many edges to a graph at once\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#addElement","title":"DiGraph.addElement","content":"DiGraph.addElement \naddElement \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#addNode","title":"DiGraph.addNode","content":"DiGraph.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#addNodes","title":"DiGraph.addNodes","content":"DiGraph.addNodes \naddNodes \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#countEdges","title":"DiGraph.countEdges","content":"DiGraph.countEdges \ncountEdges \n \n Gets the total number of edges of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#countNodes","title":"DiGraph.countNodes","content":"DiGraph.countNodes \ncountNodes \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#createFromEdges","title":"DiGraph.createFromEdges","content":"DiGraph.createFromEdges \ncreateFromEdges \n \n Builds a graph from a list of edges. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#createFromNodes","title":"DiGraph.createFromNodes","content":"DiGraph.createFromNodes \ncreateFromNodes \n \n Builds a graph from a list of nodes. \n The edges will then need to be added\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#find","title":"DiGraph.find","content":"DiGraph.find \nfind \n \n Tries to find an edge between the specified nodes. Raises KeyNotFoundException if no such edge exists in the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#getAllEdges","title":"DiGraph.getAllEdges","content":"DiGraph.getAllEdges \ngetAllEdges \n \n Returns the all outbound edges in the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#getInEdges","title":"DiGraph.getInEdges","content":"DiGraph.getInEdges \ngetInEdges \n \n Returns the outbound edges for given node\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#getNodes","title":"DiGraph.getNodes","content":"DiGraph.getNodes \ngetNodes \n \n Returns all nodes in te graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#getOutEdges","title":"DiGraph.getOutEdges","content":"DiGraph.getOutEdges \ngetOutEdges \n \n Returns the outbound edges for given node\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#normalizeOutEdges","title":"DiGraph.normalizeOutEdges","content":"DiGraph.normalizeOutEdges \nnormalizeOutEdges \n \n Normalises the weights of outbound edges from each node in a graph.\n The function assumes that the edge data type of the graph will be float. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#ofSeq","title":"DiGraph.ofSeq","content":"DiGraph.ofSeq \nofSeq \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#removeEdge","title":"DiGraph.removeEdge","content":"DiGraph.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#removeNode","title":"DiGraph.removeNode","content":"DiGraph.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#toMatrix","title":"DiGraph.toMatrix","content":"DiGraph.toMatrix \ntoMatrix \n \n Converts the DiGraph to an Adjacency Matrix \n The operation assumes edge data types of float in the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-digraph.html#toSeq","title":"DiGraph.toSeq","content":"DiGraph.toSeq \ntoSeq \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-dinode-1.html","title":"DiNode\u003C\u0027NodeData\u003E","content":"DiNode\u003C\u0027NodeData\u003E \n \nDiNode\u003C\u0027NodeData\u003E.Id \nId \nDiNode\u003C\u0027NodeData\u003E.Data \nData"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-dinode-1.html#Id","title":"DiNode\u003C\u0027NodeData\u003E.Id","content":"DiNode\u003C\u0027NodeData\u003E.Id \nId \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-dinode-1.html#Data","title":"DiNode\u003C\u0027NodeData\u003E.Data","content":"DiNode\u003C\u0027NodeData\u003E.Data \nData \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-edge-2.html","title":"Edge\u003C\u0027NodeKey, \u0027EdgeData\u003E","content":"Edge\u003C\u0027NodeKey, \u0027EdgeData\u003E \n \n Edge representation with generic node key and edge data seperated by default\n  \nEdge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item1 \nItem1 \nEdge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item2 \nItem2 \nEdge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item3 \nItem3"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-edge-2.html#Item1","title":"Edge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item1","content":"Edge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item1 \nItem1 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-edge-2.html#Item2","title":"Edge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item2","content":"Edge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item2 \nItem2 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-edge-2.html#Item3","title":"Edge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item3","content":"Edge\u003C\u0027NodeKey, \u0027EdgeData\u003E.Item3 \nItem3 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext-3.html","title":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \nFContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item1 \nItem1 \nFContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item2 \nItem2 \nFContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item3 \nItem3"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext-3.html#Item1","title":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item1","content":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item1 \nItem1 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext-3.html#Item2","title":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item2","content":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item2 \nItem2 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fcontext-3.html#Item3","title":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item3","content":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item3 \nItem3 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph-3.html","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer \nComparer \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count \nCount \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys \nKeys \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values \nValues"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph-3.html#Comparer","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer \nComparer \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph-3.html#Count","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count \nCount \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph-3.html#Item","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph-3.html#Keys","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys \nKeys \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph-3.html#Values","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values \nValues \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html","title":"FGraph","content":"FGraph \n \nFGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFGraph.addEdge \naddEdge \nFGraph.addEdges \naddEdges \nFGraph.addElement \naddElement \nFGraph.addNode \naddNode \nFGraph.addNodes \naddNodes \nFGraph.containsEdge \ncontainsEdge \nFGraph.containsNode \ncontainsNode \nFGraph.countEdges \ncountEdges \nFGraph.countNodes \ncountNodes \nFGraph.create \ncreate \nFGraph.create \ncreate \nFGraph.createFromNodes \ncreateFromNodes \nFGraph.findEdge \nfindEdge \nFGraph.findNode \nfindNode \nFGraph.iterEdges \niterEdges \nFGraph.iteriEdges \niteriEdges \nFGraph.mapContexts \nmapContexts \nFGraph.ofSeq \nofSeq \nFGraph.removeEdge \nremoveEdge \nFGraph.removeMany \nremoveMany \nFGraph.removeNode \nremoveNode \nFGraph.reverseEdges \nreverseEdges \nFGraph.toArray2D \ntoArray2D \nFGraph.toSeq \ntoSeq \nFGraph.tryAddEdge \ntryAddEdge \nFGraph.tryFindEdge \ntryFindEdge"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#\u0060\u0060.ctor\u0060\u0060","title":"FGraph.\u0060\u0060.ctor\u0060\u0060","content":"FGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#addEdge","title":"FGraph.addEdge","content":"FGraph.addEdge \naddEdge \n\nAdds a labeled, directed edge to the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#addEdges","title":"FGraph.addEdges","content":"FGraph.addEdges \naddEdges \n\nAdd labeled, directed edges to the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#addElement","title":"FGraph.addElement","content":"FGraph.addElement \naddElement \n \n Adds a labeled, directed edge to the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#addNode","title":"FGraph.addNode","content":"FGraph.addNode \naddNode \n\nAdds a labeled node to the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#addNodes","title":"FGraph.addNodes","content":"FGraph.addNodes \naddNodes \n\nAdds labeled nodes to the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#containsEdge","title":"FGraph.containsEdge","content":"FGraph.containsEdge \ncontainsEdge \n\nReturns true, if the edge from vertex v1 to vertex v2 is contained in the graph. Otherwise, it returns false.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#containsNode","title":"FGraph.containsNode","content":"FGraph.containsNode \ncontainsNode \n\nReturns true, if the node v is contained in the graph. Otherwise, it returns false.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#countEdges","title":"FGraph.countEdges","content":"FGraph.countEdges \ncountEdges \n\nEvaluates the number of edges in the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#countNodes","title":"FGraph.countNodes","content":"FGraph.countNodes \ncountNodes \n\nEvaluates the number of nodes in the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#create","title":"FGraph.create","content":"FGraph.create \ncreate \n \n Creates a new graph with the given Data\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#create","title":"FGraph.create","content":"FGraph.create \ncreate \n \n Creates a new graph with the given Data\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#createFromNodes","title":"FGraph.createFromNodes","content":"FGraph.createFromNodes \ncreateFromNodes \n \n Creates a new graph with the given node Data\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#findEdge","title":"FGraph.findEdge","content":"FGraph.findEdge \nfindEdge \n\nLookup a labeled edge in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#findNode","title":"FGraph.findNode","content":"FGraph.findNode \nfindNode \n\nLookup a labeled vertex in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#iterEdges","title":"FGraph.iterEdges","content":"FGraph.iterEdges \niterEdges \n\n Applies the given function on each egdge of the graph\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#iteriEdges","title":"FGraph.iteriEdges","content":"FGraph.iteriEdges \niteriEdges \n\n Applies the given function on every edge of the graph, which also receives an ascending integer index.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#mapContexts","title":"FGraph.mapContexts","content":"FGraph.mapContexts \nmapContexts \n\nMaps contexts of the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#ofSeq","title":"FGraph.ofSeq","content":"FGraph.ofSeq \nofSeq \n \n Creates an Adjacency graph of a sequence of edges\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#removeEdge","title":"FGraph.removeEdge","content":"FGraph.removeEdge \nremoveEdge \n\nRemove a directed edge\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#removeMany","title":"FGraph.removeMany","content":"FGraph.removeMany \nremoveMany \n\nRemoves all edges according to the given removeF\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#removeNode","title":"FGraph.removeNode","content":"FGraph.removeNode \nremoveNode \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#reverseEdges","title":"FGraph.reverseEdges","content":"FGraph.reverseEdges \nreverseEdges \n\n Creates an FGraph consisting of the Nodes of a given FGraph but with its directed Edges reversed.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#toArray2D","title":"FGraph.toArray2D","content":"FGraph.toArray2D \ntoArray2D \n \n Converts the FGraph to an array2d \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#toSeq","title":"FGraph.toSeq","content":"FGraph.toSeq \ntoSeq \n \n Returns the FGraph content as a sequence of edges \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#tryAddEdge","title":"FGraph.tryAddEdge","content":"FGraph.tryAddEdge \ntryAddEdge \n\nAdds a labeled, directed edge to the graph.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-fgraph.html#tryFindEdge","title":"FGraph.tryFindEdge","content":"FGraph.tryFindEdge \ntryFindEdge \n\nLookup a labeled edge in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-node-2.html","title":"Node\u003C\u0027NodeKey, \u0027NodeData\u003E","content":"Node\u003C\u0027NodeKey, \u0027NodeData\u003E \n \n Node representation with generic key and data seperated by default\n  \nNode\u003C\u0027NodeKey, \u0027NodeData\u003E.Item1 \nItem1 \nNode\u003C\u0027NodeKey, \u0027NodeData\u003E.Item2 \nItem2"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-node-2.html#Item1","title":"Node\u003C\u0027NodeKey, \u0027NodeData\u003E.Item1","content":"Node\u003C\u0027NodeKey, \u0027NodeData\u003E.Item1 \nItem1 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-node-2.html#Item2","title":"Node\u003C\u0027NodeKey, \u0027NodeData\u003E.Item2","content":"Node\u003C\u0027NodeKey, \u0027NodeData\u003E.Item2 \nItem2 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bfs.html","title":"BFS","content":"BFS \n \n Breadth-First Traversal (or Search)\n  \nBFS.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBFS.Compute \nCompute \nBFS.Compute \nCompute \nBFS.ofFGraph \nofFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bfs.html#\u0060\u0060.ctor\u0060\u0060","title":"BFS.\u0060\u0060.ctor\u0060\u0060","content":"BFS.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bfs.html#Compute","title":"BFS.Compute","content":"BFS.Compute \nCompute \n \n Traverses nodes reachable from given node in a Breadth-First Traversal (or Search)\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bfs.html#Compute","title":"BFS.Compute","content":"BFS.Compute \nCompute \n \n Traverses nodes reachable from given node in a Breadth-First Traversal (or Search)\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bfs.html#ofFGraph","title":"BFS.ofFGraph","content":"BFS.ofFGraph \nofFGraph \n \n Traverses nodes reachable from given node in a Breadth-First Traversal (or Search)\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bellmanford.html","title":"BellmanFord","content":"BellmanFord \n \n Computes BellmanFord shortest path\n  \nBellmanFord.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBellmanFord.hasNegativeCycles \nhasNegativeCycles \nBellmanFord.ofFGraph \nofFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bellmanford.html#\u0060\u0060.ctor\u0060\u0060","title":"BellmanFord.\u0060\u0060.ctor\u0060\u0060","content":"BellmanFord.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bellmanford.html#hasNegativeCycles","title":"BellmanFord.hasNegativeCycles","content":"BellmanFord.hasNegativeCycles \nhasNegativeCycles \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-bellmanford.html#ofFGraph","title":"BellmanFord.ofFGraph","content":"BellmanFord.ofFGraph \nofFGraph \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dfs.html","title":"DFS","content":"DFS \n \n Depth-First Traversal (or Search)\n  \nDFS.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDFS.ofFGraph \nofFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dfs.html#\u0060\u0060.ctor\u0060\u0060","title":"DFS.\u0060\u0060.ctor\u0060\u0060","content":"DFS.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dfs.html#ofFGraph","title":"DFS.ofFGraph","content":"DFS.ofFGraph \nofFGraph \n \n Traverses nodes reachable from given node in a Depth-First Traversal (or Search)\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html","title":"Dijkstra","content":"Dijkstra \n \n Computes Dijkstra\u0027s shortest path\n  \nDijkstra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDijkstra.compute \ncompute \nDijkstra.compute \ncompute \nDijkstra.computeBetween \ncomputeBetween \nDijkstra.computeBetween \ncomputeBetween \nDijkstra.ofDiGraph \nofDiGraph \nDijkstra.ofDiGraphBetween \nofDiGraphBetween \nDijkstra.ofFGraph \nofFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#\u0060\u0060.ctor\u0060\u0060","title":"Dijkstra.\u0060\u0060.ctor\u0060\u0060","content":"Dijkstra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#compute","title":"Dijkstra.compute","content":"Dijkstra.compute \ncompute \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#compute","title":"Dijkstra.compute","content":"Dijkstra.compute \ncompute \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#computeBetween","title":"Dijkstra.computeBetween","content":"Dijkstra.computeBetween \ncomputeBetween \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#computeBetween","title":"Dijkstra.computeBetween","content":"Dijkstra.computeBetween \ncomputeBetween \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#ofDiGraph","title":"Dijkstra.ofDiGraph","content":"Dijkstra.ofDiGraph \nofDiGraph \n \n Computes shortest paths from \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Esource\u003C/span\u003E for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Dijkstra\u0027s algorithm in parallel.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#ofDiGraphBetween","title":"Dijkstra.ofDiGraphBetween","content":"Dijkstra.ofDiGraphBetween \nofDiGraphBetween \n \n Returns the distance in numebr of directed edges between two nodes.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#ofFGraph","title":"Dijkstra.ofFGraph","content":"Dijkstra.ofFGraph \nofFGraph \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html","title":"FloydWarshall","content":"FloydWarshall \n \n Computes all-pairs shortest paths for a given graph using Floyd-Warshall algorithm.\n\n The ordered array of nodes and 2D Array of distances where each\n row and column index corresponds to a node\u0027s index in the nodes array.\n  \nFloydWarshall.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFloydWarshall.compute \ncompute \nFloydWarshall.fromArray2D \nfromArray2D \nFloydWarshall.fromJaggedArray \nfromJaggedArray"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html#\u0060\u0060.ctor\u0060\u0060","title":"FloydWarshall.\u0060\u0060.ctor\u0060\u0060","content":"FloydWarshall.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html#compute","title":"FloydWarshall.compute","content":"FloydWarshall.compute \ncompute \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html#fromArray2D","title":"FloydWarshall.fromArray2D","content":"FloydWarshall.fromArray2D \nfromArray2D \n \n Computes all-pairs shortest paths for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Floyd-Warshall algorithm.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html#fromJaggedArray","title":"FloydWarshall.fromJaggedArray","content":"FloydWarshall.fromJaggedArray \nfromJaggedArray \n \n Computes all-pairs shortest paths for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Floyd-Warshall algorithm.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-collections-queue.html","title":"Queue","content":"Queue \n \nQueue.datatype \ndatatype"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-collections-queue.html#datatype","title":"Queue.datatype","content":"Queue.datatype \ndatatype \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule.html","title":"UndirectedGraph","content":"UndirectedGraph \n \nUndirectedGraph.Edge \nEdge \nUndirectedGraph.Node \nNode \nUndirectedGraph.empty \nempty"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule.html#empty","title":"UndirectedGraph.empty","content":"UndirectedGraph.empty \nempty \n \n Creates an empty undirected Graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-edge.html","title":"Edge","content":"Edge \n \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.addEdge \naddEdge \nEdge.removeEdge \nremoveEdge"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-edge.html#addEdge","title":"Edge.addEdge","content":"Edge.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-edge.html#removeEdge","title":"Edge.removeEdge","content":"Edge.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-node.html","title":"Node","content":"Node \n \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.addNode \naddNode \nNode.removeNode \nremoveNode"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-node.html#addNode","title":"Node.addNode","content":"Node.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-node.html#removeNode","title":"Node.removeNode","content":"Node.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph-2.html","title":"UndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E","content":"UndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E \n \nUndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph-2.html#\u0060\u0060.ctor\u0060\u0060","title":"UndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"UndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html","title":"UndirectedGraph","content":"UndirectedGraph \n \nUndirectedGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nUndirectedGraph.addEdge \naddEdge \nUndirectedGraph.addEdges \naddEdges \nUndirectedGraph.addElement \naddElement \nUndirectedGraph.addNode \naddNode \nUndirectedGraph.addNodes \naddNodes \nUndirectedGraph.create \ncreate \nUndirectedGraph.createFromEdges \ncreateFromEdges \nUndirectedGraph.createFromNodes \ncreateFromNodes \nUndirectedGraph.find \nfind \nUndirectedGraph.getAllEdges \ngetAllEdges \nUndirectedGraph.getEdges \ngetEdges \nUndirectedGraph.getNodes \ngetNodes \nUndirectedGraph.normalizeEdges \nnormalizeEdges \nUndirectedGraph.ofSeq \nofSeq \nUndirectedGraph.removeEdge \nremoveEdge \nUndirectedGraph.removeNode \nremoveNode \nUndirectedGraph.toSeq \ntoSeq"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#\u0060\u0060.ctor\u0060\u0060","title":"UndirectedGraph.\u0060\u0060.ctor\u0060\u0060","content":"UndirectedGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addEdge","title":"UndirectedGraph.addEdge","content":"UndirectedGraph.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addEdges","title":"UndirectedGraph.addEdges","content":"UndirectedGraph.addEdges \naddEdges \n \n Adds many edges to a graph at once\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addElement","title":"UndirectedGraph.addElement","content":"UndirectedGraph.addElement \naddElement \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addNode","title":"UndirectedGraph.addNode","content":"UndirectedGraph.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addNodes","title":"UndirectedGraph.addNodes","content":"UndirectedGraph.addNodes \naddNodes \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#create","title":"UndirectedGraph.create","content":"UndirectedGraph.create \ncreate \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#createFromEdges","title":"UndirectedGraph.createFromEdges","content":"UndirectedGraph.createFromEdges \ncreateFromEdges \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#createFromNodes","title":"UndirectedGraph.createFromNodes","content":"UndirectedGraph.createFromNodes \ncreateFromNodes \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#find","title":"UndirectedGraph.find","content":"UndirectedGraph.find \nfind \n \n Tries to find an edge between the specified nodes. Raises KeyNotFoundException if no such edge exists in the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#getAllEdges","title":"UndirectedGraph.getAllEdges","content":"UndirectedGraph.getAllEdges \ngetAllEdges \n \n Returns the all edges in the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#getEdges","title":"UndirectedGraph.getEdges","content":"UndirectedGraph.getEdges \ngetEdges \n \n Returns the edges for given node\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#getNodes","title":"UndirectedGraph.getNodes","content":"UndirectedGraph.getNodes \ngetNodes \n \n Returns all nodes in te graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#normalizeEdges","title":"UndirectedGraph.normalizeEdges","content":"UndirectedGraph.normalizeEdges \nnormalizeEdges \n \n Normalises the weights of edges for each node in a graph.\n The function assumes that the edge data type of the graph will be float. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#ofSeq","title":"UndirectedGraph.ofSeq","content":"UndirectedGraph.ofSeq \nofSeq \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#removeEdge","title":"UndirectedGraph.removeEdge","content":"UndirectedGraph.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#removeNode","title":"UndirectedGraph.removeNode","content":"UndirectedGraph.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#toSeq","title":"UndirectedGraph.toSeq","content":"UndirectedGraph.toSeq \ntoSeq \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf.html","title":"GDF","content":"GDF \n \nGDF.GDFEdge \nGDFEdge \nGDF.GDFItem \nGDFItem \nGDF.GDFNode \nGDFNode \nGDF.GDFValue \nGDFValue"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfedge.html","title":"GDFEdge","content":"GDFEdge \n \nGDFEdge.EdgeInfo \nEdgeInfo"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfedge.html#EdgeInfo","title":"GDFEdge.EdgeInfo","content":"GDFEdge.EdgeInfo \nEdgeInfo \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfitem.html","title":"GDFItem","content":"GDFItem \n \nGDFItem.Node \nNode \nGDFItem.Edge \nEdge \nGDFItem.Unknown \nUnknown"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfitem.html#Node","title":"GDFItem.Node","content":"GDFItem.Node \nNode \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfitem.html#Edge","title":"GDFItem.Edge","content":"GDFItem.Edge \nEdge \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfitem.html#Unknown","title":"GDFItem.Unknown","content":"GDFItem.Unknown \nUnknown \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfnode.html","title":"GDFNode","content":"GDFNode \n \nGDFNode.NodeInfo \nNodeInfo"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfnode.html#NodeInfo","title":"GDFNode.NodeInfo","content":"GDFNode.NodeInfo \nNodeInfo \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html","title":"GDFValue","content":"GDFValue \n \nGDFValue.VARCHAR \nVARCHAR \nGDFValue.BOOLEAN \nBOOLEAN \nGDFValue.DOUBLE \nDOUBLE \nGDFValue.INTEGER \nINTEGER"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html#VARCHAR","title":"GDFValue.VARCHAR","content":"GDFValue.VARCHAR \nVARCHAR \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html#BOOLEAN","title":"GDFValue.BOOLEAN","content":"GDFValue.BOOLEAN \nBOOLEAN \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html#DOUBLE","title":"GDFValue.DOUBLE","content":"GDFValue.DOUBLE \nDOUBLE \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html#INTEGER","title":"GDFValue.INTEGER","content":"GDFValue.INTEGER \nINTEGER \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-betweennesscentrality.html","title":"BetweennessCentrality","content":"BetweennessCentrality \n \nBetweennessCentrality.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBetweennessCentrality.Compute \nCompute"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-betweennesscentrality.html#\u0060\u0060.ctor\u0060\u0060","title":"BetweennessCentrality.\u0060\u0060.ctor\u0060\u0060","content":"BetweennessCentrality.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-betweennesscentrality.html#Compute","title":"BetweennessCentrality.Compute","content":"BetweennessCentrality.Compute \nCompute \n\n Computes the betweenness centrality\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html","title":"ClusteringCoefficient","content":"ClusteringCoefficient \n \nClusteringCoefficient.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nClusteringCoefficient.clusteringCoefficientOfDiGraph \nclusteringCoefficientOfDiGraph \nClusteringCoefficient.clusteringCoefficientOfFGraph \nclusteringCoefficientOfFGraph \nClusteringCoefficient.clusteringCoefficientOfFGraphVertex \nclusteringCoefficientOfFGraphVertex \nClusteringCoefficient.clusteringCoefficientOfUndirectedGraph \nclusteringCoefficientOfUndirectedGraph \nClusteringCoefficient.compute \ncompute \nClusteringCoefficient.compute \ncompute \nClusteringCoefficient.compute \ncompute"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#\u0060\u0060.ctor\u0060\u0060","title":"ClusteringCoefficient.\u0060\u0060.ctor\u0060\u0060","content":"ClusteringCoefficient.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfDiGraph","title":"ClusteringCoefficient.clusteringCoefficientOfDiGraph","content":"ClusteringCoefficient.clusteringCoefficientOfDiGraph \nclusteringCoefficientOfDiGraph \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfFGraph","title":"ClusteringCoefficient.clusteringCoefficientOfFGraph","content":"ClusteringCoefficient.clusteringCoefficientOfFGraph \nclusteringCoefficientOfFGraph \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfFGraphVertex","title":"ClusteringCoefficient.clusteringCoefficientOfFGraphVertex","content":"ClusteringCoefficient.clusteringCoefficientOfFGraphVertex \nclusteringCoefficientOfFGraphVertex \n\nEvaluates the clustering coefficient of the vertex.\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfUndirectedGraph","title":"ClusteringCoefficient.clusteringCoefficientOfUndirectedGraph","content":"ClusteringCoefficient.clusteringCoefficientOfUndirectedGraph \nclusteringCoefficientOfUndirectedGraph \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#compute","title":"ClusteringCoefficient.compute","content":"ClusteringCoefficient.compute \ncompute \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#compute","title":"ClusteringCoefficient.compute","content":"ClusteringCoefficient.compute \ncompute \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#compute","title":"ClusteringCoefficient.compute","content":"ClusteringCoefficient.compute \ncompute \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html","title":"Degree","content":"Degree \n \nDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDegree.average \naverage \nDegree.average \naverage \nDegree.average \naverage \nDegree.averageofDiGraph \naverageofDiGraph \nDegree.averageofFGraph \naverageofFGraph \nDegree.averageofUndirectedGraph \naverageofUndirectedGraph \nDegree.distribution \ndistribution \nDegree.distribution \ndistribution \nDegree.distributionOfFGraph \ndistributionOfFGraph \nDegree.distributionofDiGraph \ndistributionofDiGraph \nDegree.maximum \nmaximum \nDegree.maximum \nmaximum \nDegree.maximumOfDiGraph \nmaximumOfDiGraph \nDegree.maximumOfFGraph \nmaximumOfFGraph \nDegree.minimum \nminimum \nDegree.minimum \nminimum \nDegree.minimumOfDiGraph \nminimumOfDiGraph \nDegree.minimumOfFGraph \nminimumOfFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#\u0060\u0060.ctor\u0060\u0060","title":"Degree.\u0060\u0060.ctor\u0060\u0060","content":"Degree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#average","title":"Degree.average","content":"Degree.average \naverage \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#average","title":"Degree.average","content":"Degree.average \naverage \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#average","title":"Degree.average","content":"Degree.average \naverage \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#averageofDiGraph","title":"Degree.averageofDiGraph","content":"Degree.averageofDiGraph \naverageofDiGraph \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#averageofFGraph","title":"Degree.averageofFGraph","content":"Degree.averageofFGraph \naverageofFGraph \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#averageofUndirectedGraph","title":"Degree.averageofUndirectedGraph","content":"Degree.averageofUndirectedGraph \naverageofUndirectedGraph \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#distribution","title":"Degree.distribution","content":"Degree.distribution \ndistribution \n \n Returns the degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#distribution","title":"Degree.distribution","content":"Degree.distribution \ndistribution \n \n Returns the degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#distributionOfFGraph","title":"Degree.distributionOfFGraph","content":"Degree.distributionOfFGraph \ndistributionOfFGraph \n \n Returns the degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#distributionofDiGraph","title":"Degree.distributionofDiGraph","content":"Degree.distributionofDiGraph \ndistributionofDiGraph \n \n Returns the degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#maximum","title":"Degree.maximum","content":"Degree.maximum \nmaximum \n \n Get the max degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#maximum","title":"Degree.maximum","content":"Degree.maximum \nmaximum \n \n Get the max degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#maximumOfDiGraph","title":"Degree.maximumOfDiGraph","content":"Degree.maximumOfDiGraph \nmaximumOfDiGraph \n \n Get the max degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#maximumOfFGraph","title":"Degree.maximumOfFGraph","content":"Degree.maximumOfFGraph \nmaximumOfFGraph \n \n Get the max degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#minimum","title":"Degree.minimum","content":"Degree.minimum \nminimum \n \n Get the min degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#minimum","title":"Degree.minimum","content":"Degree.minimum \nminimum \n \n Get the min degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#minimumOfDiGraph","title":"Degree.minimumOfDiGraph","content":"Degree.minimumOfDiGraph \nminimumOfDiGraph \n \n Get the min degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-degree.html#minimumOfFGraph","title":"Degree.minimumOfFGraph","content":"Degree.minimumOfFGraph \nminimumOfFGraph \n \n Get the min degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-graphdensity.html","title":"GraphDensity","content":"GraphDensity \n \n Computes the graph density\n  \nGraphDensity.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nGraphDensity.compute \ncompute \nGraphDensity.compute \ncompute \nGraphDensity.ofDiGraph \nofDiGraph \nGraphDensity.ofFGraph \nofFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-graphdensity.html#\u0060\u0060.ctor\u0060\u0060","title":"GraphDensity.\u0060\u0060.ctor\u0060\u0060","content":"GraphDensity.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-graphdensity.html#compute","title":"GraphDensity.compute","content":"GraphDensity.compute \ncompute \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-graphdensity.html#compute","title":"GraphDensity.compute","content":"GraphDensity.compute \ncompute \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-graphdensity.html#ofDiGraph","title":"GraphDensity.ofDiGraph","content":"GraphDensity.ofDiGraph \nofDiGraph \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-graphdensity.html#ofFGraph","title":"GraphDensity.ofFGraph","content":"GraphDensity.ofFGraph \nofFGraph \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html","title":"InDegree","content":"InDegree \n \nInDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nInDegree.average \naverage \nInDegree.average \naverage \nInDegree.averageofDiGraph \naverageofDiGraph \nInDegree.averageofFGraph \naverageofFGraph \nInDegree.distribution \ndistribution \nInDegree.distribution \ndistribution \nInDegree.distributionOfDiGraph \ndistributionOfDiGraph \nInDegree.distributionOfFGraph \ndistributionOfFGraph \nInDegree.maximum \nmaximum \nInDegree.maximum \nmaximum \nInDegree.maximumOfDiGraph \nmaximumOfDiGraph \nInDegree.maximumOfFGraph \nmaximumOfFGraph \nInDegree.minimum \nminimum \nInDegree.minimum \nminimum \nInDegree.minimumOfDiGraph \nminimumOfDiGraph \nInDegree.minimumOfFGraph \nminimumOfFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#\u0060\u0060.ctor\u0060\u0060","title":"InDegree.\u0060\u0060.ctor\u0060\u0060","content":"InDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#average","title":"InDegree.average","content":"InDegree.average \naverage \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#average","title":"InDegree.average","content":"InDegree.average \naverage \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#averageofDiGraph","title":"InDegree.averageofDiGraph","content":"InDegree.averageofDiGraph \naverageofDiGraph \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#averageofFGraph","title":"InDegree.averageofFGraph","content":"InDegree.averageofFGraph \naverageofFGraph \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#distribution","title":"InDegree.distribution","content":"InDegree.distribution \ndistribution \n \n Returns the in-degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#distribution","title":"InDegree.distribution","content":"InDegree.distribution \ndistribution \n \n Returns the in-degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#distributionOfDiGraph","title":"InDegree.distributionOfDiGraph","content":"InDegree.distributionOfDiGraph \ndistributionOfDiGraph \n \n Returns the in-degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#distributionOfFGraph","title":"InDegree.distributionOfFGraph","content":"InDegree.distributionOfFGraph \ndistributionOfFGraph \n \n Returns the in-degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#maximum","title":"InDegree.maximum","content":"InDegree.maximum \nmaximum \n \n Get the max In-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#maximum","title":"InDegree.maximum","content":"InDegree.maximum \nmaximum \n \n Get the max In-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#maximumOfDiGraph","title":"InDegree.maximumOfDiGraph","content":"InDegree.maximumOfDiGraph \nmaximumOfDiGraph \n \n Get the max In-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#maximumOfFGraph","title":"InDegree.maximumOfFGraph","content":"InDegree.maximumOfFGraph \nmaximumOfFGraph \n \n Get the max In-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#minimum","title":"InDegree.minimum","content":"InDegree.minimum \nminimum \n \n Get the min In-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#minimum","title":"InDegree.minimum","content":"InDegree.minimum \nminimum \n \n Get the min In-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#minimumOfDiGraph","title":"InDegree.minimumOfDiGraph","content":"InDegree.minimumOfDiGraph \nminimumOfDiGraph \n \n Get the min In-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-indegree.html#minimumOfFGraph","title":"InDegree.minimumOfFGraph","content":"InDegree.minimumOfFGraph \nminimumOfFGraph \n \n Get the min In-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-informationentropy.html","title":"InformationEntropy","content":"InformationEntropy \n \n Computes the graph density\n  \nInformationEntropy.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nInformationEntropy.compute \ncompute \nInformationEntropy.compute \ncompute \nInformationEntropy.ofDiGraph \nofDiGraph \nInformationEntropy.ofFGraph \nofFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-informationentropy.html#\u0060\u0060.ctor\u0060\u0060","title":"InformationEntropy.\u0060\u0060.ctor\u0060\u0060","content":"InformationEntropy.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-informationentropy.html#compute","title":"InformationEntropy.compute","content":"InformationEntropy.compute \ncompute \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-informationentropy.html#compute","title":"InformationEntropy.compute","content":"InformationEntropy.compute \ncompute \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-informationentropy.html#ofDiGraph","title":"InformationEntropy.ofDiGraph","content":"InformationEntropy.ofDiGraph \nofDiGraph \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-informationentropy.html#ofFGraph","title":"InformationEntropy.ofFGraph","content":"InformationEntropy.ofFGraph \nofFGraph \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-loop.html","title":"Loop","content":"Loop \n \nLoop.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nLoop.loopCount \nloopCount \nLoop.loopCount \nloopCount \nLoop.loopCountFGraph \nloopCountFGraph \nLoop.loopCountOfDiGraph \nloopCountOfDiGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-loop.html#\u0060\u0060.ctor\u0060\u0060","title":"Loop.\u0060\u0060.ctor\u0060\u0060","content":"Loop.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-loop.html#loopCount","title":"Loop.loopCount","content":"Loop.loopCount \nloopCount \n \n Get the amount of self loops. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-loop.html#loopCount","title":"Loop.loopCount","content":"Loop.loopCount \nloopCount \n \n Get the amount of self loops. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-loop.html#loopCountFGraph","title":"Loop.loopCountFGraph","content":"Loop.loopCountFGraph \nloopCountFGraph \n \n Get the amount of self loops. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-loop.html#loopCountOfDiGraph","title":"Loop.loopCountOfDiGraph","content":"Loop.loopCountOfDiGraph \nloopCountOfDiGraph \n \n Get the amount of self loops. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html","title":"OutDegree","content":"OutDegree \n \nOutDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nOutDegree.average \naverage \nOutDegree.average \naverage \nOutDegree.averageofDiGraph \naverageofDiGraph \nOutDegree.averageofFGraph \naverageofFGraph \nOutDegree.distribution \ndistribution \nOutDegree.distribution \ndistribution \nOutDegree.distributionOfDiGraph \ndistributionOfDiGraph \nOutDegree.distributionOfFGraph \ndistributionOfFGraph \nOutDegree.maximum \nmaximum \nOutDegree.maximum \nmaximum \nOutDegree.maximumOfDiGraph \nmaximumOfDiGraph \nOutDegree.maximumOfFGraph \nmaximumOfFGraph \nOutDegree.minimum \nminimum \nOutDegree.minimum \nminimum \nOutDegree.minimumOfDiGraph \nminimumOfDiGraph \nOutDegree.minimumOfFGraph \nminimumOfFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#\u0060\u0060.ctor\u0060\u0060","title":"OutDegree.\u0060\u0060.ctor\u0060\u0060","content":"OutDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#average","title":"OutDegree.average","content":"OutDegree.average \naverage \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#average","title":"OutDegree.average","content":"OutDegree.average \naverage \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#averageofDiGraph","title":"OutDegree.averageofDiGraph","content":"OutDegree.averageofDiGraph \naverageofDiGraph \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#averageofFGraph","title":"OutDegree.averageofFGraph","content":"OutDegree.averageofFGraph \naverageofFGraph \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#distribution","title":"OutDegree.distribution","content":"OutDegree.distribution \ndistribution \n \n Returns the out-degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#distribution","title":"OutDegree.distribution","content":"OutDegree.distribution \ndistribution \n \n Returns the out-degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#distributionOfDiGraph","title":"OutDegree.distributionOfDiGraph","content":"OutDegree.distributionOfDiGraph \ndistributionOfDiGraph \n \n Returns the out-degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#distributionOfFGraph","title":"OutDegree.distributionOfFGraph","content":"OutDegree.distributionOfFGraph \ndistributionOfFGraph \n \n Returns the out-degree distribution of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#maximum","title":"OutDegree.maximum","content":"OutDegree.maximum \nmaximum \n \n Get the max out-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#maximum","title":"OutDegree.maximum","content":"OutDegree.maximum \nmaximum \n \n Get the max out-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#maximumOfDiGraph","title":"OutDegree.maximumOfDiGraph","content":"OutDegree.maximumOfDiGraph \nmaximumOfDiGraph \n \n Get the max out-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#maximumOfFGraph","title":"OutDegree.maximumOfFGraph","content":"OutDegree.maximumOfFGraph \nmaximumOfFGraph \n \n Get the max out-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#minimum","title":"OutDegree.minimum","content":"OutDegree.minimum \nminimum \n \n Get the min out-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#minimum","title":"OutDegree.minimum","content":"OutDegree.minimum \nminimum \n \n Get the min out-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#minimumOfDiGraph","title":"OutDegree.minimumOfDiGraph","content":"OutDegree.minimumOfDiGraph \nminimumOfDiGraph \n \n Get the min out-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-outdegree.html#minimumOfFGraph","title":"OutDegree.minimumOfFGraph","content":"OutDegree.minimumOfFGraph \nminimumOfFGraph \n \n Get the min out-degree of the graph. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-size.html","title":"Size","content":"Size \n \nSize.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSize.compute \ncompute \nSize.compute \ncompute \nSize.sizeOfDiGraph \nsizeOfDiGraph \nSize.sizeOfFGraph \nsizeOfFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-size.html#\u0060\u0060.ctor\u0060\u0060","title":"Size.\u0060\u0060.ctor\u0060\u0060","content":"Size.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-size.html#compute","title":"Size.compute","content":"Size.compute \ncompute \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-size.html#compute","title":"Size.compute","content":"Size.compute \ncompute \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-size.html#sizeOfDiGraph","title":"Size.sizeOfDiGraph","content":"Size.sizeOfDiGraph \nsizeOfDiGraph \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-size.html#sizeOfFGraph","title":"Size.sizeOfFGraph","content":"Size.sizeOfFGraph \nsizeOfFGraph \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-volume.html","title":"Volume","content":"Volume \n \nVolume.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nVolume.compute \ncompute \nVolume.compute \ncompute \nVolume.volumeOfDiGraph \nvolumeOfDiGraph \nVolume.volumeOfFGraph \nvolumeOfFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-volume.html#\u0060\u0060.ctor\u0060\u0060","title":"Volume.\u0060\u0060.ctor\u0060\u0060","content":"Volume.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-volume.html#compute","title":"Volume.compute","content":"Volume.compute \ncompute \n \n Gets the total number of edges of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-volume.html#compute","title":"Volume.compute","content":"Volume.compute \ncompute \n \n Gets the total number of edges of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-volume.html#volumeOfDiGraph","title":"Volume.volumeOfDiGraph","content":"Volume.volumeOfDiGraph \nvolumeOfDiGraph \n \n Gets the total number of edges of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-measures-volume.html#volumeOfFGraph","title":"Volume.volumeOfFGraph","content":"Volume.volumeOfFGraph \nvolumeOfFGraph \n \n Gets the total number of edges of the graph\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html","title":"BarabasiAlbert","content":"BarabasiAlbert \n \nBarabasiAlbert.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBarabasiAlbert.init \ninit \nBarabasiAlbert.init \ninit \nBarabasiAlbert.initDiGraph \ninitDiGraph \nBarabasiAlbert.initFGraph \ninitFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#\u0060\u0060.ctor\u0060\u0060","title":"BarabasiAlbert.\u0060\u0060.ctor\u0060\u0060","content":"BarabasiAlbert.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#init","title":"BarabasiAlbert.init","content":"BarabasiAlbert.init \ninit \n \n Returns a DiGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#init","title":"BarabasiAlbert.init","content":"BarabasiAlbert.init \ninit \n \n Returns an FGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#initDiGraph","title":"BarabasiAlbert.initDiGraph","content":"BarabasiAlbert.initDiGraph \ninitDiGraph \n \n Returns a DiGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#initFGraph","title":"BarabasiAlbert.initFGraph","content":"BarabasiAlbert.initFGraph \ninitFGraph \n \n Returns an FGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html","title":"BollobasRiordan","content":"BollobasRiordan \n \nBollobasRiordan.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBollobasRiordan.initDirected \ninitDirected \nBollobasRiordan.initDirected \ninitDirected \nBollobasRiordan.initDirectedDiGraph \ninitDirectedDiGraph \nBollobasRiordan.initDirectedFGraph \ninitDirectedFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#\u0060\u0060.ctor\u0060\u0060","title":"BollobasRiordan.\u0060\u0060.ctor\u0060\u0060","content":"BollobasRiordan.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#initDirected","title":"BollobasRiordan.initDirected","content":"BollobasRiordan.initDirected \ninitDirected \n \n Returns a randomly generated, directed, scale free DiGraph, based on the given paramters.\n  \nIf the given graph has less than 3 vertices, a hard-coded example is used instead. The sum of \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ealpha\u003C/span\u003E, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ebeta\u003C/span\u003E, and \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egamma\u003C/span\u003E must be 1."},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#initDirected","title":"BollobasRiordan.initDirected","content":"BollobasRiordan.initDirected \ninitDirected \n \n Returns a randomly generated, directed, scale free FGraph, based on the given paramters.\n  \nIf the given graph has less than 3 vertices, a hard-coded example is used instead. The sum of \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ealpha\u003C/span\u003E, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ebeta\u003C/span\u003E, and \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egamma\u003C/span\u003E must be 1."},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#initDirectedDiGraph","title":"BollobasRiordan.initDirectedDiGraph","content":"BollobasRiordan.initDirectedDiGraph \ninitDirectedDiGraph \n \n Returns a randomly generated, directed, scale free DiGraph, based on the given paramters.\n  \nIf the given graph has less than 3 vertices, a hard-coded example is used instead. The sum of \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ealpha\u003C/span\u003E, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ebeta\u003C/span\u003E, and \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egamma\u003C/span\u003E must be 1."},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#initDirectedFGraph","title":"BollobasRiordan.initDirectedFGraph","content":"BollobasRiordan.initDirectedFGraph \ninitDirectedFGraph \n \n Returns a randomly generated, directed, scale free FGraph, based on the given paramters.\n  \nIf the given graph has less than 3 vertices, a hard-coded example is used instead. The sum of \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ealpha\u003C/span\u003E, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ebeta\u003C/span\u003E, and \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egamma\u003C/span\u003E must be 1."},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-gilbert.html","title":"Gilbert","content":"Gilbert \n\n Returns an ArrayAdjacencyGraph that is generated randomly with the given parameters.\n\n numberOfNodes indicates the number of vertices the final graph will have. \n probability represents the probability of an edge between 2 vertices.   \n \nGilbert.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nGilbert.initDirectedAdjGraph \ninitDirectedAdjGraph \nGilbert.initDirectedFGraph \ninitDirectedFGraph \nGilbert.initUndirectedFGraph \ninitUndirectedFGraph"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-gilbert.html#\u0060\u0060.ctor\u0060\u0060","title":"Gilbert.\u0060\u0060.ctor\u0060\u0060","content":"Gilbert.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-gilbert.html#initDirectedAdjGraph","title":"Gilbert.initDirectedAdjGraph","content":"Gilbert.initDirectedAdjGraph \ninitDirectedAdjGraph \n \n Inits a directed AdjGraph according to the gilbert random plane networks\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-gilbert.html#initDirectedFGraph","title":"Gilbert.initDirectedFGraph","content":"Gilbert.initDirectedFGraph \ninitDirectedFGraph \n \n Inits a directed FGraph according to the gilbert random plane networks\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-randommodels-gilbert.html#initUndirectedFGraph","title":"Gilbert.initUndirectedFGraph","content":"Gilbert.initUndirectedFGraph \ninitUndirectedFGraph \n \n Inits an undirected FGraph according to the gilbert random plane networks\n "},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-core.html","title":"Core","content":"Core \n \nCore.Result\u003C\u0027TSuccess, \u0027TFailure\u003E \nResult\u003C\u0027TSuccess, \u0027TFailure\u003E"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-core-result-2.html","title":"Result\u003C\u0027TSuccess, \u0027TFailure\u003E","content":"Result\u003C\u0027TSuccess, \u0027TFailure\u003E \n \nResult\u003C\u0027TSuccess, \u0027TFailure\u003E.Success \nSuccess \nResult\u003C\u0027TSuccess, \u0027TFailure\u003E.Failure \nFailure"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-core-result-2.html#Success","title":"Result\u003C\u0027TSuccess, \u0027TFailure\u003E.Success","content":"Result\u003C\u0027TSuccess, \u0027TFailure\u003E.Success \nSuccess \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-core-result-2.html#Failure","title":"Result\u003C\u0027TSuccess, \u0027TFailure\u003E.Failure","content":"Result\u003C\u0027TSuccess, \u0027TFailure\u003E.Failure \nFailure \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph.html","title":"UndirectedGraph","content":"UndirectedGraph \n \nUndirectedGraph.UndirectedGraph\u003C\u0027Node\u003E \nUndirectedGraph\u003C\u0027Node\u003E \nUndirectedGraph.nodesFromEdges \nnodesFromEdges"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph.html#nodesFromEdges","title":"UndirectedGraph.nodesFromEdges","content":"UndirectedGraph.nodesFromEdges \nnodesFromEdges \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html","title":"UndirectedGraph\u003C\u0027Node\u003E","content":"UndirectedGraph\u003C\u0027Node\u003E \n \nUndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nUndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nUndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nUndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nUndirectedGraph\u003C\u0027Node\u003E.AddEdge \nAddEdge \nUndirectedGraph\u003C\u0027Node\u003E.AddEdge \nAddEdge \nUndirectedGraph\u003C\u0027Node\u003E.AddNode \nAddNode \nUndirectedGraph\u003C\u0027Node\u003E.Degree \nDegree \nUndirectedGraph\u003C\u0027Node\u003E.DegreeDistribution \nDegreeDistribution \nUndirectedGraph\u003C\u0027Node\u003E.GetEdges \nGetEdges \nUndirectedGraph\u003C\u0027Node\u003E.GetEdges \nGetEdges \nUndirectedGraph\u003C\u0027Node\u003E.GetNodes \nGetNodes \nUndirectedGraph\u003C\u0027Node\u003E.MeanDegree \nMeanDegree \nUndirectedGraph\u003C\u0027Node\u003E.Size \nSize \nUndirectedGraph\u003C\u0027Node\u003E.Volume \nVolume"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#\u0060\u0060.ctor\u0060\u0060","title":"UndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060","content":"UndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\nadditional constructor to create empty grpah      \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#\u0060\u0060.ctor\u0060\u0060","title":"UndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060","content":"UndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n Construct graph just from unweighted edge list\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#\u0060\u0060.ctor\u0060\u0060","title":"UndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060","content":"UndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n Construct graph just from weighted edge list\n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#\u0060\u0060.ctor\u0060\u0060","title":"UndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060","content":"UndirectedGraph\u003C\u0027Node\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#AddEdge","title":"UndirectedGraph\u003C\u0027Node\u003E.AddEdge","content":"UndirectedGraph\u003C\u0027Node\u003E.AddEdge \nAddEdge \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#AddEdge","title":"UndirectedGraph\u003C\u0027Node\u003E.AddEdge","content":"UndirectedGraph\u003C\u0027Node\u003E.AddEdge \nAddEdge \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#AddNode","title":"UndirectedGraph\u003C\u0027Node\u003E.AddNode","content":"UndirectedGraph\u003C\u0027Node\u003E.AddNode \nAddNode \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#Degree","title":"UndirectedGraph\u003C\u0027Node\u003E.Degree","content":"UndirectedGraph\u003C\u0027Node\u003E.Degree \nDegree \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#DegreeDistribution","title":"UndirectedGraph\u003C\u0027Node\u003E.DegreeDistribution","content":"UndirectedGraph\u003C\u0027Node\u003E.DegreeDistribution \nDegreeDistribution \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#GetEdges","title":"UndirectedGraph\u003C\u0027Node\u003E.GetEdges","content":"UndirectedGraph\u003C\u0027Node\u003E.GetEdges \nGetEdges \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#GetEdges","title":"UndirectedGraph\u003C\u0027Node\u003E.GetEdges","content":"UndirectedGraph\u003C\u0027Node\u003E.GetEdges \nGetEdges \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#GetNodes","title":"UndirectedGraph\u003C\u0027Node\u003E.GetNodes","content":"UndirectedGraph\u003C\u0027Node\u003E.GetNodes \nGetNodes \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#MeanDegree","title":"UndirectedGraph\u003C\u0027Node\u003E.MeanDegree","content":"UndirectedGraph\u003C\u0027Node\u003E.MeanDegree \nMeanDegree \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#Size","title":"UndirectedGraph\u003C\u0027Node\u003E.Size","content":"UndirectedGraph\u003C\u0027Node\u003E.Size \nSize \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedgraph-undirectedgraph-1.html#Volume","title":"UndirectedGraph\u003C\u0027Node\u003E.Volume","content":"UndirectedGraph\u003C\u0027Node\u003E.Volume \nVolume \n"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedhelpers.html","title":"UndirectedHelpers","content":"UndirectedHelpers \n \nUndirectedHelpers.createFromEdgeList \ncreateFromEdgeList"},{"uri":"https://github.com/fslaborg/Graphoscope/reference/graphoscope-undirected-undirectedhelpers.html#createFromEdgeList","title":"UndirectedHelpers.createFromEdgeList","content":"UndirectedHelpers.createFromEdgeList \ncreateFromEdgeList \n"},{"uri":"https://github.com/fslaborg/Graphoscope/A_Dijkstra.html","title":"Dijkstra","content":"(**\n---\ntitle: Dijkstra\ncategory: Algorithms\ncategoryindex: 3\nindex: 1\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Shortest path between all the vertices using Dijkstra Algorithm on an FGraph.\n\nDijkstra algorithm, given by a brilliant Dutch computer scientist and software engineer Dr. Edsger Dijkstra in 1959.\nDijkstra algorithm is a greedy algorithm that solves the single-source shortest path problem for a directed and undirected\ngraph that has non-negative edge weight.\n\nLet\u0027s start with a directed weighted graph. We will find shortest path between all the vertices using Dijkstra Algorithm.\n\n*)\n\nopen Graphoscope\n\nlet dwg =\n    let nodes = [|0,\u0022A\u0022;1,\u0022B\u0022;2,\u0022C\u0022;3,\u0022D\u0022;4,\u0022E\u0022;5,\u0022F\u0022|]\n    let edges = [|0,1,7.;0,2,12.;1,2,2.;1,3,9.;2,4,10.;4,3,4.;3,5,1.;4,5,5.|]\n    FGraph.create(nodes,edges)\n\n(**\nLet\u00B4s have a look on the graph:\n*)\n\n(***hide***)\nopen Cytoscape.NET\nlet vizGraph =\n    CyGraph.initEmpty ()\n    |\u003E CyGraph.withElements [\n            for (sk,s,tk,t,el) in (FGraph.toSeq dwg) do\n                let sk, tk = (string sk), (string tk)\n                yield Elements.node sk [ CyParam.label s ]\n                yield Elements.node tk [ CyParam.label t ]\n                yield Elements.edge  (sprintf \u0022%s_%s\u0022 sk tk) sk tk [ CyParam.label el ]\n        ]\n    |\u003E CyGraph.withStyle \u0022node\u0022\n        [\n            CyParam.content =. CyParam.label\n            CyParam.color \u0022#A00975\u0022\n        ]\n    |\u003E CyGraph.withStyle \u0022edge\u0022\n        [\n            CyParam.content =. CyParam.label\n            CyParam.Curve.style \u0022bezier\u0022\n            CyParam.Target.Arrow.shape \u0022triangle\u0022\n            CyParam.Source.Arrow.shape \u0022circle\u0022\n            CyParam.color \u0022#438AFE\u0022\n        ]\nvizGraph\n|\u003E CyGraph.withZoom(CytoscapeModel.Zoom.Init(ZoomingEnabled=false))\n    |\u003E CyGraph.withLayout (\n        Layout.initCose (Layout.LayoutOptions.Cose(ComponentSpacing=40))\n        )\n|\u003E CyGraph.withSize(800, 400)\n|\u003E Cytoscape.NET.HTML.toGraphHTML() \n(*** include-it-raw ***)\n\n(**\nAnd now, let\u00B4s compute the shortest paths via Dijkstra :\n\n*)\nlet dij = Algorithms.Dijkstra.compute(0,dwg)\n\n\n(**\n# Shortest path between all the vertices using Dijkstra Algorithm on DiGraph.\nComputation of the shortest paths is also available using the DiGraph structure.\nLets compare them using the same graph as above:\n*)\n\n\nlet dwgDiGraph =\n    let nodes = [|0;1;2;3;4;5|]\n    let edges = [|0,1,7.;0,2,12.;1,2,2.;1,3,9.;2,4,10.;4,3,4.;3,5,1.;4,5,5.|]\n    DiGraph.createFromNodes nodes\n    |\u003E DiGraph.addEdges edges\n    \n\nlet dijDiGraph = Algorithms.Dijkstra.compute(0,dwgDiGraph)"},{"uri":"https://github.com/fslaborg/Graphoscope/A_FloydWarshall.html","title":"Floyd-Warshall","content":"(**\n---\ntitle: Floyd-Warshall\ncategory: Algorithms\ncategoryindex: 3\nindex: 2\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Introducing the Floyd-Warshall Algorithm for All-Pairs Shortest Path in Graphs\nThe Floyd-Warshall algorithm is a widely used algorithm in graph theory and computer science for finding the shortest paths between all pairs of vertices in a weighted graph. It is named after its inventors, Robert Floyd and Stephen Warshall, who independently proposed it in the early 1960s.\n\nThe algorithm works on both directed and undirected graphs, where edges have non-negative weights (can be zero or positive but not negative). The goal is to find the shortest path distance between all pairs of vertices in the graph.\n\n\nFloyd-Warshall and Dijkstra\u0027s algorithm are both used to find the shortest paths in a graph, but they serve different purposes and have different use cases. \n\nThey are not direct alternatives to each other; rather, they are used in different scenarios based on the problem requirements and the characteristics of the graph.\n*)\n\nopen Graphoscope\nopen Cytoscape.NET\n\nlet dwgDiGraph =\n    let nodes = [|0;1;2;3;4;5|]\n    let edges = [|0,1,7.;0,2,12.;1,2,2.;1,3,9.;2,4,10.;4,3,4.;3,5,1.;4,5,5.|]\n    DiGraph.createFromNodes nodes\n    |\u003EDiGraph.addEdges edges \n    \n\nlet dijDiGraph = Algorithms.FloydWarshall.fromJaggedArray  (DiGraph.toMatrix dwgDiGraph)"},{"uri":"https://github.com/fslaborg/Graphoscope/G_Digraph_2_Intro.html","title":"DiGraph","content":"(**\n---\ntitle: DiGraph\ncategory: Graphoscope \ncategoryindex: 1\nindex: 2 \n---\n*)\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\nPlotly.NET.Defaults.DefaultDisplayOptions \u003C-\n    Plotly.NET.DisplayOptions.init (PlotlyJSReference = Plotly.NET.PlotlyJSReference.NoReference)\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Datastructure \nThe DiGraph is a graph representation that uses a fast node-index-based lookup of edge data, utilizing ResizeArrays for efficient storage and retrieval of information.\nThe structure is visualised here:\n\n[![](https://mermaid.ink/img/pako:eNpdkM8KwjAMxl9FclLQF9hBUDt1iF70ZLtDWKMrunbUDhHx3U39Q8Wevv6-JB_JHSqnCTI4nN21qtGH3k4o2-M3kcIsPLZ1ORqNp32j19gOPhYTIV0Xcn2kS5lgLo39ZVNmM7nhiBXdPkwwK94yTzLSuYy9AgOWyV_8w5iz_M78Bi1jUMosXn4hog1DaMg3aDSveY81CkJNDSnIWGr0JwXKPrgOu-C2N1tBFnxHQ-hajYGEwaPHBrIDni9MW7R759KftAnOr993fJ3z8QQLO2iF?type=png)](https://mermaid.live/edit#pako:eNpdkM8KwjAMxl9FclLQF9hBUDt1iF70ZLtDWKMrunbUDhHx3U39Q8Wevv6-JB_JHSqnCTI4nN21qtGH3k4o2-M3kcIsPLZ1ORqNp32j19gOPhYTIV0Xcn2kS5lgLo39ZVNmM7nhiBXdPkwwK94yTzLSuYy9AgOWyV_8w5iz_M78Bi1jUMosXn4hog1DaMg3aDSveY81CkJNDSnIWGr0JwXKPrgOu-C2N1tBFnxHQ-hajYGEwaPHBrIDni9MW7R759KftAnOr993fJ3z8QQLO2iF)\n\n# Quickstart \n\nWe can build a graph from scratch. Either by passing an array of edges:\n*)\nopen Graphoscope\nopen DiGraph\n\n[|(0, 1, 1.0); (0, 2, 1.0); (1, 1, 1.0); (1, 3, 1.0); (3, 2, 1.0); (4, 0, 1.0)|]\n|\u003E DiGraph.createFromEdges\n\n(**\nor by creating an empty graph and adding the nodes and edges one by one. \nThe int and float after the \u0022create\u0022 define the type of the nodes and edges.\n*)\n\nlet emptyGraph :DiGraph\u003Cint, float\u003E = DiGraph.empty\n\nlet edge = (1,3, 1.0)\n\nlet filledGraph =\n  emptyGraph\n  |\u003E DiGraph.addNode 1\n  |\u003E DiGraph.addNode 2\n  |\u003E DiGraph.addNode 3\n  |\u003E DiGraph.addEdge edge\n\n(***hide***)\nlet filledGraphNodes = filledGraph |\u003E DiGraph.countNodes|\u003E sprintf \u0022Manually created a graph with %i nodes\u0022\n(*** include-value: filledGraphNodes ***)\n\n(**\n# Working with Graphs\n\n# From Data\nFor illustration, we will import a directed graph from The [KONECT Project](http://konect.cc/) website. This is an excellent resource with many graphs in an edge list based format which is simple\nto import and analyse using Graphoscope. We will start by importing a [graph](http://konect.cc/networks/moreno_rhesus/) describing the grooming interactions between rhesus monkeys.\n\nCreate a monkeys.fsx and run the following code to import and print some basic measures. Further documention of DiGraph functionality is [here](reference/graphoscope-digraph.html)\n*)\n\nopen FSharp.Data\n\nlet getElementOfFile (fullpath: string) (delimiter: string) (headerRows: int) (weightsIncluded: bool)  = \n        let rows  = CsvFile.Load(fullpath, delimiter, skipRows = headerRows, hasHeaders = false).Rows\n        rows\n        |\u003E Seq.map (fun row -\u003E int row[0],int row[0], int row[1],int row[1], if weightsIncluded then float row[2] else 1.0)\n\n\nlet file = __SOURCE_DIRECTORY__ \u002B \u0022/../tests/Graphoscope.Tests/ReferenceGraphs/out.moreno_rhesus_rhesus.txt\u0022\nlet monkeyGraph = \n  \n  CsvFile.Load(file, \u0022 \u0022, skipRows = 2, hasHeaders = false).Rows\n  |\u003E Seq.map (fun row -\u003E \n              int row[0],int row[0], int row[1],int row[1], float row[2])\n  |\u003E DiGraph.ofSeq\n\n\n\n(***hide***)\nlet outputMonkeyGraph = sprintf \u0022Successfully imported the graph! It has %i nodes and %i edges. The average degree is %f \u0022 (DiGraph.countNodes monkeyGraph) (DiGraph.countEdges monkeyGraph) (Measures.Degree.average monkeyGraph)\n(*** include-value: outputMonkeyGraph ***)\n\n\n(**\nWe can also import undirected graphs using the [Graph](reference/graphoscope-graph.html) namespace. These examples use the [Karate club](http://konect.cc/networks/ucidata-zachary/) graph.\n*)\n\nlet karateFile= __SOURCE_DIRECTORY__ \u002B \u0022/../tests/Graphoscope.Tests/ReferenceGraphs/zachary.txt\u0022\nlet karateGraph = \n  let g = DiGraph.empty\u003Cint, float\u003E\n  getElementOfFile karateFile \u0022 \u0022 2 false\n  |\u003E Seq.iter(fun (s1,s2,t1,t2,w: float) -\u003E DiGraph.addElement s1 s2 t1 t2 w g|\u003Eignore)\n  g\n\n(***hide***)\nlet karateOutput = sprintf \u0022Successfully imported the undirected karate graph! It has %i nodes and %i edges. The average degree is %f \u0022 (DiGraph.countNodes karateGraph) (DiGraph.countEdges karateGraph) (Measures.Degree.average karateGraph)\n(*** include-value: karateOutput ***)\n\n(**\nA conversion into an Adjacency Matrix is also very easily achievable. It can be executed as follows. \n*)\nlet monkeyAdjacencyMatrix = DiGraph.toMatrix monkeyGraph\n(***include-value: monkeyAdjacencyMatrix***)\n\n(**\n## Charting\nConsider using [Plotly.NET](https://plotly.net/) for charting. Built on top of plotly.js, it is a mature library offering a wide range of customisable charts. \nHere is a basic example showing degree distribution within the Karate club. \n*)\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\nopen Plotly.NET\n\nMeasures.Degree.distribution karateGraph\n|\u003E Chart.Histogram\n|\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://github.com/fslaborg/Graphoscope/G_FGraph_3_Intro.html","title":"FGraph","content":"(**\n---\ntitle: FGraph\ncategory: Graphoscope \ncategoryindex: 1\nindex: 3 \n---\n*)\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 4.1.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# What is FGraph\n\nThe FGraph is an adaptation of a functional graph. \nIn programming, a functional graph typically refers to a data structure or representation used to model and analyze the flow of data or the dependencies between functions in a functional programming paradigm. \nFunctional programming emphasizes the use of pure functions and avoids mutable state, making functional graphs particularly useful for understanding and optimizing the execution of functional programs.\nIt is compromised of a Dictionary, containing the nodeIndex as Key and the so called FContext as Value. The structure is visualised here:\n\n\n[![](https://mermaid.ink/img/pako:eNpNj80KwjAQhF9F9qSgL9CDoI2tIoigJxMPS7Jaf5qUJEWL-O5utaJ7mv1mmGUfoJ0hSOBwdTddoI-9rVC2xzORWe6xKvaj0XjaX3HsQs2g85il_Sx1NtI9djBlKOTakyFNITgf9j9jJtsGgRH_YCY3tdaB_rKCcS4n5oyarG46mrX0I3OW83fZkr52yxZyZo6fAzCEknyJJ8OPPdqIglhQSQoSlgb9RYGyT85hHd2msRqS6GsaQl0ZjCROePRYQnLAa2Baod05992fLxMxYKE?type=png)](https://mermaid.live/edit#pako:eNpNj80KwjAQhF9F9qSgL9CDoI2tIoigJxMPS7Jaf5qUJEWL-O5utaJ7mv1mmGUfoJ0hSOBwdTddoI-9rVC2xzORWe6xKvaj0XjaX3HsQs2g85il_Sx1NtI9djBlKOTakyFNITgf9j9jJtsGgRH_YCY3tdaB_rKCcS4n5oyarG46mrX0I3OW83fZkr52yxZyZo6fAzCEknyJJ8OPPdqIglhQSQoSlgb9RYGyT85hHd2msRqS6GsaQl0ZjCROePRYQnLAa2Baod05992fLxMxYKE)\n\n\n# Quickstart \n## Creating an empty graph and filling it with single elements\nBegin by creating an empty graph,meaning a data structure with no nodes or edges. \nThen populate the graph with single elements, individual nodes are added one by one, and edges can be introduced to establish connections between them.\n*)\n\nopen Graphoscope\nopen FGraph\n\nlet graphToFill =\n\n    FGraph.empty\n    |\u003E FGraph.addNode 1 \u00221\u0022\n    |\u003E FGraph.addNode 2 \u00222\u0022\n    |\u003E FGraph.addEdge 1 2 1.\n\n\n(***hide***)\nlet graphToFillOutput = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022 (FGraph.countNodes graphToFill) (FGraph.countEdges graphToFill)\n(*** include-value: graphToFillOutput ***)\n\n(**    \n# Working with Graphs\n\n## Creating a Graph using FGraph\n### Creating an empty graph and add collections of elements\nAnother way of creating a graph is by filling it with collections of nodes and edges as seen below:\n\n*)\nlet graphToFill\u0027 =\n    \n    let nodes = List.init 100 (fun x -\u003E x,$\u0022{x}\u0022)\n\n    let edges = List.init 45 (fun x -\u003E x,x*2,1.)\n\n    FGraph.empty\n    |\u003E FGraph.addNodes nodes\n    |\u003E FGraph.addEdges edges\n\n(***hide***)\nlet graphToFill2Output = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022(FGraph.countNodes graphToFill\u0027) (FGraph.countEdges graphToFill\u0027)\n(*** include-value: graphToFill2Output ***)\n\n(**\n### Removing Nodes and Edges\nTo remove Nodes or Edges you can just use the remove functions provided:\n*)\nlet graphWithRemovedElements =\n    graphToFill\u0027\n    |\u003E FGraph.removeEdge 1 2\n    |\u003E FGraph.removeNode 0\n\n(***hide***)\nlet removing = sprintf \u0022You have reduced the graph to %i nodes and %i edges\u0022 (FGraph.countNodes graphWithRemovedElements) (FGraph.countEdges graphWithRemovedElements)\n(*** include-value: removing ***)\n\n(**\n##\n\n# From Data\n## Import a graph  \n\nThis directed network contains observed grooming episodes between free ranging rhesus macaques (Macaca mulatta) \nin Cayo Santiago during a two month period in 1963. Cayo Santiago is an island off the coast of Puerto Rico, also \nknown as Isla de los monos (Island of the monkeys). A node represents a monkey and a directed edge A \u2192 B denotes \nthat the rhesus macaque A groomed rhesus macaque B. The integer edge weights indicate how often this behaviour was observed.\n\n\n*)\nopen Graphoscope\n\nopen FSharpAux.IO\nopen FSharpAux.IO.SchemaReader.Attribute\n\n\n(**\nFirst we model the input domain as a reccord type and read a sequence of MonkeyEdges\n*)\ntype MonkeyEdge = {\n    [\u003CField(0)\u003E] Source  : int\n    [\u003CField(1)\u003E] Target  : int\n    [\u003CField(2)\u003E] Groomed : int\n}\n\nlet monkeyEdges =\n    Seq.fromFileWithCsvSchema\u003CMonkeyEdge\u003E(\u0022D:/Source/Graphoscope/tests/Graphoscope.Tests/ReferenceGraphs/out.moreno_rhesus_rhesus.txt\u0022,\u0027 \u0027,false,skipLines=2 )\n\n(**\nConvert a MonkeyEdge record to a sequence of graph elements (sourceKey * sourceData * targetKey * targetData * edgeData)\n*)\nlet monkeyGraph =\n    monkeyEdges\n    |\u003E Seq.map (fun mke -\u003E\n        mke.Source, sprintf \u0022Monkey_%i\u0022 mke.Source,mke.Target,sprintf \u0022Monkey_%i\u0022 mke.Target,float mke.Groomed)\n    |\u003E FGraph.ofSeq\n\n(**\nlet\u0027s use Cytoscape.NET for visualization:\n*)\n\nopen Cytoscape.NET\nlet vizGraph =\n    CyGraph.initEmpty ()\n    |\u003E CyGraph.withElements [\n            for (sk,s,tk,t,el) in (FGraph.toSeq monkeyGraph) do\n                let sk, tk = (string sk), (string tk)\n                yield Elements.node sk [ CyParam.label s ]\n                yield Elements.node tk [ CyParam.label t ]\n                yield Elements.edge  (sprintf \u0022%s_%s\u0022 sk tk) sk tk [ CyParam.label el ]\n        ]\n    |\u003E CyGraph.withStyle \u0022node\u0022     \n        [\n            CyParam.content =. CyParam.label\n            CyParam.color \u0022#A00975\u0022\n        ]\n\n(***hide***)\nvizGraph \n|\u003E CyGraph.withZoom(CytoscapeModel.Zoom.Init(ZoomingEnabled=false)) \n|\u003E CyGraph.withSize(800, 400) \n|\u003E HTML.toGraphHTML()\n(*** include-it-raw ***)\n"},{"uri":"https://github.com/fslaborg/Graphoscope/index.html","title":"Getting Started","content":"(**\n---\ntitle: Getting Started\ncategory: Graphoscope \ncategoryindex: 1\nindex: 1 \n---\n\n# Graphoscope\n\nThe Graphoscope project aims to provide a rigorous and performant tool for Network Science. \nIt is aimed at anyone who works with Graphs/Networks and does not require a strong knowledge of F# to get started. \n\n# Getting Started \n\n## Prerequisites \n\nTo set up a dev environment, we recommend [VSCode](https://code.visualstudio.com/) with the [Ionide](https://marketplace.visualstudio.com/items?itemName=Ionide.Ionide-fsharp) plugin  \nYou will also need [DotNet 6](https://dotnet.microsoft.com/en-us/download/dotnet/6.0) installed.\n\nThe library is designed primarily for use in an fsharp scripting environment using .fsx files. \nBut it also works well in [notebooks](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode).\nThis [video](https://www.youtube.com/watch?v=1ROKvmcOloo\u0026list=PLdo4fOcmZ0oUFghYOp89baYFBTGxUkC7Z\u0026index=3) has a good walk through of setting your environment. \n\n# Contributing and copyright\n\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork \nthe project and submit pull requests. If you\u0027re adding a new public API, please also \nconsider adding [samples][docs] that can be turned into a documentation. You might\nalso want to read the [library design notes][readme] to understand how it works.\n\nThe library is available under the OSI-approved MIT license, which allows modification and \nredistribution for both commercial and non-commercial purposes. For more information see the \n[License file][license] in the GitHub repository. \n\n  [docs]: https://github.com/fslaborg/Graphoscope/tree/main/docs\n  [gh]: https://github.com/fslaborg/Graphoscope\n  [issues]: https://github.com/fslaborg/Graphoscope/issues\n  [readme]: https://github.com/fslaborg/Graphoscope/blob/main/README.md\n  [license]: https://github.com/fslaborg/Graphoscope/blob/main/LICENSE\n*)"},{"uri":"https://github.com/fslaborg/Graphoscope/M_1_Degree.html","title":"Degree","content":"(**\n---\ntitle: Degree\ncategory: Measures \ncategoryindex: 2\nindex: 1 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\nPlotly.NET.Defaults.DefaultDisplayOptions \u003C-\n    Plotly.NET.DisplayOptions.init (PlotlyJSReference = Plotly.NET.PlotlyJSReference.NoReference)\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Intoduction to Measures using FGraph\nGraphoscope provides a comprehensive set of measurement tools designed to analyze, quantify, and interpret the features of graphs. \nThese measurements offer valuable insights into the topology, connectivity, and dynamics of your networks. \nWhether you are exploring social connections, optimizing communication pathways, or studying the spread of diseases, our graph measurement functionalities are here to simplify your analysis and decision-making processes.\n## Reading a complete graph representation\nStep 1 is the loading of our [example graph](http://konect.cc/networks/moreno_rhesus/), sourced from [The KONECT Project](http://konect.cc) describing the grooming interactions between rhesus monkeys.\n*)\n(***hide***)\nopen Graphoscope\nopen Plotly.NET\nopen FSharpAux.IO\nopen FSharpAux.IO.SchemaReader.Attribute\ntype MonkeyEdge = {\n    [\u003CField(0)\u003E] Source  : int\n    [\u003CField(1)\u003E] Target  : int\n    [\u003CField(2)\u003E] Groomed : int\n}\nlet monkeyGraph =\n    Seq.fromFileWithCsvSchema\u003CMonkeyEdge\u003E(@\u0022tests\\Graphoscope.Tests\\ReferenceGraphs\\out.moreno_rhesus_rhesus.txt\u0022,\u0027 \u0027,false,skipLines=2 )\n    |\u003E Seq.map (fun mke -\u003E\n        mke.Source, sprintf \u0022Monkey_%i\u0022 mke.Source,mke.Target,sprintf \u0022Monkey_%i\u0022 mke.Target,float mke.Groomed)\n    |\u003E FGraph.ofSeq\nlet monkeyGraph2 =\n    let g = DiGraph.empty\u003Cint,float\u003E\n    Seq.fromFileWithCsvSchema\u003CMonkeyEdge\u003E(@\u0022tests\\Graphoscope.Tests\\ReferenceGraphs\\out.moreno_rhesus_rhesus.txt\u0022,\u0027 \u0027,false,skipLines=2 )\n    |\u003E Seq.iter (fun mke -\u003E\n        DiGraph.addElement mke.Source  (mke.Source) mke.Target (mke.Target) (float mke.Groomed) g|\u003Eignore)\n    g\n\n(**\n## Degree\nIn graph science, a degree is a fundamental concept that plays a crucial role in understanding the structure and properties of graphs. \nThe degree of a node in a graph is defined as the number of edges incident to that node, i.e., the number of connections that node has with other nodes in the graph. \nThe degree is a basic measure that provides valuable information about the topology and connectivity of the graph.\n\n### Average Degree\nThe average degree (also known as the average node degree or average connectivity) of a graph is a measure that indicates, on average, how many connections each node has in the network.\n*)\n\nlet averageDegreeMokeyGraph     = Measures.Degree.average monkeyGraph\nlet averageDegreeMokeyGraph2    = Measures.Degree.average monkeyGraph2\n\n(***hide***)\nlet avD = sprintf \u0022The average degree is %f for FGraph and %f fOr DiGraph\u0022 (averageDegreeMokeyGraph) (averageDegreeMokeyGraph2)\n(*** include-value: avD ***)\n\n(**\n### Max Degree\nThe maximum degree of a graph provides insights into the importance of highly connected nodes (hubs) within the network. \nUnderstanding hubs is crucial for analyzing network resilience, efficiency, and vulnerability\n*)\n\nlet maxDregree = Measures.Degree.maximum monkeyGraph\n\n(***hide***)\nlet maxD = sprintf \u0022The maximal degree is %i\u0022 (maxDregree)\n(*** include-value: maxD ***)\n\n(**\n### Degree Distribution\nDegree distribution is an important concept in graph theory and network science that describes the statistical pattern of node degrees in a graph. \nIt provides valuable insights into the connectivity and structure of networks and plays a crucial role in understanding various aspects of complex systems.\n*)\n\nMeasures.Degree.distribution monkeyGraph\n|\u003E Chart.Histogram\n|\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://github.com/fslaborg/Graphoscope/M_2_NetworkDensity.html","title":"Network Density","content":"(**\n---\ntitle: Network Density\ncategory: Measures \ncategoryindex: 2\nindex: 2 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Intoduction to Measures using FGraph\nGraphoscope provides a comprehensive set of measurement tools designed to analyze, quantify, and interpret the features of graphs. \nThese measurements offer valuable insights into the topology, connectivity, and dynamics of your networks. \nWhether you are exploring social connections, optimizing communication pathways, or studying the spread of diseases, our graph measurement functionalities are here to simplify your analysis and decision-making processes.\n## Creating a graph by reading a complete graph representation as one.\nStep 1 is the loading of our [example graph](http://konect.cc/networks/moreno_rhesus/), sourced from [The KONECT Project](http://konect.cc) describing the grooming interactions between rhesus monkeys.\n*)\n(***hide***)\nopen Graphoscope\nopen FSharpAux.IO\nopen FSharpAux.IO.SchemaReader.Attribute\ntype MonkeyEdge = {\n    [\u003CField(0)\u003E] Source  : int\n    [\u003CField(1)\u003E] Target  : int\n    [\u003CField(2)\u003E] Groomed : int\n}\nlet monkeyGraph =\n    Seq.fromFileWithCsvSchema\u003CMonkeyEdge\u003E(@\u0022tests\\Graphoscope.Tests\\ReferenceGraphs\\out.moreno_rhesus_rhesus.txt\u0022,\u0027 \u0027,false,skipLines=2 )\n    |\u003E Seq.map (fun mke -\u003E\n        mke.Source, sprintf \u0022Monkey_%i\u0022 mke.Source,mke.Target,sprintf \u0022Monkey_%i\u0022 mke.Target,float mke.Groomed)\n    |\u003E FGraph.ofSeq\n(**\n\n## NetworkDensity\nNetwork density measures the proportion of connections or edges present in a network relative to the total possible number of connections. \nIt quantifies the level of interconnectedness between nodes in the network and carries several key implications for the Connectivity of the graph.\n*)\nlet networkDensity = Measures.GraphDensity.compute monkeyGraph\n\n(***hide***)\nlet density = sprintf \u0022The network density of the monkey graph is %f\u0022 networkDensity\n(*** include-value: density ***)"},{"uri":"https://github.com/fslaborg/Graphoscope/M_3_Loops.html","title":"Loops","content":"(**\n---\ntitle: Loops\ncategory: Measures \ncategoryindex: 2\nindex: 3 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Intoduction to Measures using FGraph\nGraphoscope provides a comprehensive set of measurement tools designed to analyze, quantify, and interpret the features of graphs. \nThese measurements offer valuable insights into the topology, connectivity, and dynamics of your networks. \nWhether you are exploring social connections, optimizing communication pathways, or studying the spread of diseases, our graph measurement functionalities are here to simplify your analysis and decision-making processes.\n## Creating a graph by reading a complete graph representation as one.\nStep 1 is the loading of our [example graph](http://konect.cc/networks/moreno_rhesus/), sourced from [The KONECT Project](http://konect.cc) describing the grooming interactions between rhesus monkeys.\n*)\n(***hide***)\nopen Graphoscope\nopen FSharpAux.IO\nopen FSharpAux.IO.SchemaReader.Attribute\ntype MonkeyEdge = {\n    [\u003CField(0)\u003E] Source  : int\n    [\u003CField(1)\u003E] Target  : int\n    [\u003CField(2)\u003E] Groomed : int\n}\nlet monkeyGraph =\n    Seq.fromFileWithCsvSchema\u003CMonkeyEdge\u003E(@\u0022tests\\Graphoscope.Tests\\ReferenceGraphs\\out.moreno_rhesus_rhesus.txt\u0022,\u0027 \u0027,false,skipLines=2 )\n    |\u003E Seq.map (fun mke -\u003E\n        mke.Source, sprintf \u0022Monkey_%i\u0022 mke.Source,mke.Target,sprintf \u0022Monkey_%i\u0022 mke.Target,float mke.Groomed)\n    |\u003E FGraph.ofSeq\n(**\n## Loops\nThe loop count of a graph, also known as the number of self-loops, refers to the number of edges in the graph that connect a node to itself. \nWhile some may consider self-loops as noise or artifacts, in other cases, they offer valuable insights into the system being modeled and form an integral part of the graph\u0027s structure.\n*)\n\nlet loopCount = Measures.Loop.loopCount monkeyGraph\n\n(***hide***)\nlet loop = sprintf \u0022The graph has %i loops\u0022loopCount\n(*** include-value: loop ***)"},{"uri":"https://github.com/fslaborg/Graphoscope/R_BarabasiAlbert.html","title":"Barab\u00E1si-Albert","content":"(**\n---\ntitle: Barab\u00E1si-Albert\ncategory: Random Graph \ncategoryindex: 4\nindex: 4 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Random graph models\n## Barab\u00E1si-Albert model\n\nThe Barab\u00E1si-Albert (BA) model is a popular network growth model used to generate random scale-free networks.  \nIt provides a valuable tool for generating synthetic networks that exhibit similar properties to many natural and man-made networks, mainly a scale-free character.\n*)\n\nopen Graphoscope\nopen Graphoscope.RandomModels\nlet N = 50\n\nlet edgesPerIteration = 5\n\n// let myBarabasiAlbert = RandomModels.BarabasiAlbert.initFGraph  N edgesPerIteration id id (fun x -\u003E 1.) FGraph.empty\n\n//printfn\u0022You have created a graph with %i nodes and %i edges\u0022(FGraph.countNodes myBarabasiAlbert) (FGraph.countEdges myBarabasiAlbert)\n"},{"uri":"https://github.com/fslaborg/Graphoscope/R_BollobasRiordan.html","title":"Bollobas-Riordan","content":"(**\n---\ntitle: Bollobas-Riordan\ncategory: Random Graph \ncategoryindex: 4\nindex: 3 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 4.1.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Random graph models\n## Bollob\u00E1s-Riordan methode\nThe Bollob\u00E1s-Riordan method, proposed by mathematicians B\u00E9la Bollob\u00E1s and Oliver Riordan, is a procedure for generating random graphs with a given degree sequence\nIt allows researchers to explore and analyze the properties of large-scale networks and complex systems in a stochastic setting.\n*)\nopen Graphoscope\nopen Graphoscope.RandomModels\nlet N = 50\n\nlet myBollobasRiordan = RandomModels.BollobasRiordan.initDirectedFGraph  N 0.1 0.6 0.3 0.6 0.4 FGraph.empty\n\n(***hide***)\nlet g = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022(FGraph.countNodes myBollobasRiordan) (FGraph.countEdges myBollobasRiordan)\n(*** include-value: g ***)"},{"uri":"https://github.com/fslaborg/Graphoscope/R_Gilbert.html","title":"Gilbert","content":"(**\n---\ntitle: Gilbert\ncategory: Random Graph \ncategoryindex: 4\nindex: 2 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Random graph models\n## Gilbert model\n\nThe gilbert model (or G(N,p) model) was introduced by Edgar Gilbert in 1959. In this model, you assign a fixed amount of vertices N and a probability p.\np denotes the probality, that edge between two vertices exists or not.  \n*)\nopen Graphoscope\nopen Graphoscope.RandomModels\nlet N = 50\nlet p = 0.5\n\nlet myGilbertGraph = Gilbert.initDirectedFGraph N p\n\n(***hide***)\nlet g = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022(FGraph.countNodes myGilbertGraph) (FGraph.countEdges myGilbertGraph)\n(*** include-value: g ***)"},{"uri":"https://github.com/fslaborg/Graphoscope/R_RandomGraphs.html","title":"Random Graph generation","content":"(**\n---\ntitle: Random Graph generation\ncategory: Random Graph \ncategoryindex: 4\nindex: 1 \n---\n\n# Random graph models\n## Motivation and overview\nIn every implementation workflow, there comes the point where you have to test wether everything works as expexted or not.\nFor this, a matching test set is necessary. In some cases (e.g. List sorting algorithms) creating those test sets is done in a matter of seconds.\nIn other cases, especially if the data you work with is more than one dimensional, it can get quite tedious.\nTo this effect, FSharp.FGl comes equipped with implementations of random graph generation models.  \nIn this tutorial I want to introduce you to the models implemented and how to generate graphs with the given functions:\n    \n* Gilbert model\n\n* Barab\u00E1si-Albert model\n\n* Bollob\u00E1s-Riordan methode \n*)"}]