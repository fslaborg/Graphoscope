[{"uri":"https://fslab.org/Graphoscope/reference/graphoscope.html","title":"Graphoscope","content":"AdjGraph \nDiGraph \nFContext \nFGraph \nAdj\u003C\u0027NodeKey, \u0027EdgeData\u003E \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nAdjGraph \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nDiGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nDiGraph \nFContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \nFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms.html","title":"Graphoscope.Algorithms","content":"BFS \nBellmanFord \nComponents \nDFS \nDijkstra \nFloydWarshall \nLouvain \nWedgeCount"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph.html","title":"Graphoscope.Graph","content":"UndirectedGraph \nUndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E \nUndirectedGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io.html","title":"Graphoscope.IO","content":"GDF"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures.html","title":"Graphoscope.Measures","content":"BetweennessCentrality \nClosenessCentrality \nClusteringCoefficient \nDegree \nDiameter \nEccentricity \nGraphDensity \nInDegree \nInformationEntropy \nLoop \nMatchingIndex \nOutDegree \nRadius \nSize \nVolume"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels.html","title":"Graphoscope.RandomModels","content":"BarabasiAlbert \nBollobasRiordan \nCompleteGraph \nErdosRenyi \nGilbert \nRegularRingLattice \nStarGraph \nWattsStrogatz"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule.html","title":"AdjGraph","content":"AdjGraph \n \nAdjGraph.Edge \nEdge \nAdjGraph.Node \nNode \nAdjGraph.empty \nempty"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule.html#empty","title":"AdjGraph.empty","content":"AdjGraph.empty \nempty \n \n Creates an empty Adjacency Graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html","title":"Edge","content":"Edge \n \n Functions operating on directed edges\n  \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.add \nadd \nEdge.count \ncount \nEdge.find \nfind \nEdge.iter \niter"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#add","title":"Edge.add","content":"Edge.add \nadd \n\n Add edge\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#count","title":"Edge.count","content":"Edge.count \ncount \n\n Counts all edges \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#find","title":"Edge.find","content":"Edge.find \nfind \n \n Tries to find an edge between the specified nodes. Raises Exception if no such edge exists in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-edge.html#iter","title":"Edge.iter","content":"Edge.iter \niter \n\n Applies the given function to each node of the graph\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html","title":"Node","content":"Node \n \n Functions operating on nodes\n  \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.addNode \naddNode \nNode.containsKey \ncontainsKey \nNode.count \ncount \nNode.iter \niter \nNode.iteri \niteri \nNode.map \nmap \nNode.removeNode \nremoveNode \nNode.toArray \ntoArray"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#addNode","title":"Node.addNode","content":"Node.addNode \naddNode \n\n Adds node to graph [if node exists it is updated]\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#containsKey","title":"Node.containsKey","content":"Node.containsKey \ncontainsKey \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#count","title":"Node.count","content":"Node.count \ncount \n\n Counts all nodes \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#iter","title":"Node.iter","content":"Node.iter \niter \n\n Applies the given function to each node of the graph\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#iteri","title":"Node.iteri","content":"Node.iteri \niteri \n\n Applies the given function to each node of the graph\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#map","title":"Node.map","content":"Node.map \nmap \n\n Builds a graph whose elements are the results of applying the given function to each of the node.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#removeNode","title":"Node.removeNode","content":"Node.removeNode \nremoveNode \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraphmodule-node.html#toArray","title":"Node.toArray","content":"Node.toArray \ntoArray \n\n Converts nodes to nodeKey * nodeData array \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule.html","title":"DiGraph","content":"DiGraph \n \nDiGraph.Edge \nEdge \nDiGraph.Node \nNode \nDiGraph.empty \nempty"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule.html#empty","title":"DiGraph.empty","content":"DiGraph.empty \nempty \n \n Creates an empty DiGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-edge.html","title":"Edge","content":"Edge \n \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.addEdge \naddEdge \nEdge.removeEdge \nremoveEdge"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-edge.html#addEdge","title":"Edge.addEdge","content":"Edge.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-edge.html#removeEdge","title":"Edge.removeEdge","content":"Edge.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-node.html","title":"Node","content":"Node \n \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.addNode \naddNode \nNode.getNodeData \ngetNodeData \nNode.removeNode \nremoveNode"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-node.html#addNode","title":"Node.addNode","content":"Node.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-node.html#getNodeData","title":"Node.getNodeData","content":"Node.getNodeData \ngetNodeData \n \n Returns Node Data for a given node from the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraphmodule-node.html#removeNode","title":"Node.removeNode","content":"Node.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext.html","title":"FContext","content":"FContext \n \nFContext.predecessors \npredecessors \nFContext.successors \nsuccessors \nFContext.neighbours \nneighbours \nFContext.inwardDegree \ninwardDegree \nFContext.outwardDegree \noutwardDegree \nFContext.degree \ndegree \nFContext.clone \nclone"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext.html#predecessors","title":"FContext.predecessors","content":"FContext.predecessors \npredecessors \n\nLists the vertices which have edges pointing to the vertex.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext.html#successors","title":"FContext.successors","content":"FContext.successors \nsuccessors \n\nLists the vertices which have edges pointing away from the vertex.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext.html#neighbours","title":"FContext.neighbours","content":"FContext.neighbours \nneighbours \n\nLists the vertices which are connected to the vertex.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext.html#inwardDegree","title":"FContext.inwardDegree","content":"FContext.inwardDegree \ninwardDegree \n\nEvaluates the number of edges pointing to the vertex.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext.html#outwardDegree","title":"FContext.outwardDegree","content":"FContext.outwardDegree \noutwardDegree \n\nEvaluates the number of edges pointing away from the vertex.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext.html#degree","title":"FContext.degree","content":"FContext.degree \ndegree \n\nEvaluates the number of edges associated with the vertex.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext.html#clone","title":"FContext.clone","content":"FContext.clone \nclone \n\n Clones context \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule.html","title":"FGraph","content":"FGraph \n \nFGraph.Edge \nEdge \nFGraph.Node \nNode \nFGraph.empty \nempty"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule.html#empty","title":"FGraph.empty","content":"FGraph.empty \nempty \n \n Returns a new, empty graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule-edge.html","title":"Edge","content":"Edge \n \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.addEdge \naddEdge \nEdge.removeEdge \nremoveEdge"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule-edge.html#addEdge","title":"Edge.addEdge","content":"Edge.addEdge \naddEdge \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule-edge.html#removeEdge","title":"Edge.removeEdge","content":"Edge.removeEdge \nremoveEdge \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule-node.html","title":"Node","content":"Node \n \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.addNode \naddNode \nNode.removeNode \nremoveNode"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule-node.html#addNode","title":"Node.addNode","content":"Node.addNode \naddNode \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraphmodule-node.html#removeNode","title":"Node.removeNode","content":"Node.removeNode \nremoveNode \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adj-2.html","title":"Adj\u003C\u0027NodeKey, \u0027EdgeData\u003E","content":"Adj\u003C\u0027NodeKey, \u0027EdgeData\u003E \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph-3.html","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \n Basic Adjacency Graph representation\n  \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer \nComparer \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count \nCount \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys \nKeys \nAdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values \nValues"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph-3.html#Comparer","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer \nComparer \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph-3.html#Count","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count \nCount \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph-3.html#Item","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph-3.html#Keys","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys \nKeys \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph-3.html#Values","title":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values","content":"AdjGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values \nValues \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html","title":"AdjGraph","content":"AdjGraph \n \n Functions to operate on the AdjGraph representation\n  \nAdjGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAdjGraph.addEdge \naddEdge \nAdjGraph.addEdges \naddEdges \nAdjGraph.addElement \naddElement \nAdjGraph.addNode \naddNode \nAdjGraph.addNodes \naddNodes \nAdjGraph.containsEdge \ncontainsEdge \nAdjGraph.containsNode \ncontainsNode \nAdjGraph.countEdges \ncountEdges \nAdjGraph.countNodes \ncountNodes \nAdjGraph.create \ncreate \nAdjGraph.findEdge \nfindEdge \nAdjGraph.findNode \nfindNode \nAdjGraph.getDegree \ngetDegree \nAdjGraph.getNeighbours \ngetNeighbours \nAdjGraph.iterEdge \niterEdge \nAdjGraph.iterNodes \niterNodes \nAdjGraph.iteriNodes \niteriNodes \nAdjGraph.map \nmap \nAdjGraph.mapContexts \nmapContexts \nAdjGraph.ofSeq \nofSeq \nAdjGraph.removeEdge \nremoveEdge \nAdjGraph.removeMany \nremoveMany \nAdjGraph.removeNode \nremoveNode \nAdjGraph.setNodeData \nsetNodeData \nAdjGraph.toAdjMatrix \ntoAdjMatrix \nAdjGraph.toArray2D \ntoArray2D \nAdjGraph.toEdgeSeq \ntoEdgeSeq \nAdjGraph.toNodeArray \ntoNodeArray \nAdjGraph.toSeq \ntoSeq \nAdjGraph.tryAddEdge \ntryAddEdge \nAdjGraph.tryFindEdge \ntryFindEdge"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#\u0060\u0060.ctor\u0060\u0060","title":"AdjGraph.\u0060\u0060.ctor\u0060\u0060","content":"AdjGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#addEdge","title":"AdjGraph.addEdge","content":"AdjGraph.addEdge \naddEdge \n\n Add edge\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#addEdges","title":"AdjGraph.addEdges","content":"AdjGraph.addEdges \naddEdges \n\nAdd labeled edges to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#addElement","title":"AdjGraph.addElement","content":"AdjGraph.addElement \naddElement \n \n Adds an edge and the corresponding nodes with data to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#addNode","title":"AdjGraph.addNode","content":"AdjGraph.addNode \naddNode \n\nAdds a labeled node to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#addNodes","title":"AdjGraph.addNodes","content":"AdjGraph.addNodes \naddNodes \n\nAdds labeled nodes to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#containsEdge","title":"AdjGraph.containsEdge","content":"AdjGraph.containsEdge \ncontainsEdge \n\nReturns true, if the edge from vertex v1 to vertex v2 is contained in the graph. Otherwise, it returns false.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#containsNode","title":"AdjGraph.containsNode","content":"AdjGraph.containsNode \ncontainsNode \n\nReturns true, if the node v is contained in the graph. Otherwise, it returns false.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#countEdges","title":"AdjGraph.countEdges","content":"AdjGraph.countEdges \ncountEdges \n\n Counts all edges \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#countNodes","title":"AdjGraph.countNodes","content":"AdjGraph.countNodes \ncountNodes \n\nEvaluates the number of nodes in the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#create","title":"AdjGraph.create","content":"AdjGraph.create \ncreate \n \n Creates an empty Adjacency Graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#findEdge","title":"AdjGraph.findEdge","content":"AdjGraph.findEdge \nfindEdge \n \n Tries to find an edge between the specified nodes. Raises Exception if no such edge exists in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#findNode","title":"AdjGraph.findNode","content":"AdjGraph.findNode \nfindNode \n\nLookup a labeled vertex in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#getDegree","title":"AdjGraph.getDegree","content":"AdjGraph.getDegree \ngetDegree \n\nReturns the degree of a node nk \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#getNeighbours","title":"AdjGraph.getNeighbours","content":"AdjGraph.getNeighbours \ngetNeighbours \n\nReturns the neighours of a node nk with their EdgeData\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#iterEdge","title":"AdjGraph.iterEdge","content":"AdjGraph.iterEdge \niterEdge \n\n Applies the given function to each node of the graph\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#iterNodes","title":"AdjGraph.iterNodes","content":"AdjGraph.iterNodes \niterNodes \n\n Applies the given function to each node of the graph\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#iteriNodes","title":"AdjGraph.iteriNodes","content":"AdjGraph.iteriNodes \niteriNodes \n\n Applies the given function to each node of the graph\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#map","title":"AdjGraph.map","content":"AdjGraph.map \nmap \n\n Builds a graph whose elements are the results of applying the given function to each of the node.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#mapContexts","title":"AdjGraph.mapContexts","content":"AdjGraph.mapContexts \nmapContexts \n\nMaps contexts of the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#ofSeq","title":"AdjGraph.ofSeq","content":"AdjGraph.ofSeq \nofSeq \n \n Creates an Adjacency graph of a sequence of edges\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#removeEdge","title":"AdjGraph.removeEdge","content":"AdjGraph.removeEdge \nremoveEdge \n\nRemove an edge\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#removeMany","title":"AdjGraph.removeMany","content":"AdjGraph.removeMany \nremoveMany \n\nRemoves all edges according to the given removeF\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#removeNode","title":"AdjGraph.removeNode","content":"AdjGraph.removeNode \nremoveNode \n\nRemove the Node and all edges connected to it\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#setNodeData","title":"AdjGraph.setNodeData","content":"AdjGraph.setNodeData \nsetNodeData \n\nSet the NodeData of a given NodeKey to the given NodeData\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#toAdjMatrix","title":"AdjGraph.toAdjMatrix","content":"AdjGraph.toAdjMatrix \ntoAdjMatrix \n \n Converts Adjacency graph to its Adjacency matrix representation\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#toArray2D","title":"AdjGraph.toArray2D","content":"AdjGraph.toArray2D \ntoArray2D \n \n Converts the FGraph to an array2d \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#toEdgeSeq","title":"AdjGraph.toEdgeSeq","content":"AdjGraph.toEdgeSeq \ntoEdgeSeq \n \n Returns the FGraph edges as a sequence of edges \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#toNodeArray","title":"AdjGraph.toNodeArray","content":"AdjGraph.toNodeArray \ntoNodeArray \n\n Converts nodes to nodeKey * nodeData array \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#toSeq","title":"AdjGraph.toSeq","content":"AdjGraph.toSeq \ntoSeq \n \n Returns the Adjacency graph conetent as a sequence of edges \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#tryAddEdge","title":"AdjGraph.tryAddEdge","content":"AdjGraph.tryAddEdge \ntryAddEdge \n\nAdds a labeled edge to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjgraph.html#tryFindEdge","title":"AdjGraph.tryFindEdge","content":"AdjGraph.tryFindEdge \ntryFindEdge \n\nLookup a labeled edge in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjmatrix-3.html","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \n A adjacency matrix storing additional node information \n  \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Bykey \nBykey \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.NodesByKey \nNodesByKey \nAdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Nodes \nNodes"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjmatrix-3.html#\u0060\u0060.ctor\u0060\u0060","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjmatrix-3.html#\u0060\u0060.ctor\u0060\u0060","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjmatrix-3.html#Bykey","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Bykey","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Bykey \nBykey \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjmatrix-3.html#Item","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjmatrix-3.html#NodesByKey","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.NodesByKey","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.NodesByKey \nNodesByKey \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-adjmatrix-3.html#Nodes","title":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Nodes","content":"AdjMatrix\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Nodes \nNodes \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-3.html","title":"DiGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"DiGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \nDiGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-3.html#\u0060\u0060.ctor\u0060\u0060","title":"DiGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"DiGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html","title":"DiGraph","content":"DiGraph \n \nDiGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDiGraph.addEdge \naddEdge \nDiGraph.addEdges \naddEdges \nDiGraph.addElement \naddElement \nDiGraph.addNode \naddNode \nDiGraph.addNodes \naddNodes \nDiGraph.countEdges \ncountEdges \nDiGraph.countNodes \ncountNodes \nDiGraph.createFromEdges \ncreateFromEdges \nDiGraph.createFromNodes \ncreateFromNodes \nDiGraph.find \nfind \nDiGraph.getAllEdges \ngetAllEdges \nDiGraph.getInEdges \ngetInEdges \nDiGraph.getNodes \ngetNodes \nDiGraph.getOutEdges \ngetOutEdges \nDiGraph.normalizeOutEdges \nnormalizeOutEdges \nDiGraph.ofSeq \nofSeq \nDiGraph.removeEdge \nremoveEdge \nDiGraph.removeNode \nremoveNode \nDiGraph.toMatrix \ntoMatrix \nDiGraph.toSeq \ntoSeq"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#\u0060\u0060.ctor\u0060\u0060","title":"DiGraph.\u0060\u0060.ctor\u0060\u0060","content":"DiGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#addEdge","title":"DiGraph.addEdge","content":"DiGraph.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#addEdges","title":"DiGraph.addEdges","content":"DiGraph.addEdges \naddEdges \n \n Adds many edges to a graph at once\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#addElement","title":"DiGraph.addElement","content":"DiGraph.addElement \naddElement \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#addNode","title":"DiGraph.addNode","content":"DiGraph.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#addNodes","title":"DiGraph.addNodes","content":"DiGraph.addNodes \naddNodes \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#countEdges","title":"DiGraph.countEdges","content":"DiGraph.countEdges \ncountEdges \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#countNodes","title":"DiGraph.countNodes","content":"DiGraph.countNodes \ncountNodes \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#createFromEdges","title":"DiGraph.createFromEdges","content":"DiGraph.createFromEdges \ncreateFromEdges \n \n Builds a graph from a list of edges. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#createFromNodes","title":"DiGraph.createFromNodes","content":"DiGraph.createFromNodes \ncreateFromNodes \n \n Builds a graph from a list of nodes. \n The edges will then need to be added\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#find","title":"DiGraph.find","content":"DiGraph.find \nfind \n \n Tries to find an edge between the specified nodes. Raises KeyNotFoundException if no such edge exists in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#getAllEdges","title":"DiGraph.getAllEdges","content":"DiGraph.getAllEdges \ngetAllEdges \n \n Returns the all outbound edges in the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#getInEdges","title":"DiGraph.getInEdges","content":"DiGraph.getInEdges \ngetInEdges \n \n Returns the outbound edges for given node\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#getNodes","title":"DiGraph.getNodes","content":"DiGraph.getNodes \ngetNodes \n \n Returns all nodes in te graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#getOutEdges","title":"DiGraph.getOutEdges","content":"DiGraph.getOutEdges \ngetOutEdges \n \n Returns the outbound edges for given node\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#normalizeOutEdges","title":"DiGraph.normalizeOutEdges","content":"DiGraph.normalizeOutEdges \nnormalizeOutEdges \n \n Normalises the weights of outbound edges from each node in a graph.\n The function assumes that the edge data type of the graph will be float. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#ofSeq","title":"DiGraph.ofSeq","content":"DiGraph.ofSeq \nofSeq \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#removeEdge","title":"DiGraph.removeEdge","content":"DiGraph.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#removeNode","title":"DiGraph.removeNode","content":"DiGraph.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#toMatrix","title":"DiGraph.toMatrix","content":"DiGraph.toMatrix \ntoMatrix \n \n Converts the DiGraph to an Adjacency Matrix \n The operation assumes edge data types of float in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html#toSeq","title":"DiGraph.toSeq","content":"DiGraph.toSeq \ntoSeq \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext-3.html","title":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \nFContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item1 \nItem1 \nFContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item2 \nItem2 \nFContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item3 \nItem3"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext-3.html#Item1","title":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item1","content":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item1 \nItem1 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext-3.html#Item2","title":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item2","content":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item2 \nItem2 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fcontext-3.html#Item3","title":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item3","content":"FContext\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item3 \nItem3 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph-3.html","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E \n \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer \nComparer \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count \nCount \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys \nKeys \nFGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values \nValues"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph-3.html#Comparer","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Comparer \nComparer \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph-3.html#Count","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Count \nCount \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph-3.html#Item","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Item \nItem \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph-3.html#Keys","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Keys \nKeys \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph-3.html#Values","title":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values","content":"FGraph\u003C\u0027NodeKey, \u0027NodeData, \u0027EdgeData\u003E.Values \nValues \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html","title":"FGraph","content":"FGraph \n \nFGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFGraph.addEdge \naddEdge \nFGraph.addEdges \naddEdges \nFGraph.addElement \naddElement \nFGraph.addNode \naddNode \nFGraph.addNodes \naddNodes \nFGraph.clone \nclone \nFGraph.containsEdge \ncontainsEdge \nFGraph.containsNode \ncontainsNode \nFGraph.countEdges \ncountEdges \nFGraph.countNodes \ncountNodes \nFGraph.create \ncreate \nFGraph.create \ncreate \nFGraph.createFromNodes \ncreateFromNodes \nFGraph.findEdge \nfindEdge \nFGraph.findNode \nfindNode \nFGraph.iterEdges \niterEdges \nFGraph.iteriEdges \niteriEdges \nFGraph.mapContexts \nmapContexts \nFGraph.ofSeq \nofSeq \nFGraph.removeEdge \nremoveEdge \nFGraph.removeMany \nremoveMany \nFGraph.removeNode \nremoveNode \nFGraph.reverseEdges \nreverseEdges \nFGraph.setNodeData \nsetNodeData \nFGraph.toArray2D \ntoArray2D \nFGraph.toEdgeSeq \ntoEdgeSeq \nFGraph.toSeq \ntoSeq \nFGraph.tryAddEdge \ntryAddEdge \nFGraph.tryFindEdge \ntryFindEdge"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#\u0060\u0060.ctor\u0060\u0060","title":"FGraph.\u0060\u0060.ctor\u0060\u0060","content":"FGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#addEdge","title":"FGraph.addEdge","content":"FGraph.addEdge \naddEdge \n\nAdds a labeled, directed edge to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#addEdges","title":"FGraph.addEdges","content":"FGraph.addEdges \naddEdges \n\nAdd labeled, directed edges to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#addElement","title":"FGraph.addElement","content":"FGraph.addElement \naddElement \n \n Adds a labeled, directed edge to the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#addNode","title":"FGraph.addNode","content":"FGraph.addNode \naddNode \n\nAdds a labeled node to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#addNodes","title":"FGraph.addNodes","content":"FGraph.addNodes \naddNodes \n\nAdds labeled nodes to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#clone","title":"FGraph.clone","content":"FGraph.clone \nclone \n \n Clones an existing graph\n \n Note: Current implementation subject to change \n \n [see here for further info](https://github.com/fslaborg/Graphoscope/issues/52#issuecomment-1741746696)\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#containsEdge","title":"FGraph.containsEdge","content":"FGraph.containsEdge \ncontainsEdge \n\nReturns true, if the edge from vertex v1 to vertex v2 is contained in the graph. Otherwise, it returns false.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#containsNode","title":"FGraph.containsNode","content":"FGraph.containsNode \ncontainsNode \n\nReturns true, if the node v is contained in the graph. Otherwise, it returns false.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#countEdges","title":"FGraph.countEdges","content":"FGraph.countEdges \ncountEdges \n\nEvaluates the number of edges in the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#countNodes","title":"FGraph.countNodes","content":"FGraph.countNodes \ncountNodes \n\nEvaluates the number of nodes in the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#create","title":"FGraph.create","content":"FGraph.create \ncreate \n \n Creates a new graph with the given Data\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#create","title":"FGraph.create","content":"FGraph.create \ncreate \n \n Creates a new graph with the given Data\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#createFromNodes","title":"FGraph.createFromNodes","content":"FGraph.createFromNodes \ncreateFromNodes \n \n Creates a new graph with the given node Data\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#findEdge","title":"FGraph.findEdge","content":"FGraph.findEdge \nfindEdge \n\nLookup a labeled edge in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#findNode","title":"FGraph.findNode","content":"FGraph.findNode \nfindNode \n\nLookup a labeled vertex in the graph. Raising KeyNotFoundException if no binding exists in the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#iterEdges","title":"FGraph.iterEdges","content":"FGraph.iterEdges \niterEdges \n\n Applies the given function on each egdge of the graph\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#iteriEdges","title":"FGraph.iteriEdges","content":"FGraph.iteriEdges \niteriEdges \n\n Applies the given function on every edge of the graph, which also receives an ascending integer index.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#mapContexts","title":"FGraph.mapContexts","content":"FGraph.mapContexts \nmapContexts \n\nMaps contexts of the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#ofSeq","title":"FGraph.ofSeq","content":"FGraph.ofSeq \nofSeq \n \n Creates an Adjacency graph of a sequence of edges\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#removeEdge","title":"FGraph.removeEdge","content":"FGraph.removeEdge \nremoveEdge \n\nRemove a directed edge\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#removeMany","title":"FGraph.removeMany","content":"FGraph.removeMany \nremoveMany \n\nRemoves all edges according to the given removeF\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#removeNode","title":"FGraph.removeNode","content":"FGraph.removeNode \nremoveNode \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#reverseEdges","title":"FGraph.reverseEdges","content":"FGraph.reverseEdges \nreverseEdges \n\n Creates an FGraph consisting of the Nodes of a given FGraph but with its directed Edges reversed.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#setNodeData","title":"FGraph.setNodeData","content":"FGraph.setNodeData \nsetNodeData \n\nSet the NodeData of a given NodeKey to the given NodeData\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#toArray2D","title":"FGraph.toArray2D","content":"FGraph.toArray2D \ntoArray2D \n \n Converts the FGraph to an array2d \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#toEdgeSeq","title":"FGraph.toEdgeSeq","content":"FGraph.toEdgeSeq \ntoEdgeSeq \n \n Returns the FGraph edges as a sequence of edges \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#toSeq","title":"FGraph.toSeq","content":"FGraph.toSeq \ntoSeq \n \n Returns the FGraph content as a sequence of edges \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#tryAddEdge","title":"FGraph.tryAddEdge","content":"FGraph.tryAddEdge \ntryAddEdge \n\nAdds a labeled, directed edge to the graph.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-fgraph.html#tryFindEdge","title":"FGraph.tryFindEdge","content":"FGraph.tryFindEdge \ntryFindEdge \n\nLookup a labeled edge in the graph, returning a Some value if a binding exists and None if not.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bfs.html","title":"BFS","content":"BFS \n \n Breadth-First Traversal (or Search)\n  \nBFS.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBFS.Compute \nCompute \nBFS.Compute \nCompute \nBFS.Compute \nCompute \nBFS.ofAdjGraph \nofAdjGraph \nBFS.ofFGraph \nofFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bfs.html#\u0060\u0060.ctor\u0060\u0060","title":"BFS.\u0060\u0060.ctor\u0060\u0060","content":"BFS.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bfs.html#Compute","title":"BFS.Compute","content":"BFS.Compute \nCompute \n \n Traverses nodes reachable from given node in a Breadth-First Traversal (or Search)\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bfs.html#Compute","title":"BFS.Compute","content":"BFS.Compute \nCompute \n \n Traverses nodes reachable from given node in a Breadth-First Traversal (or Search)\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bfs.html#Compute","title":"BFS.Compute","content":"BFS.Compute \nCompute \n \n Traverses nodes reachable from given node in a Breadth-First Traversal (or Search)\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bfs.html#ofAdjGraph","title":"BFS.ofAdjGraph","content":"BFS.ofAdjGraph \nofAdjGraph \n \n Traverses nodes reachable from given node in a Breadth-First Traversal (or Search)\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bfs.html#ofFGraph","title":"BFS.ofFGraph","content":"BFS.ofFGraph \nofFGraph \n \n Traverses nodes reachable from given node in a Breadth-First Traversal (or Search)\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bellmanford.html","title":"BellmanFord","content":"BellmanFord \n \n Computes BellmanFord shortest path\n  \nBellmanFord.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBellmanFord.hasNegativeCycles \nhasNegativeCycles \nBellmanFord.ofFGraph \nofFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bellmanford.html#\u0060\u0060.ctor\u0060\u0060","title":"BellmanFord.\u0060\u0060.ctor\u0060\u0060","content":"BellmanFord.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bellmanford.html#hasNegativeCycles","title":"BellmanFord.hasNegativeCycles","content":"BellmanFord.hasNegativeCycles \nhasNegativeCycles \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-bellmanford.html#ofFGraph","title":"BellmanFord.ofFGraph","content":"BellmanFord.ofFGraph \nofFGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html","title":"Components","content":"Components \n \nComponents.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nComponents.getBiggestComponentOfAdjGraph \ngetBiggestComponentOfAdjGraph \nComponents.getComponentOfAdjGraphNode \ngetComponentOfAdjGraphNode \nComponents.getComponentsDiGraph \ngetComponentsDiGraph \nComponents.getGraphComponentsOfAdjGraph \ngetGraphComponentsOfAdjGraph \nComponents.getLargestComponentDiGraph \ngetLargestComponentDiGraph \nComponents.getLargestComponentSizeDiGraph \ngetLargestComponentSizeDiGraph \nComponents.hasGiantComponentOfDiGraph \nhasGiantComponentOfDiGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html#\u0060\u0060.ctor\u0060\u0060","title":"Components.\u0060\u0060.ctor\u0060\u0060","content":"Components.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html#getBiggestComponentOfAdjGraph","title":"Components.getBiggestComponentOfAdjGraph","content":"Components.getBiggestComponentOfAdjGraph \ngetBiggestComponentOfAdjGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html#getComponentOfAdjGraphNode","title":"Components.getComponentOfAdjGraphNode","content":"Components.getComponentOfAdjGraphNode \ngetComponentOfAdjGraphNode \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html#getComponentsDiGraph","title":"Components.getComponentsDiGraph","content":"Components.getComponentsDiGraph \ngetComponentsDiGraph \n\n Finds seperate components of the graph and returns sets of nodes\n \u003C/summary\u003E\n \u003Cparam name=\u0022graph\u0022\u003EThe graph to analyse\u003C/param\u003E \n \u003Creturns\u003Ereturns set of sets of nodes making up each component.\u003C/returns\u003E\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html#getGraphComponentsOfAdjGraph","title":"Components.getGraphComponentsOfAdjGraph","content":"Components.getGraphComponentsOfAdjGraph \ngetGraphComponentsOfAdjGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html#getLargestComponentDiGraph","title":"Components.getLargestComponentDiGraph","content":"Components.getLargestComponentDiGraph \ngetLargestComponentDiGraph \n\n Finds the largest component and returns it as a new graph\n \u003C/summary\u003E\n \u003Cparam name=\u0022graph\u0022\u003EThe graph to analyse\u003C/param\u003E \n \u003Creturns\u003Ereturns a new graph\u003C/returns\u003E\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html#getLargestComponentSizeDiGraph","title":"Components.getLargestComponentSizeDiGraph","content":"Components.getLargestComponentSizeDiGraph \ngetLargestComponentSizeDiGraph \n\n Finds the largest component and returns it\u0027s size. Whih may be the giant component.\n \u003C/summary\u003E\n \u003Cparam name=\u0022graph\u0022\u003EThe graph to analyse\u003C/param\u003E \n \u003Creturns\u003Ereturns an int indicating numner of nodes\u003C/returns\u003E\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-components.html#hasGiantComponentOfDiGraph","title":"Components.hasGiantComponentOfDiGraph","content":"Components.hasGiantComponentOfDiGraph \nhasGiantComponentOfDiGraph \n\n DiGraph\n Return true if all nodes in the graph are connect into one component.\n \u003C/summary\u003E\n \u003Cparam name=\u0022graph\u0022\u003EThe graph to analyse\u003C/param\u003E \n \u003Creturns\u003EReturns true or false\u003C/returns\u003E\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dfs.html","title":"DFS","content":"DFS \n \n Depth-First Traversal (or Search)\n  \nDFS.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDFS.ofDiGraph \nofDiGraph \nDFS.ofDiGraphUndirected \nofDiGraphUndirected \nDFS.ofFGraph \nofFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dfs.html#\u0060\u0060.ctor\u0060\u0060","title":"DFS.\u0060\u0060.ctor\u0060\u0060","content":"DFS.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dfs.html#ofDiGraph","title":"DFS.ofDiGraph","content":"DFS.ofDiGraph \nofDiGraph \n\n Traverses nodes reachable from given node in a Depth-First Traversal (or Search)\n \u003C/summary\u003E\n \u003Cparam name=\u0022starting\u0022\u003ENodekey for starting the BFS traversal.\u003C/param\u003E \n \u003Cparam name=\u0022graph\u0022\u003EThe graph to traverse.\u003C/param\u003E \n \u003Creturns\u003ESequence of node key and node data\u003C/returns\u003E\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dfs.html#ofDiGraphUndirected","title":"DFS.ofDiGraphUndirected","content":"DFS.ofDiGraphUndirected \nofDiGraphUndirected \n\n Same as ofDiGraph except it traverses nodes along in and out edges. \n This is useful for finding components and other operations where the direction of the edge shouldnt matter.\n \u003C/summary\u003E\n \u003Cparam name=\u0022starting\u0022\u003ENodekey for starting the BFS traversal.\u003C/param\u003E \n \u003Cparam name=\u0022graph\u0022\u003EThe graph to traverse.\u003C/param\u003E \n \u003Creturns\u003ESequence of node key and node data\u003C/returns\u003E\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dfs.html#ofFGraph","title":"DFS.ofFGraph","content":"DFS.ofFGraph \nofFGraph \n \n Traverses nodes reachable from given node in a Depth-First Traversal (or Search)\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html","title":"Dijkstra","content":"Dijkstra \n \n Computes Dijkstra\u0027s shortest path\n  \nDijkstra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDijkstra.compute \ncompute \nDijkstra.compute \ncompute \nDijkstra.compute \ncompute \nDijkstra.computeBetween \ncomputeBetween \nDijkstra.computeBetween \ncomputeBetween \nDijkstra.ofAdjGraph \nofAdjGraph \nDijkstra.ofDiGraph \nofDiGraph \nDijkstra.ofDiGraphBetween \nofDiGraphBetween \nDijkstra.ofFGraph \nofFGraph \nDijkstra.ofUndirectedFGraphIncludingPath \nofUndirectedFGraphIncludingPath"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#\u0060\u0060.ctor\u0060\u0060","title":"Dijkstra.\u0060\u0060.ctor\u0060\u0060","content":"Dijkstra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#compute","title":"Dijkstra.compute","content":"Dijkstra.compute \ncompute \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#compute","title":"Dijkstra.compute","content":"Dijkstra.compute \ncompute \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#compute","title":"Dijkstra.compute","content":"Dijkstra.compute \ncompute \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#computeBetween","title":"Dijkstra.computeBetween","content":"Dijkstra.computeBetween \ncomputeBetween \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#computeBetween","title":"Dijkstra.computeBetween","content":"Dijkstra.computeBetween \ncomputeBetween \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#ofAdjGraph","title":"Dijkstra.ofAdjGraph","content":"Dijkstra.ofAdjGraph \nofAdjGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#ofDiGraph","title":"Dijkstra.ofDiGraph","content":"Dijkstra.ofDiGraph \nofDiGraph \n \n Computes shortest paths from \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Esource\u003C/span\u003E for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Dijkstra\u0027s algorithm in parallel.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#ofDiGraphBetween","title":"Dijkstra.ofDiGraphBetween","content":"Dijkstra.ofDiGraphBetween \nofDiGraphBetween \n \n Returns the distance in numebr of directed edges between two nodes.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#ofFGraph","title":"Dijkstra.ofFGraph","content":"Dijkstra.ofFGraph \nofFGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-dijkstra.html#ofUndirectedFGraphIncludingPath","title":"Dijkstra.ofUndirectedFGraphIncludingPath","content":"Dijkstra.ofUndirectedFGraphIncludingPath \nofUndirectedFGraphIncludingPath \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html","title":"FloydWarshall","content":"FloydWarshall \n \n Computes all-pairs shortest paths for a given graph using Floyd-Warshall algorithm.\n\n The ordered array of nodes and 2D Array of distances where each\n row and column index corresponds to a node\u0027s index in the nodes array.\n  \nFloydWarshall.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFloydWarshall.compute \ncompute \nFloydWarshall.fromArray2D \nfromArray2D \nFloydWarshall.fromJaggedArray \nfromJaggedArray"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html#\u0060\u0060.ctor\u0060\u0060","title":"FloydWarshall.\u0060\u0060.ctor\u0060\u0060","content":"FloydWarshall.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html#compute","title":"FloydWarshall.compute","content":"FloydWarshall.compute \ncompute \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html#fromArray2D","title":"FloydWarshall.fromArray2D","content":"FloydWarshall.fromArray2D \nfromArray2D \n \n Computes all-pairs shortest paths for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Floyd-Warshall algorithm.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-floydwarshall.html#fromJaggedArray","title":"FloydWarshall.fromJaggedArray","content":"FloydWarshall.fromJaggedArray \nfromJaggedArray \n \n Computes all-pairs shortest paths for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Floyd-Warshall algorithm.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-louvain.html","title":"Louvain","content":"Louvain \n\nLouvain method for community detection\n \nLouvain.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nLouvain.louvain \nlouvain \nLouvain.louvainRandom \nlouvainRandom \nLouvain.louvainResolution \nlouvainResolution"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-louvain.html#\u0060\u0060.ctor\u0060\u0060","title":"Louvain.\u0060\u0060.ctor\u0060\u0060","content":"Louvain.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-louvain.html#louvain","title":"Louvain.louvain","content":"Louvain.louvain \nlouvain \n \n Takes a FGraph and returns a new graph whose NodeData has been transformed into tupels, where the second part is the community according to modularity-optimization by the Louvain Algorithm (Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \u0022Fast unfolding of communities in large networks\u0022. Journal of Statistical Mechanics: Theory and Experiment. 2008 ).\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-louvain.html#louvainRandom","title":"Louvain.louvainRandom","content":"Louvain.louvainRandom \nlouvainRandom \n \n Takes a FGraph and returns a new graph whose NodeData has been transformed into tupels, where the second part is the community according to modularity-optimization by the Louvain Algorithm (Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \u0022Fast unfolding of communities in large networks\u0022. Journal of Statistical Mechanics: Theory and Experiment. 2008 ).\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-louvain.html#louvainResolution","title":"Louvain.louvainResolution","content":"Louvain.louvainResolution \nlouvainResolution \n \n Takes a AdjGraph and returns a new graph whose NodeData has been transformed into tupels, where the second part is the community according to modularity-optimization by the Louvain Algorithm (Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \u0022Fast unfolding of communities in large networks\u0022. Journal of Statistical Mechanics: Theory and Experiment. 2008 ).\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-wedgecount.html","title":"WedgeCount","content":"WedgeCount \n \nWedgeCount.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nWedgeCount.ofGraph \nofGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-wedgecount.html#\u0060\u0060.ctor\u0060\u0060","title":"WedgeCount.\u0060\u0060.ctor\u0060\u0060","content":"WedgeCount.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-algorithms-wedgecount.html#ofGraph","title":"WedgeCount.ofGraph","content":"WedgeCount.ofGraph \nofGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule.html","title":"UndirectedGraph","content":"UndirectedGraph \n \nUndirectedGraph.Edge \nEdge \nUndirectedGraph.Node \nNode \nUndirectedGraph.empty \nempty"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule.html#empty","title":"UndirectedGraph.empty","content":"UndirectedGraph.empty \nempty \n \n Creates an empty undirected Graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-edge.html","title":"Edge","content":"Edge \n \nEdge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEdge.addEdge \naddEdge \nEdge.removeEdge \nremoveEdge"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-edge.html#\u0060\u0060.ctor\u0060\u0060","title":"Edge.\u0060\u0060.ctor\u0060\u0060","content":"Edge.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-edge.html#addEdge","title":"Edge.addEdge","content":"Edge.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-edge.html#removeEdge","title":"Edge.removeEdge","content":"Edge.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-node.html","title":"Node","content":"Node \n \nNode.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNode.addNode \naddNode \nNode.removeNode \nremoveNode"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-node.html#\u0060\u0060.ctor\u0060\u0060","title":"Node.\u0060\u0060.ctor\u0060\u0060","content":"Node.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-node.html#addNode","title":"Node.addNode","content":"Node.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraphmodule-node.html#removeNode","title":"Node.removeNode","content":"Node.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph-2.html","title":"UndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E","content":"UndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E \n \nUndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph-2.html#\u0060\u0060.ctor\u0060\u0060","title":"UndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"UndirectedGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html","title":"UndirectedGraph","content":"UndirectedGraph \n \nUndirectedGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nUndirectedGraph.addEdge \naddEdge \nUndirectedGraph.addEdges \naddEdges \nUndirectedGraph.addElement \naddElement \nUndirectedGraph.addNode \naddNode \nUndirectedGraph.addNodes \naddNodes \nUndirectedGraph.create \ncreate \nUndirectedGraph.createFromEdges \ncreateFromEdges \nUndirectedGraph.createFromNodes \ncreateFromNodes \nUndirectedGraph.find \nfind \nUndirectedGraph.getAllEdges \ngetAllEdges \nUndirectedGraph.getEdges \ngetEdges \nUndirectedGraph.getNodes \ngetNodes \nUndirectedGraph.normalizeEdges \nnormalizeEdges \nUndirectedGraph.ofSeq \nofSeq \nUndirectedGraph.removeEdge \nremoveEdge \nUndirectedGraph.removeNode \nremoveNode \nUndirectedGraph.toSeq \ntoSeq"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#\u0060\u0060.ctor\u0060\u0060","title":"UndirectedGraph.\u0060\u0060.ctor\u0060\u0060","content":"UndirectedGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addEdge","title":"UndirectedGraph.addEdge","content":"UndirectedGraph.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addEdges","title":"UndirectedGraph.addEdges","content":"UndirectedGraph.addEdges \naddEdges \n \n Adds many edges to a graph at once\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addElement","title":"UndirectedGraph.addElement","content":"UndirectedGraph.addElement \naddElement \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addNode","title":"UndirectedGraph.addNode","content":"UndirectedGraph.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#addNodes","title":"UndirectedGraph.addNodes","content":"UndirectedGraph.addNodes \naddNodes \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#create","title":"UndirectedGraph.create","content":"UndirectedGraph.create \ncreate \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#createFromEdges","title":"UndirectedGraph.createFromEdges","content":"UndirectedGraph.createFromEdges \ncreateFromEdges \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#createFromNodes","title":"UndirectedGraph.createFromNodes","content":"UndirectedGraph.createFromNodes \ncreateFromNodes \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#find","title":"UndirectedGraph.find","content":"UndirectedGraph.find \nfind \n \n Tries to find an edge between the specified nodes. Raises KeyNotFoundException if no such edge exists in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#getAllEdges","title":"UndirectedGraph.getAllEdges","content":"UndirectedGraph.getAllEdges \ngetAllEdges \n \n Returns the all edges in the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#getEdges","title":"UndirectedGraph.getEdges","content":"UndirectedGraph.getEdges \ngetEdges \n \n Returns the edges for given node\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#getNodes","title":"UndirectedGraph.getNodes","content":"UndirectedGraph.getNodes \ngetNodes \n \n Returns all nodes in te graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#normalizeEdges","title":"UndirectedGraph.normalizeEdges","content":"UndirectedGraph.normalizeEdges \nnormalizeEdges \n \n Normalises the weights of edges for each node in a graph.\n The function assumes that the edge data type of the graph will be float. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#ofSeq","title":"UndirectedGraph.ofSeq","content":"UndirectedGraph.ofSeq \nofSeq \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#removeEdge","title":"UndirectedGraph.removeEdge","content":"UndirectedGraph.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#removeNode","title":"UndirectedGraph.removeNode","content":"UndirectedGraph.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-undirectedgraph.html#toSeq","title":"UndirectedGraph.toSeq","content":"UndirectedGraph.toSeq \ntoSeq \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf.html","title":"GDF","content":"GDF \n \nGDF.GDFEdge \nGDFEdge \nGDF.GDFItem \nGDFItem \nGDF.GDFNode \nGDFNode \nGDF.GDFValue \nGDFValue"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfedge.html","title":"GDFEdge","content":"GDFEdge \n \nGDFEdge.EdgeInfo \nEdgeInfo"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfedge.html#EdgeInfo","title":"GDFEdge.EdgeInfo","content":"GDFEdge.EdgeInfo \nEdgeInfo \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfitem.html","title":"GDFItem","content":"GDFItem \n \nGDFItem.Node \nNode \nGDFItem.Edge \nEdge \nGDFItem.Unknown \nUnknown"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfitem.html#Node","title":"GDFItem.Node","content":"GDFItem.Node \nNode \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfitem.html#Edge","title":"GDFItem.Edge","content":"GDFItem.Edge \nEdge \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfitem.html#Unknown","title":"GDFItem.Unknown","content":"GDFItem.Unknown \nUnknown \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfnode.html","title":"GDFNode","content":"GDFNode \n \nGDFNode.NodeInfo \nNodeInfo"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfnode.html#NodeInfo","title":"GDFNode.NodeInfo","content":"GDFNode.NodeInfo \nNodeInfo \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html","title":"GDFValue","content":"GDFValue \n \nGDFValue.VARCHAR \nVARCHAR \nGDFValue.BOOLEAN \nBOOLEAN \nGDFValue.DOUBLE \nDOUBLE \nGDFValue.INTEGER \nINTEGER"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html#VARCHAR","title":"GDFValue.VARCHAR","content":"GDFValue.VARCHAR \nVARCHAR \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html#BOOLEAN","title":"GDFValue.BOOLEAN","content":"GDFValue.BOOLEAN \nBOOLEAN \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html#DOUBLE","title":"GDFValue.DOUBLE","content":"GDFValue.DOUBLE \nDOUBLE \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-io-gdf-gdfvalue.html#INTEGER","title":"GDFValue.INTEGER","content":"GDFValue.INTEGER \nINTEGER \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-betweennesscentrality.html","title":"BetweennessCentrality","content":"BetweennessCentrality \n \nBetweennessCentrality.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBetweennessCentrality.ofAdjGraph \nofAdjGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-betweennesscentrality.html#\u0060\u0060.ctor\u0060\u0060","title":"BetweennessCentrality.\u0060\u0060.ctor\u0060\u0060","content":"BetweennessCentrality.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-betweennesscentrality.html#ofAdjGraph","title":"BetweennessCentrality.ofAdjGraph","content":"BetweennessCentrality.ofAdjGraph \nofAdjGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html","title":"ClosenessCentrality","content":"ClosenessCentrality \n \nClosenessCentrality.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nClosenessCentrality.ofAdjGraph \nofAdjGraph \nClosenessCentrality.ofAdjGraphNode \nofAdjGraphNode \nClosenessCentrality.ofAdjGraphNodeNormalised \nofAdjGraphNodeNormalised \nClosenessCentrality.ofAdjGraphNormalised \nofAdjGraphNormalised \nClosenessCentrality.ofFGraph \nofFGraph \nClosenessCentrality.ofFGraphNode \nofFGraphNode \nClosenessCentrality.ofFGraphNodeNormalised \nofFGraphNodeNormalised \nClosenessCentrality.ofFGraphNormalised \nofFGraphNormalised"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#\u0060\u0060.ctor\u0060\u0060","title":"ClosenessCentrality.\u0060\u0060.ctor\u0060\u0060","content":"ClosenessCentrality.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#ofAdjGraph","title":"ClosenessCentrality.ofAdjGraph","content":"ClosenessCentrality.ofAdjGraph \nofAdjGraph \n \n Get the ClosenessCentrality of all nodes in a FGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#ofAdjGraphNode","title":"ClosenessCentrality.ofAdjGraphNode","content":"ClosenessCentrality.ofAdjGraphNode \nofAdjGraphNode \n \n Get the ClosenessCentrality of a node in an AdjGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#ofAdjGraphNodeNormalised","title":"ClosenessCentrality.ofAdjGraphNodeNormalised","content":"ClosenessCentrality.ofAdjGraphNodeNormalised \nofAdjGraphNodeNormalised \n \n Get the normalised ClosenessCentrality of a node in an AdjGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#ofAdjGraphNormalised","title":"ClosenessCentrality.ofAdjGraphNormalised","content":"ClosenessCentrality.ofAdjGraphNormalised \nofAdjGraphNormalised \n \n Get the normalised ClosenessCentrality of all nodes in a FGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#ofFGraph","title":"ClosenessCentrality.ofFGraph","content":"ClosenessCentrality.ofFGraph \nofFGraph \n \n Get the ClosenessCentrality of all nodes in a FGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#ofFGraphNode","title":"ClosenessCentrality.ofFGraphNode","content":"ClosenessCentrality.ofFGraphNode \nofFGraphNode \n \n Get the ClosenessCentrality of a node in a FGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#ofFGraphNodeNormalised","title":"ClosenessCentrality.ofFGraphNodeNormalised","content":"ClosenessCentrality.ofFGraphNodeNormalised \nofFGraphNodeNormalised \n \n Get the normalised ClosenessCentrality of a node in a FGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-closenesscentrality.html#ofFGraphNormalised","title":"ClosenessCentrality.ofFGraphNormalised","content":"ClosenessCentrality.ofFGraphNormalised \nofFGraphNormalised \n \n Get the normalised ClosenessCentrality of all nodes in a FGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html","title":"ClusteringCoefficient","content":"ClusteringCoefficient \n \nClusteringCoefficient.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nClusteringCoefficient.clusteringCoefficientOfAdjGraph \nclusteringCoefficientOfAdjGraph \nClusteringCoefficient.clusteringCoefficientOfAdjGraphNode \nclusteringCoefficientOfAdjGraphNode \nClusteringCoefficient.clusteringCoefficientOfDiGraph \nclusteringCoefficientOfDiGraph \nClusteringCoefficient.clusteringCoefficientOfFGraph \nclusteringCoefficientOfFGraph \nClusteringCoefficient.clusteringCoefficientOfFGraphVertex \nclusteringCoefficientOfFGraphVertex \nClusteringCoefficient.clusteringCoefficientOfUndirectedGraph \nclusteringCoefficientOfUndirectedGraph \nClusteringCoefficient.compute \ncompute \nClusteringCoefficient.compute \ncompute \nClusteringCoefficient.compute \ncompute"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#\u0060\u0060.ctor\u0060\u0060","title":"ClusteringCoefficient.\u0060\u0060.ctor\u0060\u0060","content":"ClusteringCoefficient.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfAdjGraph","title":"ClusteringCoefficient.clusteringCoefficientOfAdjGraph","content":"ClusteringCoefficient.clusteringCoefficientOfAdjGraph \nclusteringCoefficientOfAdjGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfAdjGraphNode","title":"ClusteringCoefficient.clusteringCoefficientOfAdjGraphNode","content":"ClusteringCoefficient.clusteringCoefficientOfAdjGraphNode \nclusteringCoefficientOfAdjGraphNode \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfDiGraph","title":"ClusteringCoefficient.clusteringCoefficientOfDiGraph","content":"ClusteringCoefficient.clusteringCoefficientOfDiGraph \nclusteringCoefficientOfDiGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfFGraph","title":"ClusteringCoefficient.clusteringCoefficientOfFGraph","content":"ClusteringCoefficient.clusteringCoefficientOfFGraph \nclusteringCoefficientOfFGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfFGraphVertex","title":"ClusteringCoefficient.clusteringCoefficientOfFGraphVertex","content":"ClusteringCoefficient.clusteringCoefficientOfFGraphVertex \nclusteringCoefficientOfFGraphVertex \n\nEvaluates the clustering coefficient of the vertex.\n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#clusteringCoefficientOfUndirectedGraph","title":"ClusteringCoefficient.clusteringCoefficientOfUndirectedGraph","content":"ClusteringCoefficient.clusteringCoefficientOfUndirectedGraph \nclusteringCoefficientOfUndirectedGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#compute","title":"ClusteringCoefficient.compute","content":"ClusteringCoefficient.compute \ncompute \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#compute","title":"ClusteringCoefficient.compute","content":"ClusteringCoefficient.compute \ncompute \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-clusteringcoefficient.html#compute","title":"ClusteringCoefficient.compute","content":"ClusteringCoefficient.compute \ncompute \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html","title":"Degree","content":"Degree \n \nDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDegree.average \naverage \nDegree.average \naverage \nDegree.average \naverage \nDegree.average \naverage \nDegree.averageofAdjGraph \naverageofAdjGraph \nDegree.averageofDiGraph \naverageofDiGraph \nDegree.averageofFGraph \naverageofFGraph \nDegree.averageofUndirectedGraph \naverageofUndirectedGraph \nDegree.cumulativeDegreeOfFGraph \ncumulativeDegreeOfFGraph \nDegree.maximum \nmaximum \nDegree.maximum \nmaximum \nDegree.maximum \nmaximum \nDegree.maximumOfAdjGraph \nmaximumOfAdjGraph \nDegree.maximumOfDiGraph \nmaximumOfDiGraph \nDegree.maximumOfFGraph \nmaximumOfFGraph \nDegree.minimum \nminimum \nDegree.minimum \nminimum \nDegree.minimum \nminimum \nDegree.minimumOfAdjGraph \nminimumOfAdjGraph \nDegree.minimumOfDiGraph \nminimumOfDiGraph \nDegree.minimumOfFGraph \nminimumOfFGraph \nDegree.sequence \nsequence \nDegree.sequence \nsequence \nDegree.sequence \nsequence \nDegree.sequenceOfAdjGraph \nsequenceOfAdjGraph \nDegree.sequenceOfDiGraph \nsequenceOfDiGraph \nDegree.sequenceOfFGraph \nsequenceOfFGraph \nDegree.weightedDegreeOfFGraphNode \nweightedDegreeOfFGraphNode"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#\u0060\u0060.ctor\u0060\u0060","title":"Degree.\u0060\u0060.ctor\u0060\u0060","content":"Degree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#average","title":"Degree.average","content":"Degree.average \naverage \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#average","title":"Degree.average","content":"Degree.average \naverage \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#average","title":"Degree.average","content":"Degree.average \naverage \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#average","title":"Degree.average","content":"Degree.average \naverage \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#averageofAdjGraph","title":"Degree.averageofAdjGraph","content":"Degree.averageofAdjGraph \naverageofAdjGraph \n \n Get the mean degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#averageofDiGraph","title":"Degree.averageofDiGraph","content":"Degree.averageofDiGraph \naverageofDiGraph \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#averageofFGraph","title":"Degree.averageofFGraph","content":"Degree.averageofFGraph \naverageofFGraph \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#averageofUndirectedGraph","title":"Degree.averageofUndirectedGraph","content":"Degree.averageofUndirectedGraph \naverageofUndirectedGraph \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#cumulativeDegreeOfFGraph","title":"Degree.cumulativeDegreeOfFGraph","content":"Degree.cumulativeDegreeOfFGraph \ncumulativeDegreeOfFGraph \n \n Return the cummulative Degree of a FGraph sorted from smallest degree to highest as tupel of degree and Nodecount with that degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#maximum","title":"Degree.maximum","content":"Degree.maximum \nmaximum \n \n Get the max degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#maximum","title":"Degree.maximum","content":"Degree.maximum \nmaximum \n \n Get the max degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#maximum","title":"Degree.maximum","content":"Degree.maximum \nmaximum \n \n Get the max degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#maximumOfAdjGraph","title":"Degree.maximumOfAdjGraph","content":"Degree.maximumOfAdjGraph \nmaximumOfAdjGraph \n \n Get the max degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#maximumOfDiGraph","title":"Degree.maximumOfDiGraph","content":"Degree.maximumOfDiGraph \nmaximumOfDiGraph \n \n Get the max degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#maximumOfFGraph","title":"Degree.maximumOfFGraph","content":"Degree.maximumOfFGraph \nmaximumOfFGraph \n \n Get the max degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#minimum","title":"Degree.minimum","content":"Degree.minimum \nminimum \n \n Get the min degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#minimum","title":"Degree.minimum","content":"Degree.minimum \nminimum \n \n Get the min degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#minimum","title":"Degree.minimum","content":"Degree.minimum \nminimum \n \n Get the min degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#minimumOfAdjGraph","title":"Degree.minimumOfAdjGraph","content":"Degree.minimumOfAdjGraph \nminimumOfAdjGraph \n \n Get the min degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#minimumOfDiGraph","title":"Degree.minimumOfDiGraph","content":"Degree.minimumOfDiGraph \nminimumOfDiGraph \n \n Get the min degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#minimumOfFGraph","title":"Degree.minimumOfFGraph","content":"Degree.minimumOfFGraph \nminimumOfFGraph \n \n Get the min degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#sequence","title":"Degree.sequence","content":"Degree.sequence \nsequence \n \n Returns the degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#sequence","title":"Degree.sequence","content":"Degree.sequence \nsequence \n \n Returns the degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#sequence","title":"Degree.sequence","content":"Degree.sequence \nsequence \n \n Returns the degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#sequenceOfAdjGraph","title":"Degree.sequenceOfAdjGraph","content":"Degree.sequenceOfAdjGraph \nsequenceOfAdjGraph \n \n Returns the degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#sequenceOfDiGraph","title":"Degree.sequenceOfDiGraph","content":"Degree.sequenceOfDiGraph \nsequenceOfDiGraph \n \n Returns the degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#sequenceOfFGraph","title":"Degree.sequenceOfFGraph","content":"Degree.sequenceOfFGraph \nsequenceOfFGraph \n \n Returns the degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-degree.html#weightedDegreeOfFGraphNode","title":"Degree.weightedDegreeOfFGraphNode","content":"Degree.weightedDegreeOfFGraphNode \nweightedDegreeOfFGraphNode \n \n Get the weighted degree of the node with the \u0027NodeKey nk of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-diameter.html","title":"Diameter","content":"Diameter \n \nDiameter.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDiameter.compute \ncompute \nDiameter.compute \ncompute \nDiameter.ofAdjGraph \nofAdjGraph \nDiameter.ofFGraph \nofFGraph \nDiameter.ofGraph2D \nofGraph2D"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-diameter.html#\u0060\u0060.ctor\u0060\u0060","title":"Diameter.\u0060\u0060.ctor\u0060\u0060","content":"Diameter.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-diameter.html#compute","title":"Diameter.compute","content":"Diameter.compute \ncompute \n \n Get the diameter of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-diameter.html#compute","title":"Diameter.compute","content":"Diameter.compute \ncompute \n \n Get the diameter of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-diameter.html#ofAdjGraph","title":"Diameter.ofAdjGraph","content":"Diameter.ofAdjGraph \nofAdjGraph \n \n Get the diameter of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-diameter.html#ofFGraph","title":"Diameter.ofFGraph","content":"Diameter.ofFGraph \nofFGraph \n \n Get the diameter of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-diameter.html#ofGraph2D","title":"Diameter.ofGraph2D","content":"Diameter.ofGraph2D \nofGraph2D \n \n Get the diameter of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-eccentricity.html","title":"Eccentricity","content":"Eccentricity \n \nEccentricity.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEccentricity.ofAdjGraph \nofAdjGraph \nEccentricity.ofAdjGraphNode \nofAdjGraphNode \nEccentricity.ofFGraph \nofFGraph \nEccentricity.ofFGraphNode \nofFGraphNode \nEccentricity.ofGraph2D \nofGraph2D"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-eccentricity.html#\u0060\u0060.ctor\u0060\u0060","title":"Eccentricity.\u0060\u0060.ctor\u0060\u0060","content":"Eccentricity.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-eccentricity.html#ofAdjGraph","title":"Eccentricity.ofAdjGraph","content":"Eccentricity.ofAdjGraph \nofAdjGraph \n \n Get the Eccentricity of all nodes in an AdjGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-eccentricity.html#ofAdjGraphNode","title":"Eccentricity.ofAdjGraphNode","content":"Eccentricity.ofAdjGraphNode \nofAdjGraphNode \n \n Get the Eccentricity of a node in an AdjGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-eccentricity.html#ofFGraph","title":"Eccentricity.ofFGraph","content":"Eccentricity.ofFGraph \nofFGraph \n \n Get the Eccentricity of a node in an FGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-eccentricity.html#ofFGraphNode","title":"Eccentricity.ofFGraphNode","content":"Eccentricity.ofFGraphNode \nofFGraphNode \n \n Get the Eccentricity of a node in an FGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-eccentricity.html#ofGraph2D","title":"Eccentricity.ofGraph2D","content":"Eccentricity.ofGraph2D \nofGraph2D \n \n Get the Eccentricity of a graph of its FloydWarshall shortest Path result\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-graphdensity.html","title":"GraphDensity","content":"GraphDensity \n \n Computes the graph density\n  \nGraphDensity.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nGraphDensity.compute \ncompute \nGraphDensity.compute \ncompute \nGraphDensity.compute \ncompute \nGraphDensity.ofAdjGraph \nofAdjGraph \nGraphDensity.ofDiGraph \nofDiGraph \nGraphDensity.ofFGraph \nofFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-graphdensity.html#\u0060\u0060.ctor\u0060\u0060","title":"GraphDensity.\u0060\u0060.ctor\u0060\u0060","content":"GraphDensity.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-graphdensity.html#compute","title":"GraphDensity.compute","content":"GraphDensity.compute \ncompute \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-graphdensity.html#compute","title":"GraphDensity.compute","content":"GraphDensity.compute \ncompute \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-graphdensity.html#compute","title":"GraphDensity.compute","content":"GraphDensity.compute \ncompute \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-graphdensity.html#ofAdjGraph","title":"GraphDensity.ofAdjGraph","content":"GraphDensity.ofAdjGraph \nofAdjGraph \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-graphdensity.html#ofDiGraph","title":"GraphDensity.ofDiGraph","content":"GraphDensity.ofDiGraph \nofDiGraph \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-graphdensity.html#ofFGraph","title":"GraphDensity.ofFGraph","content":"GraphDensity.ofFGraph \nofFGraph \n \n Computes the graph density of the given graph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation only works on graphs without self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html","title":"InDegree","content":"InDegree \n \nInDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nInDegree.average \naverage \nInDegree.average \naverage \nInDegree.average \naverage \nInDegree.averageofAdjGraph \naverageofAdjGraph \nInDegree.averageofDiGraph \naverageofDiGraph \nInDegree.averageofFGraph \naverageofFGraph \nInDegree.maximum \nmaximum \nInDegree.maximum \nmaximum \nInDegree.maximum \nmaximum \nInDegree.maximumOfAdjGraph \nmaximumOfAdjGraph \nInDegree.maximumOfDiGraph \nmaximumOfDiGraph \nInDegree.maximumOfFGraph \nmaximumOfFGraph \nInDegree.minimum \nminimum \nInDegree.minimum \nminimum \nInDegree.minimum \nminimum \nInDegree.minimumOfAdjGraph \nminimumOfAdjGraph \nInDegree.minimumOfDiGraph \nminimumOfDiGraph \nInDegree.minimumOfFGraph \nminimumOfFGraph \nInDegree.sequence \nsequence \nInDegree.sequence \nsequence \nInDegree.sequence \nsequence \nInDegree.sequenceOfAdjGraph \nsequenceOfAdjGraph \nInDegree.sequenceOfDiGraph \nsequenceOfDiGraph \nInDegree.sequenceOfFGraph \nsequenceOfFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#\u0060\u0060.ctor\u0060\u0060","title":"InDegree.\u0060\u0060.ctor\u0060\u0060","content":"InDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#average","title":"InDegree.average","content":"InDegree.average \naverage \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#average","title":"InDegree.average","content":"InDegree.average \naverage \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#average","title":"InDegree.average","content":"InDegree.average \naverage \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#averageofAdjGraph","title":"InDegree.averageofAdjGraph","content":"InDegree.averageofAdjGraph \naverageofAdjGraph \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#averageofDiGraph","title":"InDegree.averageofDiGraph","content":"InDegree.averageofDiGraph \naverageofDiGraph \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#averageofFGraph","title":"InDegree.averageofFGraph","content":"InDegree.averageofFGraph \naverageofFGraph \n \n Get the mean In-degree of the graph. \n This is an undirected measure so inbound links add to a nodes In-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#maximum","title":"InDegree.maximum","content":"InDegree.maximum \nmaximum \n \n Get the max In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#maximum","title":"InDegree.maximum","content":"InDegree.maximum \nmaximum \n \n Get the max In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#maximum","title":"InDegree.maximum","content":"InDegree.maximum \nmaximum \n \n Get the max In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#maximumOfAdjGraph","title":"InDegree.maximumOfAdjGraph","content":"InDegree.maximumOfAdjGraph \nmaximumOfAdjGraph \n \n Get the max In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#maximumOfDiGraph","title":"InDegree.maximumOfDiGraph","content":"InDegree.maximumOfDiGraph \nmaximumOfDiGraph \n \n Get the max In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#maximumOfFGraph","title":"InDegree.maximumOfFGraph","content":"InDegree.maximumOfFGraph \nmaximumOfFGraph \n \n Get the max In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#minimum","title":"InDegree.minimum","content":"InDegree.minimum \nminimum \n \n Get the min In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#minimum","title":"InDegree.minimum","content":"InDegree.minimum \nminimum \n \n Get the min In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#minimum","title":"InDegree.minimum","content":"InDegree.minimum \nminimum \n \n Get the min In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#minimumOfAdjGraph","title":"InDegree.minimumOfAdjGraph","content":"InDegree.minimumOfAdjGraph \nminimumOfAdjGraph \n \n Get the min In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#minimumOfDiGraph","title":"InDegree.minimumOfDiGraph","content":"InDegree.minimumOfDiGraph \nminimumOfDiGraph \n \n Get the min In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#minimumOfFGraph","title":"InDegree.minimumOfFGraph","content":"InDegree.minimumOfFGraph \nminimumOfFGraph \n \n Get the min In-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#sequence","title":"InDegree.sequence","content":"InDegree.sequence \nsequence \n \n Returns the in-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#sequence","title":"InDegree.sequence","content":"InDegree.sequence \nsequence \n \n Returns the in-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#sequence","title":"InDegree.sequence","content":"InDegree.sequence \nsequence \n \n Returns the in-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#sequenceOfAdjGraph","title":"InDegree.sequenceOfAdjGraph","content":"InDegree.sequenceOfAdjGraph \nsequenceOfAdjGraph \n \n Returns the in-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#sequenceOfDiGraph","title":"InDegree.sequenceOfDiGraph","content":"InDegree.sequenceOfDiGraph \nsequenceOfDiGraph \n \n Returns the in-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-indegree.html#sequenceOfFGraph","title":"InDegree.sequenceOfFGraph","content":"InDegree.sequenceOfFGraph \nsequenceOfFGraph \n \n Returns the in-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-informationentropy.html","title":"InformationEntropy","content":"InformationEntropy \n \n Computes the graph density\n  \nInformationEntropy.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nInformationEntropy.compute \ncompute \nInformationEntropy.compute \ncompute \nInformationEntropy.compute \ncompute \nInformationEntropy.ofAdjGraph \nofAdjGraph \nInformationEntropy.ofDiGraph \nofDiGraph \nInformationEntropy.ofFGraph \nofFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-informationentropy.html#\u0060\u0060.ctor\u0060\u0060","title":"InformationEntropy.\u0060\u0060.ctor\u0060\u0060","content":"InformationEntropy.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-informationentropy.html#compute","title":"InformationEntropy.compute","content":"InformationEntropy.compute \ncompute \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-informationentropy.html#compute","title":"InformationEntropy.compute","content":"InformationEntropy.compute \ncompute \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-informationentropy.html#compute","title":"InformationEntropy.compute","content":"InformationEntropy.compute \ncompute \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-informationentropy.html#ofAdjGraph","title":"InformationEntropy.ofAdjGraph","content":"InformationEntropy.ofAdjGraph \nofAdjGraph \n \n Computes the information entropy of the given AdjGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-informationentropy.html#ofDiGraph","title":"InformationEntropy.ofDiGraph","content":"InformationEntropy.ofDiGraph \nofDiGraph \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-informationentropy.html#ofFGraph","title":"InformationEntropy.ofFGraph","content":"InformationEntropy.ofFGraph \nofFGraph \n \n Computes the information entropy of the given FGraph \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E.\n  \n This calculation does not consider self loops "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-loop.html","title":"Loop","content":"Loop \n \nLoop.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nLoop.loopCount \nloopCount \nLoop.loopCount \nloopCount \nLoop.loopCount \nloopCount \nLoop.loopCountAdjGraph \nloopCountAdjGraph \nLoop.loopCountFGraph \nloopCountFGraph \nLoop.loopCountOfDiGraph \nloopCountOfDiGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-loop.html#\u0060\u0060.ctor\u0060\u0060","title":"Loop.\u0060\u0060.ctor\u0060\u0060","content":"Loop.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-loop.html#loopCount","title":"Loop.loopCount","content":"Loop.loopCount \nloopCount \n \n Get the amount of self loops. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-loop.html#loopCount","title":"Loop.loopCount","content":"Loop.loopCount \nloopCount \n \n Get the amount of self loops. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-loop.html#loopCount","title":"Loop.loopCount","content":"Loop.loopCount \nloopCount \n \n Get the amount of self loops. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-loop.html#loopCountAdjGraph","title":"Loop.loopCountAdjGraph","content":"Loop.loopCountAdjGraph \nloopCountAdjGraph \n \n Get the amount of self loops. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-loop.html#loopCountFGraph","title":"Loop.loopCountFGraph","content":"Loop.loopCountFGraph \nloopCountFGraph \n \n Get the amount of self loops. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-loop.html#loopCountOfDiGraph","title":"Loop.loopCountOfDiGraph","content":"Loop.loopCountOfDiGraph \nloopCountOfDiGraph \n \n Get the amount of self loops. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-matchingindex.html","title":"MatchingIndex","content":"MatchingIndex \n \nMatchingIndex.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMatchingIndex.betweenAdjGraphNodes \nbetweenAdjGraphNodes \nMatchingIndex.betweenFGraphNodes \nbetweenFGraphNodes \nMatchingIndex.betweenNodes \nbetweenNodes \nMatchingIndex.betweenNodes \nbetweenNodes"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-matchingindex.html#\u0060\u0060.ctor\u0060\u0060","title":"MatchingIndex.\u0060\u0060.ctor\u0060\u0060","content":"MatchingIndex.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-matchingindex.html#betweenAdjGraphNodes","title":"MatchingIndex.betweenAdjGraphNodes","content":"MatchingIndex.betweenAdjGraphNodes \nbetweenAdjGraphNodes \n \n Get the matching index between two nodes in a AdjGraph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-matchingindex.html#betweenFGraphNodes","title":"MatchingIndex.betweenFGraphNodes","content":"MatchingIndex.betweenFGraphNodes \nbetweenFGraphNodes \n \n Get the matching index between two nodes in a FGraph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-matchingindex.html#betweenNodes","title":"MatchingIndex.betweenNodes","content":"MatchingIndex.betweenNodes \nbetweenNodes \n \n Get the matching index between two nodes in a graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-matchingindex.html#betweenNodes","title":"MatchingIndex.betweenNodes","content":"MatchingIndex.betweenNodes \nbetweenNodes \n \n Get the matching index between two nodes in a graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html","title":"OutDegree","content":"OutDegree \n \nOutDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nOutDegree.average \naverage \nOutDegree.average \naverage \nOutDegree.average \naverage \nOutDegree.averageofAdjGraph \naverageofAdjGraph \nOutDegree.averageofDiGraph \naverageofDiGraph \nOutDegree.averageofFGraph \naverageofFGraph \nOutDegree.maximum \nmaximum \nOutDegree.maximum \nmaximum \nOutDegree.maximum \nmaximum \nOutDegree.maximumOfAdjGraph \nmaximumOfAdjGraph \nOutDegree.maximumOfDiGraph \nmaximumOfDiGraph \nOutDegree.maximumOfFGraph \nmaximumOfFGraph \nOutDegree.minimum \nminimum \nOutDegree.minimum \nminimum \nOutDegree.minimum \nminimum \nOutDegree.minimumOfAdjGraph \nminimumOfAdjGraph \nOutDegree.minimumOfDiGraph \nminimumOfDiGraph \nOutDegree.minimumOfFGraph \nminimumOfFGraph \nOutDegree.sequence \nsequence \nOutDegree.sequence \nsequence \nOutDegree.sequence \nsequence \nOutDegree.sequenceOfAdjGraph \nsequenceOfAdjGraph \nOutDegree.sequenceOfDiGraph \nsequenceOfDiGraph \nOutDegree.sequenceOfFGraph \nsequenceOfFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#\u0060\u0060.ctor\u0060\u0060","title":"OutDegree.\u0060\u0060.ctor\u0060\u0060","content":"OutDegree.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#average","title":"OutDegree.average","content":"OutDegree.average \naverage \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#average","title":"OutDegree.average","content":"OutDegree.average \naverage \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#average","title":"OutDegree.average","content":"OutDegree.average \naverage \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#averageofAdjGraph","title":"OutDegree.averageofAdjGraph","content":"OutDegree.averageofAdjGraph \naverageofAdjGraph \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#averageofDiGraph","title":"OutDegree.averageofDiGraph","content":"OutDegree.averageofDiGraph \naverageofDiGraph \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#averageofFGraph","title":"OutDegree.averageofFGraph","content":"OutDegree.averageofFGraph \naverageofFGraph \n \n Get the mean out-degree of the graph. \n This is an undirected measure so inbound links add to a nodes out-degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#maximum","title":"OutDegree.maximum","content":"OutDegree.maximum \nmaximum \n \n Get the max out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#maximum","title":"OutDegree.maximum","content":"OutDegree.maximum \nmaximum \n \n Get the max out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#maximum","title":"OutDegree.maximum","content":"OutDegree.maximum \nmaximum \n \n Get the max out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#maximumOfAdjGraph","title":"OutDegree.maximumOfAdjGraph","content":"OutDegree.maximumOfAdjGraph \nmaximumOfAdjGraph \n \n Get the max out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#maximumOfDiGraph","title":"OutDegree.maximumOfDiGraph","content":"OutDegree.maximumOfDiGraph \nmaximumOfDiGraph \n \n Get the max out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#maximumOfFGraph","title":"OutDegree.maximumOfFGraph","content":"OutDegree.maximumOfFGraph \nmaximumOfFGraph \n \n Get the max out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#minimum","title":"OutDegree.minimum","content":"OutDegree.minimum \nminimum \n \n Get the min out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#minimum","title":"OutDegree.minimum","content":"OutDegree.minimum \nminimum \n \n Get the min out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#minimum","title":"OutDegree.minimum","content":"OutDegree.minimum \nminimum \n \n Get the min out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#minimumOfAdjGraph","title":"OutDegree.minimumOfAdjGraph","content":"OutDegree.minimumOfAdjGraph \nminimumOfAdjGraph \n \n Get the min out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#minimumOfDiGraph","title":"OutDegree.minimumOfDiGraph","content":"OutDegree.minimumOfDiGraph \nminimumOfDiGraph \n \n Get the min out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#minimumOfFGraph","title":"OutDegree.minimumOfFGraph","content":"OutDegree.minimumOfFGraph \nminimumOfFGraph \n \n Get the min out-degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#sequence","title":"OutDegree.sequence","content":"OutDegree.sequence \nsequence \n \n Returns the out-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#sequence","title":"OutDegree.sequence","content":"OutDegree.sequence \nsequence \n \n Returns the out-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#sequence","title":"OutDegree.sequence","content":"OutDegree.sequence \nsequence \n \n Returns the out-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#sequenceOfAdjGraph","title":"OutDegree.sequenceOfAdjGraph","content":"OutDegree.sequenceOfAdjGraph \nsequenceOfAdjGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#sequenceOfDiGraph","title":"OutDegree.sequenceOfDiGraph","content":"OutDegree.sequenceOfDiGraph \nsequenceOfDiGraph \n \n Returns the out-degree sequence of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-outdegree.html#sequenceOfFGraph","title":"OutDegree.sequenceOfFGraph","content":"OutDegree.sequenceOfFGraph \nsequenceOfFGraph \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-radius.html","title":"Radius","content":"Radius \n \nRadius.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRadius.compute \ncompute \nRadius.compute \ncompute \nRadius.ofAdjGraph \nofAdjGraph \nRadius.ofFGraph \nofFGraph \nRadius.ofGraph2D \nofGraph2D"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-radius.html#\u0060\u0060.ctor\u0060\u0060","title":"Radius.\u0060\u0060.ctor\u0060\u0060","content":"Radius.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-radius.html#compute","title":"Radius.compute","content":"Radius.compute \ncompute \n \n Get the radius of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-radius.html#compute","title":"Radius.compute","content":"Radius.compute \ncompute \n \n Get the radius of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-radius.html#ofAdjGraph","title":"Radius.ofAdjGraph","content":"Radius.ofAdjGraph \nofAdjGraph \n \n Get the radius of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-radius.html#ofFGraph","title":"Radius.ofFGraph","content":"Radius.ofFGraph \nofFGraph \n \n Get the radius of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-radius.html#ofGraph2D","title":"Radius.ofGraph2D","content":"Radius.ofGraph2D \nofGraph2D \n \n Get the radius of graph calculated by their minimum Eccentricity\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-size.html","title":"Size","content":"Size \n \nSize.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSize.compute \ncompute \nSize.compute \ncompute \nSize.compute \ncompute \nSize.sizeOfAdjGraph \nsizeOfAdjGraph \nSize.sizeOfDiGraph \nsizeOfDiGraph \nSize.sizeOfFGraph \nsizeOfFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-size.html#\u0060\u0060.ctor\u0060\u0060","title":"Size.\u0060\u0060.ctor\u0060\u0060","content":"Size.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-size.html#compute","title":"Size.compute","content":"Size.compute \ncompute \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-size.html#compute","title":"Size.compute","content":"Size.compute \ncompute \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-size.html#compute","title":"Size.compute","content":"Size.compute \ncompute \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-size.html#sizeOfAdjGraph","title":"Size.sizeOfAdjGraph","content":"Size.sizeOfAdjGraph \nsizeOfAdjGraph \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-size.html#sizeOfDiGraph","title":"Size.sizeOfDiGraph","content":"Size.sizeOfDiGraph \nsizeOfDiGraph \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-size.html#sizeOfFGraph","title":"Size.sizeOfFGraph","content":"Size.sizeOfFGraph \nsizeOfFGraph \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-volume.html","title":"Volume","content":"Volume \n \nVolume.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nVolume.compute \ncompute \nVolume.compute \ncompute \nVolume.compute \ncompute \nVolume.volumeOfAdjGraph \nvolumeOfAdjGraph \nVolume.volumeOfDiGraph \nvolumeOfDiGraph \nVolume.volumeOfFGraph \nvolumeOfFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-volume.html#\u0060\u0060.ctor\u0060\u0060","title":"Volume.\u0060\u0060.ctor\u0060\u0060","content":"Volume.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-volume.html#compute","title":"Volume.compute","content":"Volume.compute \ncompute \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-volume.html#compute","title":"Volume.compute","content":"Volume.compute \ncompute \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-volume.html#compute","title":"Volume.compute","content":"Volume.compute \ncompute \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-volume.html#volumeOfAdjGraph","title":"Volume.volumeOfAdjGraph","content":"Volume.volumeOfAdjGraph \nvolumeOfAdjGraph \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-volume.html#volumeOfDiGraph","title":"Volume.volumeOfDiGraph","content":"Volume.volumeOfDiGraph \nvolumeOfDiGraph \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-measures-volume.html#volumeOfFGraph","title":"Volume.volumeOfFGraph","content":"Volume.volumeOfFGraph \nvolumeOfFGraph \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html","title":"BarabasiAlbert","content":"BarabasiAlbert \n \nBarabasiAlbert.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBarabasiAlbert.init \ninit \nBarabasiAlbert.init \ninit \nBarabasiAlbert.initDiGraph \ninitDiGraph \nBarabasiAlbert.initFGraph \ninitFGraph \nBarabasiAlbert.initUndirected \ninitUndirected"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#\u0060\u0060.ctor\u0060\u0060","title":"BarabasiAlbert.\u0060\u0060.ctor\u0060\u0060","content":"BarabasiAlbert.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#init","title":"BarabasiAlbert.init","content":"BarabasiAlbert.init \ninit \n \n Returns a DiGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#init","title":"BarabasiAlbert.init","content":"BarabasiAlbert.init \ninit \n \n Returns an FGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#initDiGraph","title":"BarabasiAlbert.initDiGraph","content":"BarabasiAlbert.initDiGraph \ninitDiGraph \n \n Returns a DiGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#initFGraph","title":"BarabasiAlbert.initFGraph","content":"BarabasiAlbert.initFGraph \ninitFGraph \n \n Returns an FGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-barabasialbert.html#initUndirected","title":"BarabasiAlbert.initUndirected","content":"BarabasiAlbert.initUndirected \ninitUndirected \n \n Returns an UndirectedGraph that was randomly grown according to the Barab\u00E1si\u2013Albert model with the given parameters. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html","title":"BollobasRiordan","content":"BollobasRiordan \n \nBollobasRiordan.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBollobasRiordan.initDirected \ninitDirected \nBollobasRiordan.initDirected \ninitDirected \nBollobasRiordan.initDirectedDiGraph \ninitDirectedDiGraph \nBollobasRiordan.initDirectedFGraph \ninitDirectedFGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#\u0060\u0060.ctor\u0060\u0060","title":"BollobasRiordan.\u0060\u0060.ctor\u0060\u0060","content":"BollobasRiordan.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#initDirected","title":"BollobasRiordan.initDirected","content":"BollobasRiordan.initDirected \ninitDirected \n \n Returns a randomly generated, directed, scale free DiGraph, based on the given paramters.\n  \nIf the given graph has less than 3 vertices, a hard-coded example is used instead. The sum of \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ealpha\u003C/span\u003E, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ebeta\u003C/span\u003E, and \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egamma\u003C/span\u003E must be 1."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#initDirected","title":"BollobasRiordan.initDirected","content":"BollobasRiordan.initDirected \ninitDirected \n \n Returns a randomly generated, directed, scale free FGraph, based on the given paramters.\n  \nIf the given graph has less than 3 vertices, a hard-coded example is used instead. The sum of \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ealpha\u003C/span\u003E, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ebeta\u003C/span\u003E, and \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egamma\u003C/span\u003E must be 1."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#initDirectedDiGraph","title":"BollobasRiordan.initDirectedDiGraph","content":"BollobasRiordan.initDirectedDiGraph \ninitDirectedDiGraph \n \n Returns a randomly generated, directed, scale free DiGraph, based on the given paramters.\n  \nIf the given graph has less than 3 vertices, a hard-coded example is used instead. The sum of \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ealpha\u003C/span\u003E, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ebeta\u003C/span\u003E, and \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egamma\u003C/span\u003E must be 1."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-bollobasriordan.html#initDirectedFGraph","title":"BollobasRiordan.initDirectedFGraph","content":"BollobasRiordan.initDirectedFGraph \ninitDirectedFGraph \n \n Returns a randomly generated, directed, scale free FGraph, based on the given paramters.\n  \nIf the given graph has less than 3 vertices, a hard-coded example is used instead. The sum of \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ealpha\u003C/span\u003E, \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ebeta\u003C/span\u003E, and \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egamma\u003C/span\u003E must be 1."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-completegraph.html","title":"CompleteGraph","content":"CompleteGraph \n \nCompleteGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompleteGraph.init \ninit"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-completegraph.html#\u0060\u0060.ctor\u0060\u0060","title":"CompleteGraph.\u0060\u0060.ctor\u0060\u0060","content":"CompleteGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-completegraph.html#init","title":"CompleteGraph.init","content":"CompleteGraph.init \ninit \n \n Returns a complete undirected graph. Every node is connected to every node.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-erdosrenyi.html","title":"ErdosRenyi","content":"ErdosRenyi \n \nErdosRenyi.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nErdosRenyi.init \ninit"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-erdosrenyi.html#\u0060\u0060.ctor\u0060\u0060","title":"ErdosRenyi.\u0060\u0060.ctor\u0060\u0060","content":"ErdosRenyi.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-erdosrenyi.html#init","title":"ErdosRenyi.init","content":"ErdosRenyi.init \ninit \n \n Returns a Erdos-Renyi graph https://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93R%C3%A9nyi_model\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-gilbert.html","title":"Gilbert","content":"Gilbert \n\n Returns an ArrayAdjacencyGraph that is generated randomly with the given parameters.\n\n numberOfNodes indicates the number of vertices the final graph will have. \n probability represents the probability of an edge between 2 vertices.   \n \nGilbert.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nGilbert.initDirectedAdjGraph \ninitDirectedAdjGraph \nGilbert.initDirectedFGraph \ninitDirectedFGraph \nGilbert.initUndirectedFGraph \ninitUndirectedFGraph \nGilbert.initUndirectedGraph \ninitUndirectedGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-gilbert.html#\u0060\u0060.ctor\u0060\u0060","title":"Gilbert.\u0060\u0060.ctor\u0060\u0060","content":"Gilbert.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-gilbert.html#initDirectedAdjGraph","title":"Gilbert.initDirectedAdjGraph","content":"Gilbert.initDirectedAdjGraph \ninitDirectedAdjGraph \n \n Inits a directed AdjGraph according to the gilbert random plane networks\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-gilbert.html#initDirectedFGraph","title":"Gilbert.initDirectedFGraph","content":"Gilbert.initDirectedFGraph \ninitDirectedFGraph \n \n Inits a directed FGraph according to the gilbert random plane networks\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-gilbert.html#initUndirectedFGraph","title":"Gilbert.initUndirectedFGraph","content":"Gilbert.initUndirectedFGraph \ninitUndirectedFGraph \n \n Inits an undirected FGraph according to the gilbert random plane networks\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-gilbert.html#initUndirectedGraph","title":"Gilbert.initUndirectedGraph","content":"Gilbert.initUndirectedGraph \ninitUndirectedGraph \n \n Inits an undirectedGraph according to the gilbert random plane networks\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-regularringlattice.html","title":"RegularRingLattice","content":"RegularRingLattice \n \nRegularRingLattice.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRegularRingLattice.initUndirectedGraph \ninitUndirectedGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-regularringlattice.html#\u0060\u0060.ctor\u0060\u0060","title":"RegularRingLattice.\u0060\u0060.ctor\u0060\u0060","content":"RegularRingLattice.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-regularringlattice.html#initUndirectedGraph","title":"RegularRingLattice.initUndirectedGraph","content":"RegularRingLattice.initUndirectedGraph \ninitUndirectedGraph \n \n Returns an Undirected graph in a ring lattice in whichall node have the same degree and there are no self loops.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-stargraph.html","title":"StarGraph","content":"StarGraph \n \nStarGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nStarGraph.initStarDiGraph \ninitStarDiGraph \nStarGraph.initStarFGraph \ninitStarFGraph \nStarGraph.initStarGraphSeq \ninitStarGraphSeq"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-stargraph.html#\u0060\u0060.ctor\u0060\u0060","title":"StarGraph.\u0060\u0060.ctor\u0060\u0060","content":"StarGraph.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-stargraph.html#initStarDiGraph","title":"StarGraph.initStarDiGraph","content":"StarGraph.initStarDiGraph \ninitStarDiGraph \n \n Returns a StarGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-stargraph.html#initStarFGraph","title":"StarGraph.initStarFGraph","content":"StarGraph.initStarFGraph \ninitStarFGraph \n \n Returns a StarGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-stargraph.html#initStarGraphSeq","title":"StarGraph.initStarGraphSeq","content":"StarGraph.initStarGraphSeq \ninitStarGraphSeq \n \n Returns a StarGraph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-wattsstrogatz.html","title":"WattsStrogatz","content":"WattsStrogatz \n \nWattsStrogatz.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nWattsStrogatz.initWattsStrogatz \ninitWattsStrogatz"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-wattsstrogatz.html#\u0060\u0060.ctor\u0060\u0060","title":"WattsStrogatz.\u0060\u0060.ctor\u0060\u0060","content":"WattsStrogatz.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-randommodels-wattsstrogatz.html#initWattsStrogatz","title":"WattsStrogatz.initWattsStrogatz","content":"WattsStrogatz.initWattsStrogatz \ninitWattsStrogatz \n \n Returns a Watts-Strogatz graph https://en.wikipedia.org/wiki/Watts%E2%80%93Strogatz_model\n "},{"uri":"https://fslab.org/Graphoscope/R_BollobasRiordan.html","title":"Bollobas-Riordan","content":"(**\n---\ntitle: Bollobas-Riordan\ncategory: Random Graph \ncategoryindex: 4\nindex: 3 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 4.1.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Random graph models\n## Bollob\u00E1s-Riordan methode\nThe Bollob\u00E1s-Riordan method, proposed by mathematicians B\u00E9la Bollob\u00E1s and Oliver Riordan, is a procedure for generating random graphs with a given degree sequence\nIt allows researchers to explore and analyze the properties of large-scale networks and complex systems in a stochastic setting.\n*)\nopen Graphoscope\nopen Graphoscope.RandomModels\nlet N = 50\n\nlet myBollobasRiordan = RandomModels.BollobasRiordan.initDirectedFGraph  N 0.1 0.6 0.3 0.6 0.4 FGraph.empty\n\n(***hide***)\nlet g = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022(FGraph.countNodes myBollobasRiordan) (FGraph.countEdges myBollobasRiordan)\n(*** include-value: g ***)"},{"uri":"https://fslab.org/Graphoscope/A_FloydWarshall.html","title":"Floyd-Warshall","content":"(**\n---\ntitle: Floyd-Warshall\ncategory: Algorithms\ncategoryindex: 3\nindex: 2\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Introducing the Floyd-Warshall Algorithm for All-Pairs Shortest Path in Graphs\nThe Floyd-Warshall algorithm is a widely used algorithm in graph theory and computer science for finding the shortest paths between all pairs of vertices in a weighted graph. It is named after its inventors, Robert Floyd and Stephen Warshall, who independently proposed it in the early 1960s.\n\nThe algorithm works on both directed and undirected graphs, where edges have non-negative weights (can be zero or positive but not negative). The goal is to find the shortest path distance between all pairs of vertices in the graph.\n\n\nFloyd-Warshall and Dijkstra\u0027s algorithm are both used to find the shortest paths in a graph, but they serve different purposes and have different use cases. \n\nThey are not direct alternatives to each other; rather, they are used in different scenarios based on the problem requirements and the characteristics of the graph.\n*)\n\nopen Graphoscope\nopen Cytoscape.NET\n\nlet dwgDiGraph =\n    let nodes = [|0;1;2;3;4;5|]|\u003EArray.map(fun x -\u003E x,x)\n    let edges = [|0,1,7.;0,2,12.;1,2,2.;1,3,9.;2,4,10.;4,3,4.;3,5,1.;4,5,5.|]\n    DiGraph.createFromNodes nodes\n    |\u003EDiGraph.addEdges edges \n    \n\nlet dijDiGraph = Algorithms.FloydWarshall.fromJaggedArray  (DiGraph.toMatrix dwgDiGraph)"},{"uri":"https://fslab.org/Graphoscope/R_Gilbert.html","title":"Gilbert","content":"(**\n---\ntitle: Gilbert\ncategory: Random Graph \ncategoryindex: 4\nindex: 2 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Random graph models\n## Gilbert model\n\nThe gilbert model (or G(N,p) model) was introduced by Edgar Gilbert in 1959. In this model, you assign a fixed amount of vertices N and a probability p.\np denotes the probality, that edge between two vertices exists or not.  \n*)\nopen Graphoscope\nopen Graphoscope.RandomModels\nlet N = 50\nlet p = 0.5\n\nlet myGilbertGraph = Gilbert.initDirectedFGraph N p\n\n(***hide***)\nlet g = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022(FGraph.countNodes myGilbertGraph) (FGraph.countEdges myGilbertGraph)\n(*** include-value: g ***)"},{"uri":"https://fslab.org/Graphoscope/index.html","title":"Getting Started","content":"(**\n---\ntitle: Getting Started\ncategory: Graphoscope \ncategoryindex: 1\nindex: 1 \n---\n\n# Graphoscope\n\nThe Graphoscope project aims to provide a rigorous and performant tool for Network Science. \nIt is aimed at anyone who works with Graphs/Networks and does not require a strong knowledge of F# to get started. \n\n# Getting Started \n\n## Prerequisites \n\nTo set up a dev environment, we recommend [VSCode](https://code.visualstudio.com/) with the [Ionide](https://marketplace.visualstudio.com/items?itemName=Ionide.Ionide-fsharp) plugin  \nYou will also need [DotNet 6](https://dotnet.microsoft.com/en-us/download/dotnet/6.0) installed.\n\nThe library is designed primarily for use in an fsharp scripting environment using .fsx files. \nBut it also works well in [notebooks](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode).\nThis [video](https://www.youtube.com/watch?v=1ROKvmcOloo\u0026list=PLdo4fOcmZ0oUFghYOp89baYFBTGxUkC7Z\u0026index=3) has a good walk through of setting your environment. \n\n# Contributing and copyright\n\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork \nthe project and submit pull requests. If you\u0027re adding a new public API, please also \nconsider adding [samples][docs] that can be turned into a documentation. You might\nalso want to read the [library design notes][readme] to understand how it works.\n\nThe library is available under the OSI-approved MIT license, which allows modification and \nredistribution for both commercial and non-commercial purposes. For more information see the \n[License file][license] in the GitHub repository. \n\n  [docs]: https://github.com/fslaborg/Graphoscope/tree/main/docs\n  [gh]: https://github.com/fslaborg/Graphoscope\n  [issues]: https://github.com/fslaborg/Graphoscope/issues\n  [readme]: https://github.com/fslaborg/Graphoscope/blob/main/README.md\n  [license]: https://github.com/fslaborg/Graphoscope/blob/main/LICENSE\n*)"},{"uri":"https://fslab.org/Graphoscope/G_Digraph_2_Intro.html","title":"DiGraph","content":"(**\n---\ntitle: DiGraph\ncategory: Graphoscope \ncategoryindex: 1\nindex: 2 \n---\n*)\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\nPlotly.NET.Defaults.DefaultDisplayOptions \u003C-\n    Plotly.NET.DisplayOptions.init (PlotlyJSReference = Plotly.NET.PlotlyJSReference.NoReference)\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Datastructure \nThe DiGraph is a graph representation that uses a fast node-index-based lookup of edge data, utilizing ResizeArrays for efficient storage and retrieval of information.\nThe structure is visualised here:\n\n[![](https://mermaid.ink/img/pako:eNpdkM8KwjAMxl9FclLQF9hBUDt1iF70ZLtDWKMrunbUDhHx3U39Q8Wevv6-JB_JHSqnCTI4nN21qtGH3k4o2-M3kcIsPLZ1ORqNp32j19gOPhYTIV0Xcn2kS5lgLo39ZVNmM7nhiBXdPkwwK94yTzLSuYy9AgOWyV_8w5iz_M78Bi1jUMosXn4hog1DaMg3aDSveY81CkJNDSnIWGr0JwXKPrgOu-C2N1tBFnxHQ-hajYGEwaPHBrIDni9MW7R759KftAnOr993fJ3z8QQLO2iF?type=png)](https://mermaid.live/edit#pako:eNpdkM8KwjAMxl9FclLQF9hBUDt1iF70ZLtDWKMrunbUDhHx3U39Q8Wevv6-JB_JHSqnCTI4nN21qtGH3k4o2-M3kcIsPLZ1ORqNp32j19gOPhYTIV0Xcn2kS5lgLo39ZVNmM7nhiBXdPkwwK94yTzLSuYy9AgOWyV_8w5iz_M78Bi1jUMosXn4hog1DaMg3aDSveY81CkJNDSnIWGr0JwXKPrgOu-C2N1tBFnxHQ-hajYGEwaPHBrIDni9MW7R759KftAnOr993fJ3z8QQLO2iF)\n\n# Quickstart \n\nWe can build a graph from scratch. Either by passing an array of edges:\n*)\nopen Graphoscope\nopen DiGraph\n\n[|(0, 1, 1.0); (0, 2, 1.0); (1, 1, 1.0); (1, 3, 1.0); (3, 2, 1.0); (4, 0, 1.0)|]\n|\u003E DiGraph.createFromEdges\n\n(**\nor by creating an empty graph and adding the nodes and edges one by one. \nThe int and float after the \u0022create\u0022 define the type of the nodes and edges.\n*)\n\nlet emptyGraph :DiGraph\u003Cint, int, float\u003E = DiGraph.empty\n\nlet edge = (1,3, 1.0)\n\nlet filledGraph =\n  emptyGraph\n  |\u003E DiGraph.addNode 1 1\n  |\u003E DiGraph.addNode 2 2\n  |\u003E DiGraph.addNode 3 3\n  |\u003E DiGraph.addEdge edge\n\n(***hide***)\nlet filledGraphNodes = filledGraph |\u003E DiGraph.countNodes|\u003E sprintf \u0022Manually created a graph with %i nodes\u0022\n(*** include-value: filledGraphNodes ***)\n\n(**\n# Working with Graphs\n\n# From Data\nFor illustration, we will import a directed graph from The [KONECT Project](http://konect.cc/) website. This is an excellent resource with many graphs in an edge list based format which is simple\nto import and analyse using Graphoscope. We will start by importing a [graph](http://konect.cc/networks/moreno_rhesus/) describing the grooming interactions between rhesus monkeys.\n\nCreate a monkeys.fsx and run the following code to import and print some basic measures. Further documention of DiGraph functionality is [here](reference/graphoscope-digraph.html)\n*)\n\nopen FSharp.Data\n\nlet getElementOfFile (fullpath: string) (delimiter: string) (headerRows: int) (weightsIncluded: bool)  = \n        let rows  = CsvFile.Load(fullpath, delimiter, skipRows = headerRows, hasHeaders = false).Rows\n        rows\n        |\u003E Seq.map (fun row -\u003E int row[0],int row[0], int row[1],int row[1], if weightsIncluded then float row[2] else 1.0)\n\n\nlet file = __SOURCE_DIRECTORY__ \u002B \u0022/../tests/Graphoscope.Tests/ReferenceGraphs/out.moreno_rhesus_rhesus.txt\u0022\nlet monkeyGraph = \n  \n  CsvFile.Load(file, \u0022 \u0022, skipRows = 2, hasHeaders = false).Rows\n  |\u003E Seq.map (fun row -\u003E \n              int row[0],int row[0], int row[1],int row[1], float row[2])\n  |\u003E DiGraph.ofSeq\n\n\n\n(***hide***)\nlet outputMonkeyGraph = sprintf \u0022Successfully imported the graph! It has %i nodes and %i edges. The average degree is %f \u0022 (DiGraph.countNodes monkeyGraph) (DiGraph.countEdges monkeyGraph) (Measures.Degree.average monkeyGraph)\n(*** include-value: outputMonkeyGraph ***)\n\n\n(**\nWe can also import undirected graphs using the [Graph](reference/graphoscope-graph.html) namespace. These examples use the [Karate club](http://konect.cc/networks/ucidata-zachary/) graph.\n*)\n\nlet karateFile= __SOURCE_DIRECTORY__ \u002B \u0022/../tests/Graphoscope.Tests/ReferenceGraphs/zachary.txt\u0022\nlet karateGraph = \n  let g = DiGraph.empty\u003Cint,int,float\u003E\n  getElementOfFile karateFile \u0022 \u0022 2 false\n  |\u003E Seq.iter(fun (s1,s2,t1,t2,w: float) -\u003E DiGraph.addElement s1 s2 t1 t2 w g|\u003Eignore)\n  g\n\n(***hide***)\nlet karateOutput = sprintf \u0022Successfully imported the undirected karate graph! It has %i nodes and %i edges. The average degree is %f \u0022 (DiGraph.countNodes karateGraph) (DiGraph.countEdges karateGraph) (Measures.Degree.average karateGraph)\n(*** include-value: karateOutput ***)\n\n(**\nA conversion into an Adjacency Matrix is also very easily achievable. It can be executed as follows. \n*)\nlet monkeyAdjacencyMatrix = DiGraph.toMatrix monkeyGraph\n(***include-value: monkeyAdjacencyMatrix***)\n\n(**\n## Charting\nConsider using [Plotly.NET](https://plotly.net/) for charting. Built on top of plotly.js, it is a mature library offering a wide range of customisable charts. \nHere is a basic example showing degree distribution within the Karate club. \n*)\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\nopen Plotly.NET\n\nMeasures.Degree.sequence karateGraph\n|\u003E Chart.Histogram\n|\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/Graphoscope/G_FGraph_3_Intro.html","title":"FGraph","content":"(**\n---\ntitle: FGraph\ncategory: Graphoscope \ncategoryindex: 1\nindex: 3\n---\n*)\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 4.1.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# What is FGraph\n\nThe FGraph is an adaptation of a functional graph. \nIn programming, a functional graph typically refers to a data structure or representation used to model and analyze the flow of data or the dependencies between functions in a functional programming paradigm. \nFunctional programming emphasizes the use of pure functions and avoids mutable state, making functional graphs particularly useful for understanding and optimizing the execution of functional programs.\nIt is compromised of a Dictionary, containing the nodeIndex as Key and the so called FContext as Value. The structure is visualised here:\n\n\n[![](https://mermaid.ink/img/pako:eNpNj80KwjAQhF9F9qSgL9CDoI2tIoigJxMPS7Jaf5qUJEWL-O5utaJ7mv1mmGUfoJ0hSOBwdTddoI-9rVC2xzORWe6xKvaj0XjaX3HsQs2g85il_Sx1NtI9djBlKOTakyFNITgf9j9jJtsGgRH_YCY3tdaB_rKCcS4n5oyarG46mrX0I3OW83fZkr52yxZyZo6fAzCEknyJJ8OPPdqIglhQSQoSlgb9RYGyT85hHd2msRqS6GsaQl0ZjCROePRYQnLAa2Baod05992fLxMxYKE?type=png)](https://mermaid.live/edit#pako:eNpNj80KwjAQhF9F9qSgL9CDoI2tIoigJxMPS7Jaf5qUJEWL-O5utaJ7mv1mmGUfoJ0hSOBwdTddoI-9rVC2xzORWe6xKvaj0XjaX3HsQs2g85il_Sx1NtI9djBlKOTakyFNITgf9j9jJtsGgRH_YCY3tdaB_rKCcS4n5oyarG46mrX0I3OW83fZkr52yxZyZo6fAzCEknyJJ8OPPdqIglhQSQoSlgb9RYGyT85hHd2msRqS6GsaQl0ZjCROePRYQnLAa2Baod05992fLxMxYKE)\n\n\n# Quickstart \n## Creating an empty graph and filling it with single elements\nBegin by creating an empty graph,meaning a data structure with no nodes or edges. \nThen populate the graph with single elements, individual nodes are added one by one, and edges can be introduced to establish connections between them.\n*)\n\nopen Graphoscope\nopen FGraph\n\nlet graphToFill =\n\n    FGraph.empty\n    |\u003E FGraph.addNode 1 \u00221\u0022\n    |\u003E FGraph.addNode 2 \u00222\u0022\n    |\u003E FGraph.addEdge 1 2 1.\n\n\n(***hide***)\nlet graphToFillOutput = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022 (FGraph.countNodes graphToFill) (FGraph.countEdges graphToFill)\n(*** include-value: graphToFillOutput ***)\n\n(**    \n# Working with Graphs\n\n## Creating a Graph using FGraph\n### Creating an empty graph and add collections of elements\nAnother way of creating a graph is by filling it with collections of nodes and edges as seen below:\n\n*)\nlet graphToFill\u0027 =\n    \n    let nodes = List.init 100 (fun x -\u003E x,$\u0022{x}\u0022)\n\n    let edges = List.init 45 (fun x -\u003E x,x*2,1.)\n\n    FGraph.empty\n    |\u003E FGraph.addNodes nodes\n    |\u003E FGraph.addEdges edges\n\n(***hide***)\nlet graphToFill2Output = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022(FGraph.countNodes graphToFill\u0027) (FGraph.countEdges graphToFill\u0027)\n(*** include-value: graphToFill2Output ***)\n\n(**\n### Removing Nodes and Edges\nTo remove Nodes or Edges you can just use the remove functions provided:\n*)\nlet graphWithRemovedElements =\n    graphToFill\u0027\n    |\u003E FGraph.removeEdge 1 2\n    |\u003E FGraph.removeNode 0\n\n(***hide***)\nlet removing = sprintf \u0022You have reduced the graph to %i nodes and %i edges\u0022 (FGraph.countNodes graphWithRemovedElements) (FGraph.countEdges graphWithRemovedElements)\n(*** include-value: removing ***)\n\n(**\n##\n\n# From Data\n## Import a graph  \n\nThis directed network contains observed grooming episodes between free ranging rhesus macaques (Macaca mulatta) \nin Cayo Santiago during a two month period in 1963. Cayo Santiago is an island off the coast of Puerto Rico, also \nknown as Isla de los monos (Island of the monkeys). A node represents a monkey and a directed edge A \u2192 B denotes \nthat the rhesus macaque A groomed rhesus macaque B. The integer edge weights indicate how often this behaviour was observed.\n\n\n*)\nopen Graphoscope\n\nopen FSharpAux.IO\nopen FSharpAux.IO.SchemaReader.Attribute\n\n\n(**\nFirst we model the input domain as a reccord type and read a sequence of MonkeyEdges\n*)\ntype MonkeyEdge = {\n    [\u003CField(0)\u003E] Source  : int\n    [\u003CField(1)\u003E] Target  : int\n    [\u003CField(2)\u003E] Groomed : int\n}\n\nlet monkeyEdges =\n    Seq.fromFileWithCsvSchema\u003CMonkeyEdge\u003E(\u0022D:/Source/Graphoscope/tests/Graphoscope.Tests/ReferenceGraphs/out.moreno_rhesus_rhesus.txt\u0022,\u0027 \u0027,false,skipLines=2 )\n\n(**\nConvert a MonkeyEdge record to a sequence of graph elements (sourceKey * sourceData * targetKey * targetData * edgeData)\n*)\nlet monkeyGraph =\n    monkeyEdges\n    |\u003E Seq.map (fun mke -\u003E\n        mke.Source, sprintf \u0022Monkey_%i\u0022 mke.Source,mke.Target,sprintf \u0022Monkey_%i\u0022 mke.Target,float mke.Groomed)\n    |\u003E FGraph.ofSeq\n\n(**\nlet\u0027s use Cytoscape.NET for visualization:\n*)\n\nopen Cytoscape.NET\nlet vizGraph =\n    CyGraph.initEmpty ()\n    |\u003E CyGraph.withElements [\n            for (sk,s,tk,t,el) in (FGraph.toSeq monkeyGraph) do\n                let sk, tk = (string sk), (string tk)\n                yield Elements.node sk [ CyParam.label s ]\n                yield Elements.node tk [ CyParam.label t ]\n                yield Elements.edge  (sprintf \u0022%s_%s\u0022 sk tk) sk tk [ CyParam.label el ]\n        ]\n    |\u003E CyGraph.withStyle \u0022node\u0022     \n        [\n            CyParam.content =. CyParam.label\n            CyParam.color \u0022#A00975\u0022\n        ]\n\n(***hide***)\nvizGraph \n|\u003E CyGraph.withZoom(CytoscapeModel.Zoom.Init(ZoomingEnabled=false)) \n|\u003E CyGraph.withSize(800, 400) \n|\u003E HTML.toGraphHTML()\n(*** include-it-raw ***)\n"},{"uri":"https://fslab.org/Graphoscope/M_1_Degree.html","title":"Degree","content":"(**\n---\ntitle: Degree\ncategory: Measures \ncategoryindex: 2\nindex: 1 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\nPlotly.NET.Defaults.DefaultDisplayOptions \u003C-\n    Plotly.NET.DisplayOptions.init (PlotlyJSReference = Plotly.NET.PlotlyJSReference.NoReference)\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Intoduction to Measures using FGraph\nGraphoscope provides a comprehensive set of measurement tools designed to analyze, quantify, and interpret the features of graphs. \nThese measurements offer valuable insights into the topology, connectivity, and dynamics of your networks. \nWhether you are exploring social connections, optimizing communication pathways, or studying the spread of diseases, our graph measurement functionalities are here to simplify your analysis and decision-making processes.\n## Reading a complete graph representation\nStep 1 is the loading of our [example graph](http://konect.cc/networks/moreno_rhesus/), sourced from [The KONECT Project](http://konect.cc) describing the grooming interactions between rhesus monkeys.\n*)\nopen Graphoscope\nopen Plotly.NET\nopen FSharpAux.IO\nopen FSharp.Data\nopen FSharpAux.IO.SchemaReader.Attribute\n\n(***hide***)\nlet file = __SOURCE_DIRECTORY__ \u002B \u0022/../tests/Graphoscope.Tests/ReferenceGraphs/out.moreno_rhesus_rhesus.txt\u0022\n\nlet monkeyGraphDeg =\n    CsvFile.Load(file, \u0022 \u0022, skipRows = 2, hasHeaders = false).Rows\n    |\u003E Seq.map (fun row -\u003E \n                int row[0],int row[0], int row[1],int row[1], float row[2])\n    |\u003E FGraph.ofSeq\n\nlet monkeyGraph2Deg = \n  \n  CsvFile.Load(file, \u0022 \u0022, skipRows = 2, hasHeaders = false).Rows\n  |\u003E Seq.map (fun row -\u003E \n              int row[0],int row[0], int row[1],int row[1], float row[2])\n  |\u003E DiGraph.ofSeq\n\n(**\n## Degree\nIn graph science, a degree is a fundamental concept that plays a crucial role in understanding the structure and properties of graphs. \nThe degree of a node in a graph is defined as the number of edges incident to that node, i.e., the number of connections that node has with other nodes in the graph. \nThe degree is a basic measure that provides valuable information about the topology and connectivity of the graph.\n\n### Average Degree\nThe average degree (also known as the average node degree or average connectivity) of a graph is a measure that indicates, on average, how many connections each node has in the network.\n*)\n\nlet averageDegreeMokeyGraph     = Measures.Degree.average monkeyGraphDeg\n\nlet averageDegreeMokeyGraph2    = Measures.Degree.average monkeyGraph2Deg\n\n\n(***hide***)\nlet avD = sprintf \u0022The average degree is %f for FGraph and %f fOr DiGraph\u0022 (averageDegreeMokeyGraph) (averageDegreeMokeyGraph2)\n(*** include-value: avD ***)\n\n(**\n### Max Degree\nThe maximum degree of a graph provides insights into the importance of highly connected nodes (hubs) within the network. \nUnderstanding hubs is crucial for analyzing network resilience, efficiency, and vulnerability\n*)\n\nlet maxDregree = Measures.Degree.maximum monkeyGraphDeg\n\n(***hide***)\nlet maxD = sprintf \u0022The maximal degree is %i\u0022 (maxDregree)\n(*** include-value: maxD ***)\n\n(**\n### Degree Distribution\nDegree distribution is an important concept in graph theory and network science that describes the statistical pattern of node degrees in a graph. \nIt provides valuable insights into the connectivity and structure of networks and plays a crucial role in understanding various aspects of complex systems.\n*)\n\nMeasures.Degree.sequence monkeyGraphDeg\n|\u003E Chart.Histogram\n|\u003E GenericChart.toChartHTML\n(***include-it-raw***)"},{"uri":"https://fslab.org/Graphoscope/A_Dijkstra.html","title":"Dijkstra","content":"(**\n---\ntitle: Dijkstra\ncategory: Algorithms\ncategoryindex: 3\nindex: 1\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Shortest path between all the vertices using Dijkstra Algorithm on an FGraph.\n\nDijkstra algorithm, given by a brilliant Dutch computer scientist and software engineer Dr. Edsger Dijkstra in 1959.\nDijkstra algorithm is a greedy algorithm that solves the single-source shortest path problem for a directed and undirected\ngraph that has non-negative edge weight.\n\nLet\u0027s start with a directed weighted graph. We will find shortest path between all the vertices using Dijkstra Algorithm.\n\n*)\n\nopen Graphoscope\n\nlet dwg =\n    let nodes = [|0,\u0022A\u0022;1,\u0022B\u0022;2,\u0022C\u0022;3,\u0022D\u0022;4,\u0022E\u0022;5,\u0022F\u0022|]\n    let edges = [|0,1,7.;0,2,12.;1,2,2.;1,3,9.;2,4,10.;4,3,4.;3,5,1.;4,5,5.|]\n    FGraph.create(nodes,edges)\n\n(**\nLet\u00B4s have a look on the graph:\n*)\n\n(***hide***)\nopen Cytoscape.NET\nlet vizGraph =\n    CyGraph.initEmpty ()\n    |\u003E CyGraph.withElements [\n            for (sk,s,tk,t,el) in (FGraph.toSeq dwg) do\n                let sk, tk = (string sk), (string tk)\n                yield Elements.node sk [ CyParam.label s ]\n                yield Elements.node tk [ CyParam.label t ]\n                yield Elements.edge  (sprintf \u0022%s_%s\u0022 sk tk) sk tk [ CyParam.label el ]\n        ]\n    |\u003E CyGraph.withStyle \u0022node\u0022\n        [\n            CyParam.content =. CyParam.label\n            CyParam.color \u0022#A00975\u0022\n        ]\n    |\u003E CyGraph.withStyle \u0022edge\u0022\n        [\n            CyParam.content =. CyParam.label\n            CyParam.Curve.style \u0022bezier\u0022\n            CyParam.Target.Arrow.shape \u0022triangle\u0022\n            CyParam.Source.Arrow.shape \u0022circle\u0022\n            CyParam.color \u0022#438AFE\u0022\n        ]\nvizGraph\n|\u003E CyGraph.withZoom(CytoscapeModel.Zoom.Init(ZoomingEnabled=false))\n    |\u003E CyGraph.withLayout (\n        Layout.initCose (Layout.LayoutOptions.Cose(ComponentSpacing=40))\n        )\n|\u003E CyGraph.withSize(800, 400)\n|\u003E Cytoscape.NET.HTML.toGraphHTML() \n(*** include-it-raw ***)\n\n(**\nAnd now, let\u00B4s compute the shortest paths via Dijkstra :\n\n*)\nlet dij = Algorithms.Dijkstra.compute(0,id,dwg)\n\n\n(**\n# Shortest path between all the vertices using Dijkstra Algorithm on DiGraph.\nComputation of the shortest paths is also available using the DiGraph structure.\nLets compare them using the same graph as above:\n*)\n\n\nlet dwgDiGraph =\n    let nodes = [|0;1;2;3;4;5|]|\u003EArray.map(fun x -\u003E x,x)\n    let edges = [|0,1,7.;0,2,12.;1,2,2.;1,3,9.;2,4,10.;4,3,4.;3,5,1.;4,5,5.|]\n    DiGraph.createFromNodes nodes\n    |\u003E DiGraph.addEdges edges\n    \n\nlet dijDiGraph = Algorithms.Dijkstra.compute(0,id,dwgDiGraph)"},{"uri":"https://fslab.org/Graphoscope/A_Component.html","title":"Components","content":"(**\n---\ntitle: Components\ncategory: Algorithms\ncategoryindex: 3\nindex: 4\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Graph components\nIn graph theory, a graph component refers to a subset of vertices in a graph, where each vertex is connected to every other vertex in the subset through a path of edges. \nLet\u00B4s open an example graph and show the community detection per color:\n*)\nopen Graphoscope\nopen Cytoscape.NET\n\nlet componentExampleGraph =\n    let edgeSeq =\n        seq{\n            0,1,1\n            0,2,1\n            0,3,1\n            4,5,1\n            4,6,1\n            4,7,1\n            8,9,1\n            6,10,1\n            8,11,1\n        }\n        |\u003E Seq.map(fun (s,t,w) -\u003E\n            s,s,t,t,(float w)\n        )\n    AdjGraph.ofSeq edgeSeq\n\n(**\nThis graph is seperated into 3 distinct components.\nNext we use a pre-generated color-pallet and Cytoscape.NET to visualise the graph and its components:\n*)\n\nlet colors =    \n    [\n        \u0022#3F51B5\u0022\n        \u0022#3F51B5\u0022\n        \u0022#3F51B5\u0022\n        \u0022#3F51B5\u0022\n        \u0022#FFC107\u0022        \n        \u0022#FFC107\u0022        \n        \u0022#FFC107\u0022        \n        \u0022#FFC107\u0022\n        \u0022#FFEB3B\u0022\n        \u0022#FFEB3B\u0022\n        \u0022#FFEB3B\u0022\n        \u0022#FFEB3B\u0022\n    ]\n\nlet renderCyGraph (nodeLabelF) (graph:AdjGraph\u003C\u0027NodeKey,\u0027NodeData,\u0027EdgeData\u003E) =\n\n    CyGraph.initEmpty ()\n    |\u003E CyGraph.withElements [\n            for (sk,s,tk,t,el) in (AdjGraph.toSeq graph) do\n                let sk, tk = (string sk), (string tk)\n                yield Elements.node sk (nodeLabelF s )\n                yield Elements.node tk (nodeLabelF t )\n                yield Elements.edge  (sprintf \u0022%s_%s\u0022 sk tk) sk tk [ ]\n        ]\n    |\u003E CyGraph.withStyle \u0022node\u0022\n        [\n            CyParam.color \u0022black\u0022\n            CyParam.label =. CyParam.label\n            CyParam.Text.Align.center\n            CyParam.Text.Outline.width 0.5\n            CyParam.Background.color   =. CyParam.color\n            CyParam.weight 100\n        ]\n\n    |\u003E CyGraph.withLayout  (\n        Layout.initBreadthfirst(Layout.LayoutOptions.Generic())\n            )  \n    |\u003E CyGraph.withZoom(CytoscapeModel.Zoom.Init(ZoomingEnabled=false))\n    |\u003E CyGraph.withSize(800, 400)\n    |\u003E Cytoscape.NET.HTML.toGraphHTML() \n\n\nrenderCyGraph (fun x -\u003E [CyParam.label x;CyParam.color colors.[x]]) componentExampleGraph\n(*** include-it-raw ***)\n\n\n(**\nWe can use Algorithms.Components to seperate the components from each other, where each components gets its own subgraph:\n*)\n\nlet components = \n    Algorithms.Components.getGraphComponentsOfAdjGraph componentExampleGraph\n\n\nrenderCyGraph (fun (x) -\u003E [CyParam.label x;CyParam.color colors.[x]]) (components|\u003ESeq.head) \n(*** include-it-raw ***)"},{"uri":"https://fslab.org/Graphoscope/A_Louvain.html","title":"Louvain-Algorithm","content":"(**\n---\ntitle: Louvain-Algorithm\ncategory: Algorithms\ncategoryindex: 3\nindex: 3\n---\n*)\n\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# The Louvain-Algorithm for Community Detection and Modularity Optimization\nThe Louvain algorithm is a popular and efficient method for community detection and modularity optimization in complex networks. \nCommunity detection is the task of partitioning a network into groups of nodes, known as communities or clusters, where nodes within a community are densely connected to each other while having fewer connections to nodes in other communities. \nModularity is a measure used to quantify the quality of a given network partition.\nLet\u00B4s open an example graph and show the community detection per color:\n*)\nopen Graphoscope\nopen Cytoscape.NET\n\nlet louvainExampleGraph =\n    let edgeSeq =\n        seq{\n            0,1,1\n            0,3,1\n            0,4,1\n            1,2,1\n            1,4,1\n            2,3,1\n            3,4,1\n            2,5,1\n            5,6,1\n            5,7,1\n            5,8,1\n            6,7,1\n            7,8,1\n        }\n        |\u003E Seq.map(fun (s,t,w) -\u003E\n            s,s,t,t,(float w)\n        )\n    AdjGraph.ofSeq edgeSeq\n(**\nThis graph is an adaptation of an example graph in the [networksciencebook](http://networksciencebook.com/chapter/9#modularity). \nNext we use a pre-generated color-pallet and Cytoscape.NET to visualise the graph and its communites:\n*)\n\nlet colors =    \n    [\n        \u0022#3F51B5\u0022\n        \u0022#FFC107\u0022\n        \u0022#F44336\u0022\n        \u0022##E91E63\u0022\n        \u0022#2196F3\u0022\n        \u0022#00BCD4\u0022\n        \u0022#C8E6C9\u0022\n        \u0022#9C27B0\u0022\n        \u0022#FFEB3B\u0022\n\n    ]\n\nlet renderCyGraph (nodeLabelF) (graph:AdjGraph\u003C\u0027NodeKey,\u0027NodeData,\u0027EdgeData\u003E) =\n\n    CyGraph.initEmpty ()\n    |\u003E CyGraph.withElements [\n            for (sk,s,tk,t,el) in (AdjGraph.toSeq graph) do\n                let sk, tk = (string sk), (string tk)\n                yield Elements.node sk (nodeLabelF s )\n                yield Elements.node tk (nodeLabelF t )\n                yield Elements.edge  (sprintf \u0022%s_%s\u0022 sk tk) sk tk [ ]\n        ]\n    |\u003E CyGraph.withStyle \u0022node\u0022\n        [\n            CyParam.color \u0022black\u0022\n            CyParam.label =. CyParam.label\n            CyParam.Text.Align.center\n            CyParam.Text.Outline.width 0.5\n            CyParam.Background.color   =. CyParam.color\n            CyParam.weight 100\n        ]\n\n    |\u003E CyGraph.withLayout  (\n        Layout.initBreadthfirst(Layout.LayoutOptions.Generic())\n            )  \n    |\u003E CyGraph.withZoom(CytoscapeModel.Zoom.Init(ZoomingEnabled=false))\n    |\u003E CyGraph.withSize(800, 400)\n    |\u003E Cytoscape.NET.HTML.toGraphHTML() \n\n\nrenderCyGraph (fun x -\u003E [CyParam.label x;CyParam.color colors.[x]]) louvainExampleGraph\n(*** include-it-raw ***)\n\n\n(**\nNow lets apply our Louvain Algorithm and color the nodes in accordance to their optimised community:\n*)\n\n\nlet louvainGraph =\n    Algorithms.Louvain.louvain 0.0001 id louvainExampleGraph\n\n\nrenderCyGraph (fun (a,x) -\u003E [CyParam.label x;CyParam.color colors.[x]]) louvainGraph\n(*** include-it-raw ***)"},{"uri":"https://fslab.org/Graphoscope/G_AdjGraph_4_Intro.html","title":"AdjGraph","content":"(**\n---\ntitle: AdjGraph\ncategory: Graphoscope \ncategoryindex: 1\nindex: 4 \n---\n*)\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\n#r \u0022nuget: Plotly.NET.Interactive, 4.1.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# What is AdjGraph\n\nThe AdjGraph is an undirected adaptation of the FGraph.\nIt combines the predecessors and successors into just one element called neighbours.\n\n[![](https://mermaid.ink/img/pako:eNpdjssOgjAQRX-FzAoT-AEWJgjIjo3urIuxHR7yKCltDCH8u7VijM5qcs7NzF2AS0EQQdnJB69Rae-cssGzE19icc8VjvXVC8O9d_ALG21p3m3e0cRRm-Q08I9KnEqdSlHjD878gpqqvkmjpk1kThz_Hrxp7mei-l6BAHpSPTbCll5ehIGuqScGkV0FqpYBG1abQ6PlaR44RFoZCsCMAjWlDVYKe4hK7CZan7YATRE?type=png)](https://mermaid.live/edit#pako:eNpdjssOgjAQRX-FzAoT-AEWJgjIjo3urIuxHR7yKCltDCH8u7VijM5qcs7NzF2AS0EQQdnJB69Rae-cssGzE19icc8VjvXVC8O9d_ALG21p3m3e0cRRm-Q08I9KnEqdSlHjD878gpqqvkmjpk1kThz_Hrxp7mei-l6BAHpSPTbCll5ehIGuqScGkV0FqpYBG1abQ6PlaR44RFoZCsCMAjWlDVYKe4hK7CZan7YATRE)\n\n# Quickstart \n## Creating an empty graph and filling it with single elements\nBegin by creating an empty graph,meaning a data structure with no nodes or edges. \nThen populate the graph with single elements, individual nodes are added one by one, and edges can be introduced to establish connections between them.\n*)\n\nopen Graphoscope\nopen AdjGraph\n\nlet graphToFillAdjGraph =\n\n    AdjGraph.empty\n    |\u003E AdjGraph.addNode 1 \u00221\u0022\n    |\u003E AdjGraph.addNode 2 \u00222\u0022\n    |\u003E AdjGraph.addEdge 1 2 1.\n\n\n(***hide***)\nlet graphToFillOutput = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022 (AdjGraph.countNodes graphToFillAdjGraph) (AdjGraph.countEdges graphToFillAdjGraph)\n(*** include-value: graphToFillOutput ***)\n\n(**    \n# Working with Graphs\n\n## Creating a Graph using AdjGraph\n### Creating an empty graph and add collections of elements\nAnother way of creating a graph is by filling it with collections of nodes and edges as seen below:\n\n*)\nlet graphToFillAdjGraph\u0027 =\n    \n    let nodes = List.init 100 (fun x -\u003E x,$\u0022{x}\u0022)\n\n    let edges = List.init 45 (fun x -\u003E x,x*2,1.)\n\n    AdjGraph.empty\n    |\u003E AdjGraph.addNodes nodes\n    |\u003E AdjGraph.addEdges edges\n\n(***hide***)\nlet graphToFill2Output = sprintf \u0022You have created a graph with %i nodes and %i edges\u0022(AdjGraph.countNodes graphToFillAdjGraph\u0027) (AdjGraph.countEdges graphToFillAdjGraph\u0027)\n(*** include-value: graphToFill2Output ***)\n\n(**\n### Removing Nodes and Edges\nTo remove Nodes or Edges you can just use the remove functions provided:\n*)\nlet graphWithRemovedElementsAdjGraph =\n    graphToFillAdjGraph\u0027\n    |\u003E AdjGraph.removeEdge 1 2\n    |\u003E AdjGraph.removeNode 0\n\n(***hide***)\nlet removing = sprintf \u0022You have reduced the graph to %i nodes and %i edges\u0022 (AdjGraph.countNodes graphWithRemovedElementsAdjGraph) (AdjGraph.countEdges graphWithRemovedElementsAdjGraph)\n(*** include-value: removing ***)\n\n(**\n##\n\n# From Data\n## Import a graph  \n\nThis is the well-known and much-used Zachary karate club network. The data was collected from the members of a university karate club by Wayne Zachary in 1977. \nEach node represents a member of the club, and each edge represents a tie between two members of the club. \nThe network is undirected. \n*)\n\nopen FSharp.Data\n\nlet getElementOfFile (fullpath: string) (delimiter: string) (headerRows: int) (weightsIncluded: bool)  = \n        let rows  = CsvFile.Load(fullpath, delimiter, skipRows = headerRows, hasHeaders = false).Rows\n        rows\n        |\u003E Seq.map (fun row -\u003E int row[0],int row[0], int row[1],int row[1], if weightsIncluded then float row[2] else 1.0)\n\n\nlet karateFileAdj= __SOURCE_DIRECTORY__ \u002B \u0022/../tests/Graphoscope.Tests/ReferenceGraphs/zachary.txt\u0022\n\nlet karateGraphAdj = \n  let g = AdjGraph.empty\u003Cint,int,float\u003E\n  getElementOfFile karateFileAdj \u0022 \u0022 2 false\n  |\u003E Seq.iter(fun (s1,s2,t1,t2,w: float) -\u003E AdjGraph.addElement s1 s2 t1 t2 w g|\u003Eignore)\n  g\n\n\n(**\nlet\u0027s use Cytoscape.NET for visualization:\n*)\n\nopen Cytoscape.NET\nlet vizGraph =\n    CyGraph.initEmpty ()\n    |\u003E CyGraph.withElements [\n            for (sk,s,tk,t,el) in (AdjGraph.toSeq karateGraphAdj) do\n                let sk, tk = (string sk), (string tk)\n                yield Elements.node sk [ CyParam.label s ]\n                yield Elements.node tk [ CyParam.label t ]\n                yield Elements.edge  (sprintf \u0022%s_%s\u0022 sk tk) sk tk [ CyParam.label el ]\n        ]\n    |\u003E CyGraph.withStyle \u0022node\u0022     \n        [\n            CyParam.content =. CyParam.label\n            CyParam.color \u0022#A00975\u0022\n        ]\n    |\u003E CyGraph.withLayout(Cytoscape.NET.Layout.initBreadthfirst(id))\n\n(***hide***)\nvizGraph \n|\u003E CyGraph.withZoom(CytoscapeModel.Zoom.Init(ZoomingEnabled=false)) \n|\u003E CyGraph.withSize(800, 400) \n|\u003E HTML.toGraphHTML()\n(*** include-it-raw ***)\n"},{"uri":"https://fslab.org/Graphoscope/M_3_Loops.html","title":"Loops","content":"(**\n---\ntitle: Loops\ncategory: Measures \ncategoryindex: 2\nindex: 3 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Intoduction to Measures using FGraph\nGraphoscope provides a comprehensive set of measurement tools designed to analyze, quantify, and interpret the features of graphs. \nThese measurements offer valuable insights into the topology, connectivity, and dynamics of your networks. \nWhether you are exploring social connections, optimizing communication pathways, or studying the spread of diseases, our graph measurement functionalities are here to simplify your analysis and decision-making processes.\n## Creating a graph by reading a complete graph representation as one.\nStep 1 is the loading of our [example graph](http://konect.cc/networks/moreno_rhesus/), sourced from [The KONECT Project](http://konect.cc) describing the grooming interactions between rhesus monkeys.\n*)\n(***hide***)\nopen Graphoscope\nopen FSharpAux.IO\nopen FSharpAux.IO.SchemaReader.Attribute\nopen FSharp.Data\n\nlet file = __SOURCE_DIRECTORY__ \u002B \u0022/../tests/Graphoscope.Tests/ReferenceGraphs/out.moreno_rhesus_rhesus.txt\u0022\n\nlet monkeyGraphLoop =\n    CsvFile.Load(file, \u0022 \u0022, skipRows = 2, hasHeaders = false).Rows\n    |\u003E Seq.map (fun row -\u003E \n                int row[0],int row[0], int row[1],int row[1], float row[2])\n    |\u003E FGraph.ofSeq\n\n(**\n## Loops\nThe loop count of a graph, also known as the number of self-loops, refers to the number of edges in the graph that connect a node to itself. \nWhile some may consider self-loops as noise or artifacts, in other cases, they offer valuable insights into the system being modeled and form an integral part of the graph\u0027s structure.\n*)\n\nlet loopCount = Measures.Loop.loopCount monkeyGraphLoop\n\n(***hide***) \nlet loop = sprintf \u0022The graph has %i loops\u0022loopCount\n(*** include-value: loop ***)"},{"uri":"https://fslab.org/Graphoscope/M_4_CentralityMeasures.html","title":"Centrality","content":"(**\n---\ntitle: Centrality\ncategory: Measures \ncategoryindex: 2\nindex: 4 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022nuget: Cytoscape.NET, 0.2.0\u0022\n#r \u0022nuget: OptimizedPriorityQueue, 5.1.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Intoduction to GraphCentrality using FGraph\nGraph centrality is a concept used in network analysis to identify and measure the relative importance or significance of nodes within a graph. \nIt helps us understand which nodes play a central role in the network, indicating their influence, importance, or prominence. \nCentrality measures can be applied to various types of networks, including social networks, transportation networks, communication networks, and more.\n## Creating a graph by reading a complete graph representation as one.\nStep 1 is the creation of a graph example where we can visualise the graph centrality.\nWe will visualise the graph via Cytopscape\n*)\nopen Graphoscope\nopen Cytoscape.NET\nopen FSharpAux\n\nlet centralityEdges =\n    seq{\n        1,1,2,2,1.\n        1,1,4,4,1.\n        1,1,5,5,1.\n        1,1,6,6,1.\n        2,2,3,3,1.\n    }\n\nlet centralityGraph = AdjGraph.ofSeq centralityEdges\n\nlet renderCyGraph (nodeLabelF:int -\u003E CyParam.CyStyleParam ) =\n\n    CyGraph.initEmpty ()\n    |\u003E CyGraph.withElements [\n            for (sk,s,tk,t,el) in (AdjGraph.toSeq centralityGraph) do\n                let sk, tk = (string sk), (string tk)\n                yield Elements.node sk [ nodeLabelF s ]\n                yield Elements.node tk [ nodeLabelF t ]\n                yield Elements.edge  (sprintf \u0022%s_%s\u0022 sk tk) sk tk [ ]\n        ]\n    |\u003E CyGraph.withStyle \u0022node\u0022\n        [\n            CyParam.content =. CyParam.label\n            CyParam.color \u0022#A00975\u0022\n        ]\n    |\u003E CyGraph.withStyle \u0022edge\u0022\n        [\n            CyParam.content =. CyParam.label\n            CyParam.Curve.style \u0022bezier\u0022\n            CyParam.color \u0022#438AFE\u0022\n        ]\n    |\u003E CyGraph.withLayout  (\n        Layout.initBreadthfirst(Layout.LayoutOptions.Generic())\n            )  \n    |\u003E CyGraph.withZoom(CytoscapeModel.Zoom.Init(ZoomingEnabled=false))\n    |\u003E CyGraph.withSize(800, 400)\n    |\u003E Cytoscape.NET.HTML.toGraphHTML() \n\nrenderCyGraph (fun x -\u003E CyParam.label $\u0022Node: {x}\u0022)\n(*** include-it-raw ***)\n(**\n## Closeness Centrality\nCloseness centrality assesses how quickly a node can reach all other nodes in the network. \nNodes with high closeness centrality are considered central because they are close to many other nodes in terms of geodesic distance (the shortest path).\n*)\n\nlet closenessCentrality =\n    Measures.ClosenessCentrality.ofAdjGraph id centralityGraph\n\n\nrenderCyGraph (fun x -\u003E CyParam.label ($\u0022Node: {x};Closeness: {((closenessCentrality.Item x)|\u003EMath.round 3)}\u0022))\n(*** include-it-raw ***)\n\n(**\n## Betweenness Centrality\nBetweenness centrality measures how often a node lies on the shortest path between pairs of other nodes. \nNodes with high betweenness centrality act as bridges or intermediaries in the network.\n*)\n\nlet betweenness = \n    Measures.BetweennessCentrality.ofAdjGraph id centralityGraph\n\nrenderCyGraph (fun x -\u003E CyParam.label ($\u0022Node: {x};Betweenness: {betweenness.Item x}\u0022))\n(*** include-it-raw ***)\n\n(**\n## Node Eccentricity\nNode eccentricity is a concept used in graph theory and network analysis to measure the centrality or importance of a node within a graph. \nIt quantifies how far a node is from the farthest other node in the network in terms of the shortest path length. \nIn other words, it represents the maximum distance between a node and any other node in the graph.\n*)\n\nlet eccentricity (node:\u0027NodeKey) =\n    Measures.Eccentricity.ofAdjGraphNode id centralityGraph node\n\nrenderCyGraph (fun x -\u003E CyParam.label ($\u0022Node: {x};Eccentricity: {eccentricity x}\u0022))\n(*** include-it-raw ***)\n\n\n(**\n## Distances\nAnother important metric to take into account involves statistics related to all the shortest paths within a graph. \nThese statistics encompass the Diameter (which represents the longest among the shortest paths), the Radius (representing the shortest of the shortest paths), and the average path length.\nAs these metrics rely on information from all the shortest paths within a graph, they are fundamentally derived from the results of the Floyd-Warshall algorithm for calculating shortest paths.\nTherefore it is wise to calculate this once and reuse it for the calulations.\n*)\n\n\nlet diameter =\n    Measures.Diameter.ofAdjGraph id centralityGraph\n\nlet radius =\n    Measures.Radius.ofAdjGraph id  centralityGraph\n\n(***hide***)\n$\u0022The given graph has a diameter of {diameter} and a radius of {radius}.\u0022\n(*** include-it***)"},{"uri":"https://fslab.org/Graphoscope/R_BarabasiAlbert.html","title":"Barab\u00E1si-Albert","content":"(**\n---\ntitle: Barab\u00E1si-Albert\ncategory: Random Graph \ncategoryindex: 4\nindex: 4 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Random graph models\n## Barab\u00E1si-Albert model\n\nThe Barab\u00E1si-Albert (BA) model is a popular network growth model used to generate random scale-free networks.  \nIt provides a valuable tool for generating synthetic networks that exhibit similar properties to many natural and man-made networks, mainly a scale-free character.\n*)\n\nopen Graphoscope\nopen Graphoscope.RandomModels\nlet N = 50\n\nlet edgesPerIteration = 5\n\n// let myBarabasiAlbert = RandomModels.BarabasiAlbert.initFGraph  N edgesPerIteration id id (fun x -\u003E 1.) FGraph.empty\n\n//printfn\u0022You have created a graph with %i nodes and %i edges\u0022(FGraph.countNodes myBarabasiAlbert) (FGraph.countEdges myBarabasiAlbert)\n"},{"uri":"https://fslab.org/Graphoscope/M_2_NetworkDensity.html","title":"Network Density","content":"(**\n---\ntitle: Network Density\ncategory: Measures \ncategoryindex: 2\nindex: 2 \n---\n*)\n\n(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpAux.IO, 2.0.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Intoduction to Measures using FGraph\nGraphoscope provides a comprehensive set of measurement tools designed to analyze, quantify, and interpret the features of graphs. \nThese measurements offer valuable insights into the topology, connectivity, and dynamics of your networks. \nWhether you are exploring social connections, optimizing communication pathways, or studying the spread of diseases, our graph measurement functionalities are here to simplify your analysis and decision-making processes.\n## Creating a graph by reading a complete graph representation as one.\nStep 1 is the loading of our [example graph](http://konect.cc/networks/moreno_rhesus/), sourced from [The KONECT Project](http://konect.cc) describing the grooming interactions between rhesus monkeys.\n*)\n(***hide***)\nopen Graphoscope\nopen FSharpAux.IO\nopen FSharpAux.IO.SchemaReader.Attribute\nopen FSharp.Data\n\nlet file = __SOURCE_DIRECTORY__ \u002B \u0022/../tests/Graphoscope.Tests/ReferenceGraphs/out.moreno_rhesus_rhesus.txt\u0022\n\nlet monkeyGraphDens =\n    CsvFile.Load(file, \u0022 \u0022, skipRows = 2, hasHeaders = false).Rows\n    |\u003E Seq.map (fun row -\u003E \n                int row[0],int row[0], int row[1],int row[1], float row[2])\n    |\u003E FGraph.ofSeq\n\n(**\n\n## NetworkDensity\nNetwork density measures the proportion of connections or edges present in a network relative to the total possible number of connections. \nIt quantifies the level of interconnectedness between nodes in the network and carries several key implications for the Connectivity of the graph.\n*)\nlet networkDensity = Measures.GraphDensity.compute monkeyGraphDens\n\n(***hide***)\nlet density = sprintf \u0022The network density of the monkey graph is %f\u0022 networkDensity\n(*** include-value: density ***)"},{"uri":"https://fslab.org/Graphoscope/R_RandomGraphs.html","title":"Random Graph generation","content":"(**\n---\ntitle: Random Graph generation\ncategory: Random Graph \ncategoryindex: 4\nindex: 1 \n---\n\n# Random graph models\n## Motivation and overview\nIn every implementation workflow, there comes the point where you have to test wether everything works as expexted or not.\nFor this, a matching test set is necessary. In some cases (e.g. List sorting algorithms) creating those test sets is done in a matter of seconds.\nIn other cases, especially if the data you work with is more than one dimensional, it can get quite tedious.\nTo this effect, FSharp.FGl comes equipped with implementations of random graph generation models.  \nIn this tutorial I want to introduce you to the models implemented and how to generate graphs with the given functions:\n    \n* Gilbert model\n\n* Barab\u00E1si-Albert model\n\n* Bollob\u00E1s-Riordan methode \n*)"}]