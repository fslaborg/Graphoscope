[{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph.html","title":"Graphoscope.DiGraph","content":"Algorithms \nBuilders \nConverters \nGenerators \nMeasures \nOperations \nDiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph.html","title":"Graphoscope.Graph","content":"Algorithms \nBuilders \nConverters \nGenerators \nMeasures \nOperations \nGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-utility.html","title":"Graphoscope.Utility","content":"Import"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-algorithms.html","title":"Algorithms","content":"Algorithms \n \nAlgorithms.Dijkstra \nDijkstra \nAlgorithms.FloydWarshall \nFloydWarshall"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-algorithms-dijkstra.html","title":"Dijkstra","content":"Dijkstra \n \nDijkstra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDijkstra.Compute \nCompute \nDijkstra.ComputeAllPairs \nComputeAllPairs"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-algorithms-dijkstra.html#\u0060\u0060.ctor\u0060\u0060","title":"Dijkstra.\u0060\u0060.ctor\u0060\u0060","content":"Dijkstra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-algorithms-dijkstra.html#Compute","title":"Dijkstra.Compute","content":"Dijkstra.Compute \nCompute \n \n Computes shortest paths from \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Esource\u003C/span\u003E for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Dijkstra\u0027s algorithm in parallel.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-algorithms-dijkstra.html#ComputeAllPairs","title":"Dijkstra.ComputeAllPairs","content":"Dijkstra.ComputeAllPairs \nComputeAllPairs \n \n Computes all-pairs shortest paths for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Dijkstra algorithm in parallel.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-algorithms-floydwarshall.html","title":"FloydWarshall","content":"FloydWarshall \n \nFloydWarshall.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFloydWarshall.Compute \nCompute"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-algorithms-floydwarshall.html#\u0060\u0060.ctor\u0060\u0060","title":"FloydWarshall.\u0060\u0060.ctor\u0060\u0060","content":"FloydWarshall.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-algorithms-floydwarshall.html#Compute","title":"FloydWarshall.Compute","content":"FloydWarshall.Compute \nCompute \n \n Computes all-pairs shortest paths for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Floyd-Warshall algorithm.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-builders.html","title":"Builders","content":"Builders \n \nBuilders.create \ncreate \nBuilders.createFromNodes \ncreateFromNodes \nBuilders.createFromEdges \ncreateFromEdges"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-builders.html#create","title":"Builders.create","content":"Builders.create \ncreate \n \n Create a new empty directed graph with nodes and edges of the specified type.\n The type specified for the nodes must support equality operations. \n Edge data can be used to specify weights of edges or other edge labels. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-builders.html#createFromNodes","title":"Builders.createFromNodes","content":"Builders.createFromNodes \ncreateFromNodes \n \n Builds a graph from a list of nodes. \n The edges will then need to be added\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-builders.html#createFromEdges","title":"Builders.createFromEdges","content":"Builders.createFromEdges \ncreateFromEdges \n \n Builds a graph from a list of edges. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-converters.html","title":"Converters","content":"Converters \n \nConverters.toAdjacencyMatrix \ntoAdjacencyMatrix"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-converters.html#toAdjacencyMatrix","title":"Converters.toAdjacencyMatrix","content":"Converters.toAdjacencyMatrix \ntoAdjacencyMatrix \n \n Converts the DiGraph to an Adjacency Matrix\n This is preliminary step in many graph algorithms such as Floyd-Warshall. \n The operation assumes edge data types of float in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-generators.html","title":"Generators","content":"Generators \n \nGenerators.complete \ncomplete \nGenerators.randomGnp \nrandomGnp"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-generators.html#complete","title":"Generators.complete","content":"Generators.complete \ncomplete \n \n Generates a complete digraph of size \u0060n\u0060.\n EdgeData is set to \u00601.0\u0060. This in effect looks like an unweighted graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-generators.html#randomGnp","title":"Generators.randomGnp","content":"Generators.randomGnp \nrandomGnp \n \n Generates a random digraph of size \u0060n\u0060.\n It will create a graph of specified size and edge density. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-measures.html","title":"Measures","content":"Measures \n \nMeasures.getShortestPath \ngetShortestPath \nMeasures.getMeanDegree \ngetMeanDegree \nMeasures.getVolume \ngetVolume \nMeasures.getSize \ngetSize \nMeasures.getDegreeDistribution \ngetDegreeDistribution"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-measures.html#getShortestPath","title":"Measures.getShortestPath","content":"Measures.getShortestPath \ngetShortestPath \n \n Returns the distance in numebr of directed edges between two nodes.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-measures.html#getMeanDegree","title":"Measures.getMeanDegree","content":"Measures.getMeanDegree \ngetMeanDegree \n \n Get the mean degree of the graph. \n This is an undirected measure so inbound links add to a nodes degree.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-measures.html#getVolume","title":"Measures.getVolume","content":"Measures.getVolume \ngetVolume \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-measures.html#getSize","title":"Measures.getSize","content":"Measures.getSize \ngetSize \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-measures.html#getDegreeDistribution","title":"Measures.getDegreeDistribution","content":"Measures.getDegreeDistribution \ngetDegreeDistribution \n \n Returns the degree distribution of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html","title":"Operations","content":"Operations \n \nOperations.getNodes \ngetNodes \nOperations.addNode \naddNode \nOperations.addManyNodes \naddManyNodes \nOperations.removeNode \nremoveNode \nOperations.addEdge \naddEdge \nOperations.getOutEdges \ngetOutEdges \nOperations.getAllEdges \ngetAllEdges \nOperations.getInEdges \ngetInEdges \nOperations.addManyEdges \naddManyEdges \nOperations.findEdge \nfindEdge \nOperations.normalizeOutEdges \nnormalizeOutEdges \nOperations.removeEdge \nremoveEdge"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#getNodes","title":"Operations.getNodes","content":"Operations.getNodes \ngetNodes \n \n Returns all nodes in te graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#addNode","title":"Operations.addNode","content":"Operations.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#addManyNodes","title":"Operations.addManyNodes","content":"Operations.addManyNodes \naddManyNodes \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#removeNode","title":"Operations.removeNode","content":"Operations.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#addEdge","title":"Operations.addEdge","content":"Operations.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#getOutEdges","title":"Operations.getOutEdges","content":"Operations.getOutEdges \ngetOutEdges \n \n Returns the outbound edges for given node\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#getAllEdges","title":"Operations.getAllEdges","content":"Operations.getAllEdges \ngetAllEdges \n \n Returns the all outbound edges in the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#getInEdges","title":"Operations.getInEdges","content":"Operations.getInEdges \ngetInEdges \n \n Returns the outbound edges for given node\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#addManyEdges","title":"Operations.addManyEdges","content":"Operations.addManyEdges \naddManyEdges \n \n Adds many edges to a graph at once\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#findEdge","title":"Operations.findEdge","content":"Operations.findEdge \nfindEdge \n \n Tries to find an edge between the specified nodes. Raises KeyNotFoundException if no such edge exists in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#normalizeOutEdges","title":"Operations.normalizeOutEdges","content":"Operations.normalizeOutEdges \nnormalizeOutEdges \n \n Normalises the weights of outbound edges from each node in a graph.\n The function assumes that the edge data type of the graph will be float. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-operations.html#removeEdge","title":"Operations.removeEdge","content":"Operations.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-digraph-2.html","title":"DiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E","content":"DiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E \n \nDiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-digraph-digraph-2.html#\u0060\u0060.ctor\u0060\u0060","title":"DiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"DiGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-algorithms.html","title":"Algorithms","content":"Algorithms \n \nAlgorithms.Dijkstra \nDijkstra \nAlgorithms.FloydWarshall \nFloydWarshall"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-algorithms-dijkstra.html","title":"Dijkstra","content":"Dijkstra \n \nDijkstra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDijkstra.Compute \nCompute \nDijkstra.ComputeAllPairs \nComputeAllPairs"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-algorithms-dijkstra.html#\u0060\u0060.ctor\u0060\u0060","title":"Dijkstra.\u0060\u0060.ctor\u0060\u0060","content":"Dijkstra.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-algorithms-dijkstra.html#Compute","title":"Dijkstra.Compute","content":"Dijkstra.Compute \nCompute \n \n Computes shortest paths from \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Esource\u003C/span\u003E for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Dijkstra\u0027s algorithm in parallel.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-algorithms-dijkstra.html#ComputeAllPairs","title":"Dijkstra.ComputeAllPairs","content":"Dijkstra.ComputeAllPairs \nComputeAllPairs \n \n Computes all-pairs shortest paths for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Dijkstra algorithm in parallel.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-algorithms-floydwarshall.html","title":"FloydWarshall","content":"FloydWarshall \n \nFloydWarshall.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFloydWarshall.Compute \nCompute"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-algorithms-floydwarshall.html#\u0060\u0060.ctor\u0060\u0060","title":"FloydWarshall.\u0060\u0060.ctor\u0060\u0060","content":"FloydWarshall.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-algorithms-floydwarshall.html#Compute","title":"FloydWarshall.Compute","content":"FloydWarshall.Compute \nCompute \n \n Computes all-pairs shortest paths for \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Egraph\u003C/span\u003E using Floyd-Warshall algorithm.\n  \nIf there isn\u0027t a path between two edges, the distance is set to \u0060infinity\u0060."},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-builders.html","title":"Builders","content":"Builders \n \nBuilders.create \ncreate \nBuilders.createFromNodes \ncreateFromNodes \nBuilders.createFromEdges \ncreateFromEdges"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-builders.html#create","title":"Builders.create","content":"Builders.create \ncreate \n \n Create a new empty directed graph with nodes and edges of the specified type.\n The type specified for the nodes must support equality operations. \n Edge data can be used to specify weights of edges or other edge labels. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-builders.html#createFromNodes","title":"Builders.createFromNodes","content":"Builders.createFromNodes \ncreateFromNodes \n \n Builds a graph from a list of nodes. \n The edges will then need to be added\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-builders.html#createFromEdges","title":"Builders.createFromEdges","content":"Builders.createFromEdges \ncreateFromEdges \n \n Builds a graph from a list of edges. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-converters.html","title":"Converters","content":"Converters \n \nConverters.toAdjacencyMatrix \ntoAdjacencyMatrix"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-converters.html#toAdjacencyMatrix","title":"Converters.toAdjacencyMatrix","content":"Converters.toAdjacencyMatrix \ntoAdjacencyMatrix \n \n Converts the Graph to an Adjacency Matrix\n This is preliminary step in many graph algorithms such as Floyd-Warshall. \n The operation assumes edge data types of float in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-generators.html","title":"Generators","content":"Generators \n \nGenerators.complete \ncomplete \nGenerators.randomGnp \nrandomGnp"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-generators.html#complete","title":"Generators.complete","content":"Generators.complete \ncomplete \n \n Generates a complete Graph of size \u0060n\u0060.\n EdgeData is set to \u00601.0\u0060. This in effect looks like an unweighted graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-generators.html#randomGnp","title":"Generators.randomGnp","content":"Generators.randomGnp \nrandomGnp \n \n Generates a random Graph of size \u0060n\u0060.\n It will create a graph of specified size and edge density. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-measures.html","title":"Measures","content":"Measures \n \nMeasures.getShortestPath \ngetShortestPath \nMeasures.getVolume \ngetVolume \nMeasures.getSize \ngetSize \nMeasures.getMeanDegree \ngetMeanDegree \nMeasures.getDegreeDistribution \ngetDegreeDistribution"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-measures.html#getShortestPath","title":"Measures.getShortestPath","content":"Measures.getShortestPath \ngetShortestPath \n \n Returns the distance in numebr of directed edges between two nodes.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-measures.html#getVolume","title":"Measures.getVolume","content":"Measures.getVolume \ngetVolume \n \n Gets the total number of edges of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-measures.html#getSize","title":"Measures.getSize","content":"Measures.getSize \ngetSize \n \n Gets the total number of nodes of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-measures.html#getMeanDegree","title":"Measures.getMeanDegree","content":"Measures.getMeanDegree \ngetMeanDegree \n \n Get the mean degree of the graph. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-measures.html#getDegreeDistribution","title":"Measures.getDegreeDistribution","content":"Measures.getDegreeDistribution \ngetDegreeDistribution \n \n Returns the degree distribution of the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html","title":"Operations","content":"Operations \n \nOperations.getNodes \ngetNodes \nOperations.addNode \naddNode \nOperations.addManyNodes \naddManyNodes \nOperations.removeNode \nremoveNode \nOperations.addEdge \naddEdge \nOperations.getEdges \ngetEdges \nOperations.getAllEdges \ngetAllEdges \nOperations.addManyEdges \naddManyEdges \nOperations.findEdge \nfindEdge \nOperations.normalizeEdges \nnormalizeEdges \nOperations.removeEdge \nremoveEdge"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#getNodes","title":"Operations.getNodes","content":"Operations.getNodes \ngetNodes \n \n Returns all nodes in te graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#addNode","title":"Operations.addNode","content":"Operations.addNode \naddNode \n \n Adds a new node to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#addManyNodes","title":"Operations.addManyNodes","content":"Operations.addManyNodes \naddManyNodes \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#removeNode","title":"Operations.removeNode","content":"Operations.removeNode \nremoveNode \n \n Removes a node from the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#addEdge","title":"Operations.addEdge","content":"Operations.addEdge \naddEdge \n \n Adds a new edge to the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#getEdges","title":"Operations.getEdges","content":"Operations.getEdges \ngetEdges \n \n Returns the edges for given node\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#getAllEdges","title":"Operations.getAllEdges","content":"Operations.getAllEdges \ngetAllEdges \n \n Returns the all edges in the graph\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#addManyEdges","title":"Operations.addManyEdges","content":"Operations.addManyEdges \naddManyEdges \n \n Adds many edges to a graph at once\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#findEdge","title":"Operations.findEdge","content":"Operations.findEdge \nfindEdge \n \n Tries to find an edge between the specified nodes. Raises KeyNotFoundException if no such edge exists in the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#normalizeEdges","title":"Operations.normalizeEdges","content":"Operations.normalizeEdges \nnormalizeEdges \n \n Normalises the weights of edges for each node in a graph.\n The function assumes that the edge data type of the graph will be float. \n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-operations.html#removeEdge","title":"Operations.removeEdge","content":"Operations.removeEdge \nremoveEdge \n \n Removes an edge to the graph.\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-graph-2.html","title":"Graph\u003C\u0027NodeKey, \u0027EdgeData\u003E","content":"Graph\u003C\u0027NodeKey, \u0027EdgeData\u003E \n \nGraph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-graph-graph-2.html#\u0060\u0060.ctor\u0060\u0060","title":"Graph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Graph\u003C\u0027NodeKey, \u0027EdgeData\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-utility-import.html","title":"Import","content":"Import \n \nImport.importDirectedGraph \nimportDirectedGraph \nImport.importUnDirectedGraph \nimportUnDirectedGraph"},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-utility-import.html#importDirectedGraph","title":"Import.importDirectedGraph","content":"Import.importDirectedGraph \nimportDirectedGraph \n \n Imports and builds a Directed graph from an edge list file\n "},{"uri":"https://fslab.org/Graphoscope/reference/graphoscope-utility-import.html#importUnDirectedGraph","title":"Import.importUnDirectedGraph","content":"Import.importUnDirectedGraph \nimportUnDirectedGraph \n \n Imports and builds a Undirected graph from an edge list file\n "},{"uri":"https://fslab.org/Graphoscope/index.html","title":"Graphoscope\r\n","content":"(*** hide ***)\n\n(*** condition: prepare ***)\n#r \u0022nuget: FSharpAux.Core, 2.0.0\u0022\n#r \u0022nuget: FSharpx.Collections, 3.1.0\u0022\n#r \u0022nuget: FSharp.Data, 6.2.0\u0022\n#r \u0022../src/Graphoscope/bin/Release/netstandard2.0/Graphoscope.dll\u0022\n\n(*** condition: ipynb ***)\n#if IPYNB\n#r \u0022nuget: Graphoscope, {{fsdocs-package-version}}\u0022\n#endif // IPYNB\n\n(**\n# Graphoscope\n\nThe Graphoscope project aims to provide a rigorous and performant tool for Network Science. \nIt is aimed at anyone who works with Graphs/Networks and does not require a strong knowledge of F# to get started. \n\n# Getting Started \n\n## Prerequisites \n\nTo set up a dev environment, we recommend [VSCode](https://code.visualstudio.com/) with the [Ionide](https://marketplace.visualstudio.com/items?itemName=Ionide.Ionide-fsharp) plugin  \nYou will also need [DotNet 6](https://dotnet.microsoft.com/en-us/download/dotnet/6.0) installed.\n\nThe library is designed primarily for use in an fsharp scripting environment using .fsx files. \nBut it also works well in [notebooks](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode).\nThis [video](https://www.youtube.com/watch?v=1ROKvmcOloo\u0026list=PLdo4fOcmZ0oUFghYOp89baYFBTGxUkC7Z\u0026index=3) has a good walk through of setting your environment. \n\n## Importing a graph\nThe library is organised by Graph type. Currently it supports Directed and Undirected graphs, and other types, such as multiplex, will be supported in future. \n\nFor illustration, we will import a directed graph from The [KONECT Project](http://konect.cc/) website. This is an excellent resource with many graphs in an edge list based format which is simple\nto import and analyse using Graphoscope. We will start by importing a [graph](http://konect.cc/networks/moreno_rhesus/) describing the grooming interactions between rhesus monkeys.\n\nCreate a monkeys.fsx and run the following code to import and print some basic measures. Further documention of DiGraph functionality is [here](reference/graphoscope-digraph.html)\n*)\n\nopen Graphoscope.Utility.Import\nopen Graphoscope.DiGraph.Measures\n\nlet file = __SOURCE_DIRECTORY__ \u002B \u0022/data/out.moreno_rhesus_rhesus.txt\u0022\nlet monkeyGraph = importDirectedGraph file \u0022 \u0022 2 false\n\nprintf \u0022Successfully imported the graph! It has %i nodes and %i edges. The average degree is %f \u0022 \n  (getSize monkeyGraph) (getVolume monkeyGraph) (getMeanDegree monkeyGraph)\n(*** include-output ***)\n\n(**\nWe can also import undirected graphs using the [Graph](reference/graphoscope-graph.html) namespace. These examples use the [Karate club](http://konect.cc/networks/ucidata-zachary/) graph.\n*)\n\nopen Graphoscope.Graph\nopen Graphoscope.Graph.Measures\n\nlet karateFile= __SOURCE_DIRECTORY__ \u002B \u0022/data/zachary.txt\u0022\nlet karateGraph = importUnDirectedGraph karateFile \u0022 \u0022 2 false\ngetNodes karateGraph\n\nprintf \u0022Successfully imported the undirected karate graph! It has %i nodes and %i edges. The average degree is %f \u0022 \n  (getSize karateGraph) (getVolume karateGraph) (getMeanDegree karateGraph)\n(*** include-output ***)\n(**\n## Creating a Graph\nWe can also build a graph from scratch. Either by passing an array of edges:\n*)\n[|(0, 1, 1.0); (0, 2, 1.0); (1, 1, 1.0); (1, 3, 1.0); (3, 2, 1.0); (4, 0, 1.0)|]\n|\u003E Builders.createFromEdges\n(**\nor by creating an empty graph and adding the nodes and edges one by one. \nThe int and float after the \u0022create\u0022 define the type of the nodes and edges.\n*)\n\nlet emptyGraph = Builders.create\u003Cint, float\u003E()\naddNode emptyGraph 1\naddNode emptyGraph 2\naddNode emptyGraph 3\nlet edge = (1,3, 1.0)\naddEdge emptyGraph edge\n\nprintf \u0022Manually created a graph with %i nodes\u0022 (getSize emptyGraph)\n(*** include-output ***)\n(**\n## Algorithms\nA key aim of Graposcope is to provide highly performant graph analysis. \nCurrently it contains implementations of Dijkstra, including a parallelised version, and Floyd-Warshall.\n\nWe can get the shortest path between two nodes as follows \n*)\ngetShortestPath 26 16 karateGraph\n(**\nAlternatively you can return all the shortest paths for every pair of nodes using parrallel Dijkstra as follows \n*)\nopen Graphoscope.Graph.Algorithms\nlet paths = Dijkstra.ComputeAllPairs karateGraph\n(***include-value:paths***)\n(**\nOr with Floyd-Warshall\n*)\nFloydWarshall.Compute karateGraph\n(**\nImplementations of both algorithms are also available in the Digraph namespace.\n\nThese algorthms both operate on an Adjacency Matrix and a function for converting graphs to this data structure is provided in the Converters modules. \nIt can be executed as follows. \n*)\nopen Graphoscope.DiGraph.Converters\nlet monkeyAdjacencyMatrix = toAdjacencyMatrix monkeyGraph\n(***include-value:monkeyAdjacencyMatrix***)\n\n(**\n## Charting\nConsider using [Plotly.NET](https://plotly.net/) for charting. Built on top of plotly.js, it is a mature library offering a wide range of customisable charts. \nHere is a basic example showing degree distribution within the Karate club. \n*)\n#r \u0022nuget: Plotly.NET, 4.1.0\u0022\nopen Plotly.NET\n\ngetDegreeDistribution karateGraph\n|\u003E Chart.Histogram\n|\u003E GenericChart.toChartHTML\n(***include-it-raw***)\n(**\n# Contributing and copyright\n\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork \nthe project and submit pull requests. If you\u0027re adding a new public API, please also \nconsider adding [samples][docs] that can be turned into a documentation. You might\nalso want to read the [library design notes][readme] to understand how it works.\n\nThe library is available under the OSI-approved MIT license, which allows modification and \nredistribution for both commercial and non-commercial purposes. For more information see the \n[License file][license] in the GitHub repository. \n\n  [docs]: https://github.com/fslaborg/Graphoscope/tree/main/docs\n  [gh]: https://github.com/fslaborg/Graphoscope\n  [issues]: https://github.com/fslaborg/Graphoscope/issues\n  [readme]: https://github.com/fslaborg/Graphoscope/blob/main/README.md\n  [license]: https://github.com/fslaborg/Graphoscope/blob/main/LICENSE\n*)"}]